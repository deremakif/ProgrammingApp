<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http</name>
  </assembly>
  <members>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>Bir özel durumu temsil eden <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi oluşturur.</summary>
      <returns>İstek bir <see cref="T:System.Web.Http.HttpConfiguration" /> örneğiyle ilişkilendirilmiş olmalıdır.İçeriği <see cref="T:System.Web.Http.HttpError" /> örneğinin serileştirilmiş bir gösterimi olan <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi.</returns>
      <param name="request">HTTP isteği.</param>
      <param name="statusCode">Yanıtın durum kodu.</param>
      <param name="exception">Özel durum.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>Bir hata iletisini temsil eden <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi oluşturur.</summary>
      <returns>İstek bir <see cref="T:System.Web.Http.HttpConfiguration" /> örneğiyle ilişkilendirilmiş olmalıdır.İçeriği <see cref="T:System.Web.Http.HttpError" /> örneğinin serileştirilmiş bir gösterimi olan <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi.</returns>
      <param name="request">HTTP isteği.</param>
      <param name="statusCode">Yanıtın durum kodu.</param>
      <param name="message">Hata iletisi.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)">
      <summary>Hata iletisiyle bir özel durumu temsil eden <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi oluşturur.</summary>
      <returns>İstek bir <see cref="T:System.Web.Http.HttpConfiguration" /> örneğiyle ilişkilendirilmiş olmalıdır.İçeriği <see cref="T:System.Web.Http.HttpError" /> örneğinin serileştirilmiş bir gösterimi olan <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi.</returns>
      <param name="request">HTTP isteği.</param>
      <param name="statusCode">Yanıtın durum kodu.</param>
      <param name="message">Hata iletisi.</param>
      <param name="exception">Özel durum.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)">
      <summary>Bir hatayı temsil eden <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi oluşturur.</summary>
      <returns>İstek bir <see cref="T:System.Web.Http.HttpConfiguration" /> örneğiyle ilişkilendirilmiş olmalıdır.İçeriği <see cref="T:System.Web.Http.HttpError" /> örneğinin serileştirilmiş bir gösterimi olan <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi.</returns>
      <param name="request">HTTP isteği.</param>
      <param name="statusCode">Yanıtın durum kodu.</param>
      <param name="error">HTTP hatası.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Model durumunda bir hatayı temsil eden <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi oluşturur.</summary>
      <returns>İstek bir <see cref="T:System.Web.Http.HttpConfiguration" /> örneğiyle ilişkilendirilmiş olmalıdır.İçeriği <see cref="T:System.Web.Http.HttpError" /> örneğinin serileştirilmiş bir gösterimi olan <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi.</returns>
      <param name="request">HTTP isteği.</param>
      <param name="statusCode">Yanıtın durum kodu.</param>
      <param name="modelState">Model durumu.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)">
      <summary>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan bir <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturur.</summary>
      <returns>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan başlatılmış bir <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">Bu yanıt iletisiyle sonuçlanan HTTP istek iletisi.</param>
      <param name="statusCode">HTTP yanıt durum kodu.</param>
      <param name="value">HTTP yanıt iletisinin içeriği.</param>
      <typeparam name="T">HTTP yanıt iletisinin türü.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan bir <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturur.</summary>
      <returns>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan başlatılmış bir <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">Bu yanıt iletisiyle sonuçlanan HTTP istek iletisi.</param>
      <param name="statusCode">HTTP yanıt durum kodu.</param>
      <param name="value">HTTP yanıt iletisinin içeriği.</param>
      <param name="formatter">Medya türü biçimlendiricisi.</param>
      <typeparam name="T">HTTP yanıt iletisinin türü.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan bir <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturur.</summary>
      <returns>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan başlatılmış bir <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">Bu yanıt iletisiyle sonuçlanan HTTP istek iletisi.</param>
      <param name="statusCode">HTTP yanıt durum kodu.</param>
      <param name="value">HTTP yanıt iletisinin içeriği.</param>
      <param name="formatter">Medya türü biçimlendiricisi.</param>
      <param name="mediaType">Medya türü üstbilgisi değeri.</param>
      <typeparam name="T">HTTP yanıt iletisinin türü.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan bir <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturur.</summary>
      <returns>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan başlatılmış bir <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">Bu yanıt iletisiyle sonuçlanan HTTP istek iletisi.</param>
      <param name="statusCode">HTTP yanıt durum kodu.</param>
      <param name="value">HTTP yanıt iletisinin içeriği.</param>
      <param name="formatter">Medya türü biçimlendiricisi.</param>
      <param name="mediaType">Medya türü.</param>
      <typeparam name="T">HTTP yanıt iletisinin türü.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan bir <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturur.</summary>
      <returns>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan başlatılmış bir <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">Bu yanıt iletisiyle sonuçlanan HTTP istek iletisi.</param>
      <param name="statusCode">HTTP yanıt durum kodu.</param>
      <param name="value">HTTP yanıt iletisinin içeriği.</param>
      <param name="mediaType">Medya türü üstbilgisi değeri.</param>
      <typeparam name="T">HTTP yanıt iletisinin türü.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)">
      <summary>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan bir <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturur.</summary>
      <returns>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan başlatılmış bir <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">Bu yanıt iletisiyle sonuçlanan HTTP istek iletisi.</param>
      <param name="statusCode">HTTP yanıt durum kodu.</param>
      <param name="value">HTTP yanıt iletisinin içeriği.</param>
      <param name="mediaType">Medya türü.</param>
      <typeparam name="T">HTTP yanıt iletisinin türü.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Web.Http.HttpConfiguration)">
      <summary>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan bir <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturur.</summary>
      <returns>İlişkilendirilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine bağlanan başlatılmış bir <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="request">Bu yanıt iletisiyle sonuçlanan HTTP istek iletisi.</param>
      <param name="statusCode">HTTP yanıt durum kodu.</param>
      <param name="value">HTTP yanıt iletisinin içeriği.</param>
      <param name="configuration">Hizmetleri çözümlemek için kullanılan bağımlılık çözümleyiciyi içeren HTTP yapılandırması.</param>
      <typeparam name="T">HTTP yanıt iletisinin türü.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.DisposeRequestResources(System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)" /> yöntemiyle eklenmiş olan <paramref name="request" /> ile ilişkili tüm izlenen kaynakları siler.</summary>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetActionDescriptor(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetClientCertificate(System.Net.Http.HttpRequestMessage)">
      <summary>Verilen HTTP isteğinden geçerli X.509 sertifikasını alır.</summary>
      <returns>Geçerli <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> ya da sertifika yoksa boş.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetConfiguration(System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen istek için <see cref="T:System.Web.Http.HttpConfiguration" /> değerini alır.</summary>
      <returns>Belirtilen isteğin <see cref="T:System.Web.Http.HttpConfiguration" /> değeri.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetCorrelationId(System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen bir <paramref name="request" /> değeriyle ilişkili bağıntı kimliği olarak atanmış olan <see cref="T:System.Guid" /> öğesini alır.Değer oluşturulur ve bu yöntem ilk kez çağrıldığında ayarlanır.</summary>
      <returns>İstek ile ilişkili bağıntı kimliğini temsil eden <see cref="T:System.Guid" /> nesnesi.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetDependencyScope(System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen istek için <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> değerini veya yoksa null değerini alır.</summary>
      <returns>Belirtilen isteğin <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> değeri veya yoksa null.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetQueryNameValuePairs(System.Net.Http.HttpRequestMessage)">
      <summary>Bir anahtar/değer çiftleri koleksiyonu için ayrıştırılmış sorgu dizesini alır.</summary>
      <returns>Bir anahtar/değer çiftleri koleksiyonu olarak sorgu dizesi.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRequestContext(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetResourcesForDisposal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen istek için <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> değerini veya yoksa null değerini alır.</summary>
      <returns>Belirtilen isteğin <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> değeri veya yoksa null.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetSynchronizationContext(System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen istek için <see cref="T:System.Threading.SynchronizationContext" /> değerini veya yoksa null değerini alır.</summary>
      <returns>Belirtilen isteğin <see cref="T:System.Threading.SynchronizationContext" /> değeri veya yoksa null.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetUrlHelper(System.Net.Http.HttpRequestMessage)">
      <summary>Bir HTTP isteği için <see cref="T:System.Web.Http.Routing.UrlHelper" /> örneği alır.</summary>
      <returns>Belirtilen HTTP isteği için başlatılan bir <see cref="T:System.Web.Http.Routing.UrlHelper" /> örneği.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsBatchRequest(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsLocal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.IDisposable})"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)">
      <summary>Belirtilen <paramref name="resource" /> değerini, <paramref name="request" /> kullanıldıktan sonra bir ana bilgisayar tarafından silinecek kaynaklar listesine ekler.</summary>
      <param name="request">
        <paramref name="resource" /> yaşam döngüsünü denetleyen HTTP isteği.</param>
      <param name="resource">
        <paramref name="request" /> silinirken silinecek olan kaynak.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetConfiguration(System.Net.Http.HttpRequestMessage,System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRequestContext(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpRequestContext)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRouteData(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRouteData)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.ShouldIncludeErrorDetail(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions">
      <summary>Bir ASP.NET işleminin HTTP yanıtının ileti uzantılarını temsil eder.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.TryGetContentValue``1(System.Net.Http.HttpResponseMessage,``0@)">
      <summary>
        <see cref="T:System.Net.Http.HttpResponseMessageExtensions" /> içeriğinin değerini almaya çalışır.</summary>
      <returns>İçeriğin değerinin alınmasının sonucu.</returns>
      <param name="response">İşlemin yanıtı.</param>
      <param name="value">İçeriğin değeri.</param>
      <typeparam name="T">Alınacak değerin türü.</typeparam>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterExtensions">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> öğelerinin bir <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> öğesine eklenmesine ilişkin uzantıları gösterir. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)"></member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary>Bir <see cref="T:System.Uri" /> içinde görünen yol uzantılarından <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> öğeleri sağlar. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>
        <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="uriPathExtension">mediaType öğesine ait uzantı. Bu değerin nokta veya joker karakter içermemesi gerekir.</param>
      <param name="mediaType">uriPathExtension değeri eşleşmişse döndürülecek olan <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="uriPathExtension">mediaType öğesine ait uzantı. Bu değerin nokta veya joker karakter içermemesi gerekir.</param>
      <param name="mediaType">uriPathExtension değeri eşleşmişse döndürülecek olan medya türü.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Bu <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> örneğinin, istek<see cref="T:System.Uri" /> öğesi için bir <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> sağlayabilip sağlayamayacağını belirten bir değer döndürür. </summary>
      <returns>Bu örnek, istekte bir dosya uzantısı eşleştirebiliyorsa 1,0 değerini, aksi taktirde 0,0 değerini döndürür.</returns>
      <param name="request">Kontrol edilecek <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary>
        <see cref="T:System.Uri" /> yol uzantısını alır. </summary>
      <returns>
        <see cref="T:System.Uri" /> yol uzantısı.</returns>
    </member>
    <member name="F:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtensionKey">
      <summary>
        <see cref="T:System.Uri" /> yol uzantısı anahtarı.</summary>
    </member>
    <member name="T:System.Web.Http.AcceptVerbsAttribute">
      <summary>Bir eylem yönteminin hangi HTTP yöntemlerine yanıt vereceğini belirten bir özniteliği temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String)">
      <summary>Yanıt verilecek eylem yöntemini kullanarak <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="method">Bir eylem yönteminin yanıt vereceği HTTP yöntemi.</param>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>HTTP eylem yönteminin yanıt vereceği <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="methods">Bir eylem yönteminin yanıt vereceği HTTP yöntemleri.</param>
    </member>
    <member name="P:System.Web.Http.AcceptVerbsAttribute.HttpMethods">
      <summary>Bir eylem yönteminin yanıt vereceği HTTP yöntemlerinin listesini alır veya ayarlar.</summary>
      <returns>Bir eylem yönteminin yanıt vereceği HTTP yöntemlerinin listesini alır veya ayarlar.</returns>
    </member>
    <member name="T:System.Web.Http.ActionNameAttribute">
      <summary>Bir eylemin adı için kullanılan bir özniteliği temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ActionNameAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.ActionNameAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="name">Eylemin adı.</param>
    </member>
    <member name="P:System.Web.Http.ActionNameAttribute.Name">
      <summary>Eylemin adını alır veya ayarlar.</summary>
      <returns>Eylemin adı.</returns>
    </member>
    <member name="T:System.Web.Http.AllowAnonymousAttribute">
      <summary>Eylemlerin ve denetleyicilerin kimlik doğrulaması sırasında <see cref="T:System.Web.Http.AuthorizeAttribute" /> tarafından atlandığını belirtir.</summary>
    </member>
    <member name="M:System.Web.Http.AllowAnonymousAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.AllowAnonymousAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="T:System.Web.Http.ApiController">
      <summary>API denetleyicisi için özellikleri ve yöntemleri tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.#ctor"></member>
    <member name="P:System.Web.Http.ApiController.ActionContext">
      <summary>Eylem bağlamını alır.</summary>
      <returns>Eylem bağlamı.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest">
      <summary>Bir <see cref="T:System.Web.Http.Results.BadRequestResult" /> oluşturur.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Results.BadRequestResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.String)">
      <summary>Belirtilen hata iletisiyle bir <see cref="T:System.Web.Http.Results.ErrorMessageResult" /> (400 Hatalı İstek) oluşturur.</summary>
      <returns>Belirtilen model durumuyla bir <see cref="T:System.Web.Http.Results.InvalidModelStateResult" />.</returns>
      <param name="message">Kullanıcıya görünen hata iletisi.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Belirtilen model durumuyla bir <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> oluşturur.</summary>
      <returns>Belirtilen model durumuyla bir <see cref="T:System.Web.Http.Results.InvalidModelStateResult" />.</returns>
      <param name="modelState">Hataya dahil edilecek model durumu.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Configuration">
      <summary>Geçerli <see cref="T:System.Web.Http.ApiController" /> öğesi için <see cref="T:System.Web.Http.HttpConfiguration" /> alır.</summary>
      <returns>Geçerli <see cref="T:System.Web.Http.ApiController" /> öğesi için <see cref="T:System.Web.Http.HttpConfiguration" /></returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Conflict">
      <summary>Bir <see cref="T:System.Web.Http.Results.ConflictResult" /> (409 Çakışma) oluşturur.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Results.ConflictResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
      <summary>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; oluşturur.</summary>
      <returns>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt;.</returns>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="value">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; oluşturur.</summary>
      <returns>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt;.</returns>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="value">Varlık gövdesinde biçimlendirilecek içerik değeri.</param>
      <param name="formatter">İçeriği biçimlendirmek için kullanılacak biçimlendirici.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; oluşturur.</summary>
      <returns>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt;.</returns>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="value">Varlık gövdesinde biçimlendirilecek içerik değeri.</param>
      <param name="formatter">İçeriği biçimlendirmek için kullanılacak biçimlendirici.</param>
      <param name="mediaType"> Content-Type üstbilgisi değeri veya biçimlendiricinin varsayılan değer seçmesi için &lt;see langword="null" /&gt;. </param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; oluşturur.</summary>
      <returns>Belirtilen değerlerle bir &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt;.</returns>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="value">Varlık gövdesinde biçimlendirilecek içerik değeri.</param>
      <param name="formatter">İçeriği biçimlendirmek için kullanılacak biçimlendirici.</param>
      <param name="mediaType">Content-Type üstbilgisinin değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ControllerContext">
      <summary>Geçerli <see cref="T:System.Web.Http.ApiController" /> öğesi için <see cref="T:System.Web.Http.HttpConfiguration" /> alır.</summary>
      <returns>Geçerli <see cref="T:System.Web.Http.ApiController" /> öğesi için <see cref="T:System.Web.Http.HttpConfiguration" /></returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Oluşturuldu) oluşturur.</summary>
      <returns>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" />.</returns>
      <param name="location">İçeriğin oluşturulduğu konum.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Oluşturuldu) oluşturur.</summary>
      <returns>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" />.</returns>
      <param name="location">İçeriğin oluşturulduğu konum.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Oluşturuldu) oluşturur.</summary>
      <returns>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" />.</returns>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Oluşturuldu) oluşturur.</summary>
      <returns>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" />.</returns>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose">
      <summary>Uygulama tarafından tanımlanan, yönetilmeyen kaynakları serbest bırakma, salma veya sıfırlama ile ilişkili görevleri gerçekleştirir.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
      <summary>Nesne tarafından kullanılan ve yönetilmeyen kaynaklar ile isteğe bağlı olarak yönetilen kaynakları serbest bırakır.</summary>
      <param name="disposing">Hem yönetilen hem de yönetilmeyen kaynakları serbest bırakmak için true; yalnızca yönetilmeyen kaynakları serbest bırakmak için false.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Tek bir HTTP işlemini zamanuyumsuz olarak yürütür.</summary>
      <returns>Yeni başlatılan görev.</returns>
      <param name="controllerContext">Tek bir HTTP işlemi için denetleyici bağlamı.</param>
      <param name="cancellationToken">HTTP işlemi için atanan iptal simgesi.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Belirtilen controllerContext ile <see cref="T:System.Web.Http.ApiController" /> örneğini başlatır.</summary>
      <param name="controllerContext">Başlatma için kullanılan <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> nesnesi.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError">
      <summary>Bir <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> (500 İç Sunucu Hatası) oluşturur.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
      <summary>Belirtilen özel durumla bir <see cref="T:System.Web.Http.Results.ExceptionResult" /> (500 İç Sunucu Hatası) oluşturur.</summary>
      <returns>Belirtilen özel durumla bir <see cref="T:System.Web.Http.Results.ExceptionResult" />.</returns>
      <param name="exception">Hataya dahil edilecek özel durum.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0)">
      <summary>Belirtilen değerle bir <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 Tamam) oluşturur.</summary>
      <returns>Belirtilen değerle bir <see cref="T:System.Web.Http.Results.JsonResult`1" />.</returns>
      <param name="content">Varlık gövdesinde serileştirilecek içerik değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 Tamam) oluşturur.</summary>
      <returns>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.JsonResult`1" />.</returns>
      <param name="content">Varlık gövdesinde serileştirilecek içerik değeri.</param>
      <param name="serializerSettings">Serileştirici ayarları.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 Tamam) oluşturur.</summary>
      <returns>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.JsonResult`1" />.</returns>
      <param name="content">Varlık gövdesinde serileştirilecek içerik değeri.</param>
      <param name="serializerSettings">Serileştirici ayarları.</param>
      <param name="encoding">İçerik kodlaması.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ModelState">
      <summary>Model bağlama işleminden sonra model durumunu alır.</summary>
      <returns>Model bağlama işleminden sonra model durumu.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.NotFound">
      <summary>Bir <see cref="T:System.Web.Http.Results.NotFoundResult" /> oluşturur.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Results.NotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok">
      <summary>Bir <see cref="T:System.Web.Http.Results.OkResult" /> (200 Tamam) oluşturur.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Results.OkResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok``1(``0)">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> oluşturur.</summary>
      <returns>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" />.</returns>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.String)">
      <summary>Belirtilen değerle bir yeniden yönlendirme sonucu (302 Bulundu) oluşturur.</summary>
      <returns>Belirtilen değerle bir yeniden yönlendirme sonucu (302 Bulundu).</returns>
      <param name="location">Yeniden yönlendirilecek konum.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.Uri)">
      <summary>Belirtilen değerle bir yeniden yönlendirme sonucu (302 Bulundu) oluşturur.</summary>
      <returns>Belirtilen değerle bir yeniden yönlendirme sonucu (302 Bulundu).</returns>
      <param name="location">Yeniden yönlendirilecek konum.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Belirtilen değerlerle rotaya yeniden yönlendirme sonucu (302 Bulundu) oluşturur.</summary>
      <returns>Belirtilen değerlerle rotaya yeniden yönlendirme sonucu (302 Bulundu).</returns>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
      <summary>Belirtilen değerlerle rotaya yeniden yönlendirme sonucu (302 Bulundu) oluşturur.</summary>
      <returns>Belirtilen değerlerle rotaya yeniden yönlendirme sonucu (302 Bulundu).</returns>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Request">
      <summary>Geçerli <see cref="T:System.Web.Http.ApiController" /> öğesinin HttpRequestMessage değerini alır veya ayarlar.</summary>
      <returns>Geçerli <see cref="T:System.Web.Http.ApiController" /> öğesinin HttpRequestMessage değeri.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.RequestContext">
      <summary>İstek bağlamını alır.</summary>
      <returns>İstek bağlamı.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
      <summary>Belirtilen yanıtla bir <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> oluşturur.</summary>
      <returns>Belirtilen yanıt için bir <see cref="T:System.Web.Http.Results.ResponseMessageResult" />.</returns>
      <param name="response">HTTP yanıt iletisi.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
      <summary>Belirtilen durum koduyla bir <see cref="T:System.Web.Http.StatusCodeResult" /> oluşturur.</summary>
      <returns>Belirtilen durum koduyla bir <see cref="T:System.Web.Http.StatusCodeResult" />.</returns>
      <param name="status">Yanıt iletisi için HTTP durum kodu</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Yetkilendirilmedi) oluşturur.</summary>
      <returns>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.UnauthorizedResult" />.</returns>
      <param name="challenges">WWW-Authenticate sınamaları.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
      <summary>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Yetkilendirilmedi) oluşturur.</summary>
      <returns>Belirtilen değerlerle bir <see cref="T:System.Web.Http.Results.UnauthorizedResult" />.</returns>
      <param name="challenges">WWW-Authenticate sınamaları.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Url">
      <summary>Diğer API'lara URL üretmek için kullanılan bir <see cref="T:System.Web.Http.Routing.UrlHelper" /> örneği alır. </summary>
      <returns>Diğer API'lerin URL'lerini oluşturmak için kullanılan <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.User">
      <summary>Bu istekle ilişkili geçerli asıl adı döndürür.</summary>
      <returns>Bu istekle ilişkilendirilen geçerli sorumlu.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0)">
      <summary>Belirtilen varlığı doğrular ve varsa doğrulama hatalarını boş önekin altındaki model durumuna ekler.</summary>
      <param name="entity">Doğrulanmakta olan varlık.</param>
      <typeparam name="TEntity">Doğrulanacak varlığın türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
      <summary>Belirtilen varlığı doğrular ve varsa doğrulama hatalarını model durumuna ekler.</summary>
      <param name="entity">Doğrulanmakta olan varlık.</param>
      <param name="keyPrefix">Model durumu hatalarının model durumuna ekleneceği temel önek.</param>
      <typeparam name="TEntity">Doğrulanacak varlığın türü.</typeparam>
    </member>
    <member name="T:System.Web.Http.AuthorizeAttribute">
      <summary>İsteğin <see cref="T:System.Security.Principal.IPrincipal" /> öğesini doğrulayan yetkilendirme filtresini belirtir.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.AuthorizeAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Yetkilendirmede başarısız olan işlem istekleri.</summary>
      <param name="actionContext">Bağlam.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Belirtilen denetime yetki verilip verilmediğini gösterir.</summary>
      <returns>Denetime yetki verilmişse true; verilmemişse false.</returns>
      <param name="actionContext">Bağlam.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Bir eyleme yetki verilirken çağırır.</summary>
      <param name="actionContext">Bağlam.</param>
      <exception cref="T:System.ArgumentNullException">Bağlam parametresi null.</exception>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Roles">
      <summary>Yetki verilen rolleri alır veya ayarlar. </summary>
      <returns>Roller dizesi. </returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.TypeId">
      <summary>Bu öznitelik için benzersiz bir tanımlayıcı alır.</summary>
      <returns>Bu öznitelik için benzersiz bir tanımlayıcı.</returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Users">
      <summary>Yetki verilen kullanıcıları alır veya ayarlar. </summary>
      <returns>Kullanıcılar dizesi. </returns>
    </member>
    <member name="T:System.Web.Http.FromBodyAttribute">
      <summary> Bir eylem parametresinin yalnızca gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine ait URI'den geldiğini belirten bir öznitelik. </summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.FromBodyAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Parametre bağlaması alır.</summary>
      <returns>Parametre bağlaması.</returns>
      <param name="parameter">Parametre açıklaması.</param>
    </member>
    <member name="T:System.Web.Http.FromUriAttribute">
      <summary>Bir eylem parametresinin, gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine ait URI'den geldiğini belirten bir öznitelik.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.FromUriAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Model bağlayıcıya ait değer sağlayıcı üreteçlerini alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> nesneleri topluluğu.</returns>
      <param name="configuration">Yapılandırma.</param>
    </member>
    <member name="T:System.Web.Http.HttpBindNeverAttribute">
      <summary>HTTP bağlamanın bir özelliği dışarıda tutması gerektiğini belirten öznitelikleri gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindNeverAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpBindNeverAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="T:System.Web.Http.HttpBindRequiredAttribute">
      <summary>HTTP bağlaması için gereken özniteliği temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindRequiredAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpBindRequiredAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="T:System.Web.Http.HttpConfiguration">
      <summary>Bir <see cref="T:System.Web.Http.HttpServer" /> örnekleri yapılandırmasını gösterir. </summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor(System.Web.Http.HttpRouteCollection)">
      <summary>HTTP rota topluluğuna sahip <see cref="T:System.Web.Http.HttpConfiguration" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routes">Bu örnekle ilişkilendirilecek HTTP rota topluluğu.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.DependencyResolver">
      <summary>Bu örnekle ilişkili bağımlılık çözümleyiciyi alır veya ayarlar.</summary>
      <returns>Bağımlılık çözümleyici.</returns>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose">
      <summary>Uygulama tarafından tanımlanan, yönetilmeyen kaynakları serbest bırakma, salma veya sıfırlama ile ilişkili görevleri gerçekleştirir.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose(System.Boolean)">
      <summary>Nesne tarafından kullanılan ve yönetilmeyen kaynaklar ile isteğe bağlı olarak yönetilen kaynakları serbest bırakır.</summary>
      <param name="disposing">Hem yönetilen hem de yönetilmeyen kaynakları serbest bırakmak için true; yalnızca yönetilmeyen kaynakları serbest bırakmak için false.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.EnsureInitialized">
      <summary>Intializer kancasını çağırır.Bu noktadan itibaren değiştirilemez olarak kabul edilir.Bunun birden çok kez çağrılması güvenlidir.</summary>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Filters">
      <summary>Bu <see cref="T:System.Web.Http.HttpConfiguration" /> örneğini kullanarak sunulan tüm isteklere uygulanan filtrelerin listesini alır.</summary>
      <returns>Filtrelerin listesi.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Formatters">
      <summary>Bu örneğe ait medya türü biçimlendiricilerini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> nesneleri topluluğu.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.IncludeErrorDetailPolicy">
      <summary>Hata ayrıntılarının hata iletilerine eklenip eklenmemesi gerektiğini gösteren bir değer alır veya ayarlar.</summary>
      <returns>Hata ayrıntı ilkesini gösteren <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> değeri.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Initializer">
      <summary> İstekleri işlemek için kullanılmadan önce <see cref="T:System.Web.Http.HttpConfiguration" /> örneğinin son başlatılmasını gerçekleştirecek eylemi alır veya ayarlar. </summary>
      <returns>
        <see cref="T:System.Web.Http.HttpConfiguration" /> örneğinin son başlatılmasını gerçekleştirecek eylem.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.MessageHandlers">
      <summary>Yığında yukarı doğru giden bir <see cref="T:System.Net.Http.HttpRequestMessage" /> ve sonrasında aşağıda doğru giden bir <see cref="T:System.Net.Http.HttpResponseMessage" /> olarak çağrılacak olan <see cref="T:System.Net.Http.DelegatingHandler" /> örneklerinin sıralı listesini alır. </summary>
      <returns>İleti işleyici koleksiyonu.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.ParameterBindingRules">
      <summary>Parametrelerin nasıl bağlanması gerektiğine yönelik kurallar topluluğunu alır.</summary>
      <returns>Verilen bir parametre için parametre bağlaması üretebilen işlevler topluluğu.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Properties">
      <summary>Bu örnekle ilişkili özellikleri alır.</summary>
      <returns>Özellikleri içeren <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> öğesi.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Routes">
      <summary>Bu <see cref="T:System.Web.Http.HttpConfiguration" /> örneğiyle ilişkili <see cref="T:System.Web.Http.HttpRouteCollection" /> öğesini alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.HttpRouteCollection" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Services">
      <summary>Bu örnekle ilişkili varsayılan hizmetlerin kapsayıcısını alır.</summary>
      <returns>Bu örnekle ilişkili varsayılan hizmetleri kapsayan <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> öğesi.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.VirtualPathRoot">
      <summary>Kök sanal yolu alır.</summary>
      <returns>Kök sanal yol.</returns>
    </member>
    <member name="T:System.Web.Http.HttpConfigurationExtensions">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" /> sınıfının genişletme yöntemlerini içerir.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.BindParameter(System.Web.Http.HttpConfiguration,System.Type,System.Web.Http.ModelBinding.IModelBinder)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Uygulama için öznitelikle tanımlanan rotaları eşler.</summary>
      <param name="configuration">Sunucu yapılandırması.</param>
      <param name="directRouteProvider">Rotaları keşfetmek ve oluşturmak için kullanılacak <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" />.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Uygulama için öznitelikle tanımlanan rotaları eşler.</summary>
      <param name="configuration">Sunucu yapılandırması.</param>
      <param name="constraintResolver">Kısıtlama çözümleyici.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Uygulama için öznitelikle tanımlanan rotaları eşler.</summary>
      <param name="configuration">Sunucu yapılandırması.</param>
      <param name="constraintResolver">Satır içi kısıtlamalarını çözümlemek için kullanılacak <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" />.</param>
      <param name="directRouteProvider">Rotaları keşfetmek ve oluşturmak için kullanılacak <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" />.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.SuppressHostPrincipal(System.Web.Http.HttpConfiguration)"></member>
    <member name="T:System.Web.Http.HttpDeleteAttribute">
      <summary>Bir işlemin DELETE HTTP yöntemini desteklediğini belirtir.</summary>
    </member>
    <member name="M:System.Web.Http.HttpDeleteAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpDeleteAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.HttpDeleteAttribute.HttpMethods">
      <summary>Bu özniteliğe karşılık gelen http yöntemlerini alır.</summary>
      <returns>Bu özniteliğe karşılık gelen http yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.HttpError">
      <summary>Hata bilgilerini depolamak için serileştirilebilir bir kapsayıcı tanımlar. Bu bilgiler anahtar/değer çiftleri olarak depolanır. Standart hata bilgilerini aramaya yönelik sözlük anahtarları <see cref="T:System.Web.Http.HttpErrorKeys" /> türünde mevcuttur.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpError" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Exception,System.Boolean)">
      <summary>
        <paramref name="exception" /> için <see cref="T:System.Web.Http.HttpError" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Hata bilgisi için kullanılacak özel durum.</param>
      <param name="includeErrorDetail">özel durum bilgilerini hataya dahil etmek için true; aksi takdirde false</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.String)">
      <summary>
        <paramref name="message" /> hata iletisini içeren yeni bir <see cref="T:System.Web.Http.HttpError" /> sınıfı örneği başlatır.</summary>
      <param name="message">Bu örnekle ilişkilendirilecek hata iletisi.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean)">
      <summary>
        <paramref name="modelState" /> için <see cref="T:System.Web.Http.HttpError" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelState">Hata bilgileri için kullanılacak geçersiz model durumu.</param>
      <param name="includeErrorDetail">özel durum iletilerini hataya dahil etmek için true; aksi takdirde false</param>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionMessage">
      <summary>Varsa <see cref="T:System.Exception" /> iletisini alır veya ayarlar.</summary>
      <returns>Varsa <see cref="T:System.Exception" /> iletisi.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionType">
      <summary>Varsa <see cref="T:System.Exception" /> türünü alır veya ayarlar.</summary>
      <returns>Varsa <see cref="T:System.Exception" /> öğesinin türü.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.GetPropertyValue``1(System.String)">
      <summary>Bu hata örneğinden belirli bir özellik değeri alır.</summary>
      <returns>Bu hata örneğinden belirli bir özellik değeri.</returns>
      <param name="key">Hata özelliğinin adı.</param>
      <typeparam name="TValue">Özelliğin türü.</typeparam>
    </member>
    <member name="P:System.Web.Http.HttpError.InnerException">
      <summary>Varsa bu örnekle ilişkili iç <see cref="T:System.Exception" /> öğesini alır.</summary>
      <returns>Varsa bu örnekle ilişkili iç <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.Message">
      <summary>Hatanın nedenini açıklayan yüksek düzeyli, kullanıcıya görünen iletiyi alır veya ayarlar. Bu alanda taşınan bilgiler <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> öğesinden bağımsız olarak telden geçeceği için ortak olarak kabul edilir. Sonuç olarak, sunucuya veya uygulamaya ilişkin önemli bilgilerin açıklanmamasına dikkat edilmelidir.</summary>
      <returns>Hatanın nedenini açıklayan yüksek düzeyli, kullanıcıya görünen ileti. Bu alanda taşınan bilgiler <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> öğesinden bağımsız olarak telden geçeceği için ortak olarak kabul edilir. Sonuç olarak, sunucuya veya uygulamaya ilişkin önemli bilgilerin açıklanmamasına dikkat edilmelidir.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.MessageDetail">
      <summary>Geliştiricinin hatayı tam olarak anlaması için hatanın ayrıntılı bir açıklamasını alır veya ayarlar.</summary>
      <returns>Geliştiricinin hatayı tam olarak anlaması için hatanın ayrıntılı bir açıklaması.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ModelState">
      <summary>Model bağlama sırasında meydana gelen hatalara ilişkin bilgileri içeren <see cref="P:System.Web.Http.HttpError.ModelState" /> öğesini alır.</summary>
      <returns>Model bağlama sırasında meydana gelen hatalara ilişkin bilgileri içeren <see cref="P:System.Web.Http.HttpError.ModelState" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.StackTrace">
      <summary>Varsa bu örnekle ilişkili yığın izleme bilgilerini alır veya ayarlar.</summary>
      <returns>Varsa bu örnekle ilişkili yığın izleme bilgileri.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Bu yöntem iç kullanım için ayrılmıştır ve kullanılmamalıdır.</summary>
      <returns>Her zaman null değerini döndürür.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>XML gösteriminden bir <see cref="T:System.Web.Http.HttpError" /> örneği üretir.</summary>
      <param name="reader">Nesnenin seri durumdan çıkarıldığı XmlReader akışı.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Bir <see cref="T:System.Web.Http.HttpError" /> örneğini XML gösterimine dönüştürür.</summary>
      <param name="writer">Nesnenin serileştirildiği XmlWriter akışı.</param>
    </member>
    <member name="T:System.Web.Http.HttpErrorKeys">
      <summary>
        <see cref="T:System.Web.Http.HttpError" /> sözlüğüne depolanan hata bilgilerini aramak için anahtarlar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ErrorCodeKey">
      <summary> ErrorCode için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionMessageKey">
      <summary> ExceptionMessage için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionTypeKey">
      <summary> ExceptionType için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.InnerExceptionKey">
      <summary> InnerException için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageDetailKey">
      <summary> MessageDetail için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageKey">
      <summary> Message için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageLanguageKey">
      <summary> MessageLanguage için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ModelStateKey">
      <summary> ModelState için anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.StackTraceKey">
      <summary> StackTrace için anahtar sağlar. </summary>
    </member>
    <member name="T:System.Web.Http.HttpGetAttribute">
      <summary>Bir işlemin GET HTTP yöntemini desteklediğini belirtir.</summary>
    </member>
    <member name="M:System.Web.Http.HttpGetAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpGetAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.HttpGetAttribute.HttpMethods">
      <summary>Bu özniteliğe karşılık gelen http yöntemlerini alır.</summary>
      <returns>Bu özniteliğe karşılık gelen http yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.HttpHeadAttribute">
      <summary> Bir işlemin HEAD HTTP yöntemini desteklediğini belirtir. </summary>
    </member>
    <member name="M:System.Web.Http.HttpHeadAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpHeadAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.HttpHeadAttribute.HttpMethods">
      <summary>Bu özniteliğe karşılık gelen HTTP yöntemlerini alır.</summary>
      <returns>Bu özniteliğe karşılık gelen HTTP yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.HttpOptionsAttribute">
      <summary>Yöntemin yalnızca HTTP OPTIONS isteklerini işlemesi için bir HTTP yöntemini kısıtlamak için kullanılan bir özniteliği gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.HttpOptionsAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpOptionsAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.HttpOptionsAttribute.HttpMethods">
      <summary>Bu özniteliğe karşılık gelen HTTP yöntemlerini alır.</summary>
      <returns>Bu özniteliğe karşılık gelen HTTP yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPatchAttribute">
      <summary> Bir işlemin PATCH HTTP yöntemini desteklediğini belirtir. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPatchAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpPatchAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPatchAttribute.HttpMethods">
      <summary>Bu özniteliğe karşılık gelen HTTP yöntemlerini alır.</summary>
      <returns>Bu özniteliğe karşılık gelen HTTP yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPostAttribute">
      <summary>Bir işlemin POST HTTP yöntemini desteklediğini belirtir. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPostAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpPostAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPostAttribute.HttpMethods">
      <summary>Bu özniteliğe karşılık gelen HTTP yöntemlerini alır.</summary>
      <returns>Bu özniteliğe karşılık gelen HTTP yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPutAttribute">
      <summary>Bir HTTP yöntemini yalnızca HTTP PUT isteklerini işleyecek şekilde kısıtlamak için kullanılan bir özniteliği temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPutAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpPutAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPutAttribute.HttpMethods">
      <summary>Bu özniteliğe karşılık gelen HTTP yöntemlerini alır.</summary>
      <returns>Bu özniteliğe karşılık gelen HTTP yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.HttpResponseException">
      <summary> İstemciye döndürülecek belirli bir <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesine izin veren özel durum. </summary>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>
        <see cref="T:System.Web.Http.HttpResponseException" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="response">İstemciye döndürülecek HTTP yanıtı.</param>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
      <summary>
        <see cref="T:System.Web.Http.HttpResponseException" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="statusCode">Yanıtın durum kodu.</param>
    </member>
    <member name="P:System.Web.Http.HttpResponseException.Response">
      <summary>İstemciye döndürülecek HTTP yanıtını alır.</summary>
      <returns>HTTP yanıtını temsil eden <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesi.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollection">
      <summary>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneklerinin koleksiyonu.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Http.HttpRouteCollection" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.HttpRouteCollection" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="virtualPathRoot">Sanal yol kökü.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Add(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Topluluğa bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği ekler.</summary>
      <param name="name">Rotanın adı.</param>
      <param name="route">Topluluğa eklenecek <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Clear">
      <summary>Tüm öğeleri koleksiyondan kaldırır.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Contains(System.Web.Http.Routing.IHttpRoute)">
      <summary>Topluluğun belirli bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> öğesi içerip içermediğini belirler.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> toplulukta bulunduysa true, aksi halde false şeklindedir.</returns>
      <param name="item">Koleksiyonda bulunacak nesne.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ContainsKey(System.String)">
      <summary>Topluluğun belirtilen anahtara sahip bir öğe içerip içermediğini belirler.</summary>
      <returns>Topluluk, belirtilen anahtara sahip bir öğe içeriyorsa true; içermiyorsa, false.</returns>
      <param name="name">Toplulukta bulunacak anahtar.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.Routing.IHttpRoute}[],System.Int32)">
      <summary>Belirli bir dizi dizininden başlayarak topluluğun <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneklerini bir diziye kopyalar.</summary>
      <param name="array">Topluluktan kopyalanan öğelerin hedefi olan dizi.</param>
      <param name="arrayIndex">
        <paramref name="array" /> içinde kopyalamanın başladığı sıfır tabanlı dizin.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Web.Http.Routing.IHttpRoute[],System.Int32)">
      <summary>Belirli bir dizi dizininden başlayarak topluluğun rota adlarını ve <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneklerini bir diziye kopyalar.</summary>
      <param name="array">Topluluktan kopyalanan öğelerin hedefi olan dizi.</param>
      <param name="arrayIndex">
        <paramref name="array" /> içinde kopyalamanın başladığı sıfır tabanlı dizin.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Count">
      <summary>Topluluktaki öğe sayısını alır.</summary>
      <returns>Topluluktaki öğe sayısı.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği oluşturur.</summary>
      <returns>Yeni <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği.</returns>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="defaults">Varsayılan rota parametrelerini içeren bir nesne.</param>
      <param name="constraints">Rota kısıtlamalarını içeren bir nesne.</param>
      <param name="dataTokens">Rota veri simgeleri.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)">
      <summary>Bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği oluşturur.</summary>
      <returns>Yeni <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği.</returns>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="defaults">Varsayılan rota parametrelerini içeren bir nesne.</param>
      <param name="constraints">Rota kısıtlamalarını içeren bir nesne.</param>
      <param name="dataTokens">Rota veri simgeleri.</param>
      <param name="handler">Rota ileti işleyicisi.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Object,System.Object)">
      <summary>Bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği oluşturur.</summary>
      <returns>Yeni <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği.</returns>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="defaults">Varsayılan rota parametrelerini içeren bir nesne.</param>
      <param name="constraints">Rota kısıtlamalarını içeren bir nesne.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose">
      <summary>Uygulama tarafından tanımlanan, yönetilmeyen kaynakları serbest bırakma, salma veya sıfırlama ile ilişkili görevleri gerçekleştirir.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose(System.Boolean)">
      <summary>Nesne tarafından kullanılan ve yönetilmeyen kaynaklar ile isteğe bağlı olarak yönetilen kaynakları serbest bırakır.</summary>
      <param name="disposing">Hem yönetilen hem de yönetilmeyen kaynakları serbest bırakmak için true; yalnızca yönetilmeyen kaynakları serbest bırakmak için false.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetEnumerator">
      <summary>Toplulukta yinelenen bir numaralandırıcı döndürür.</summary>
      <returns>Toplulukta yinelemek için kullanılabilecek bir <see cref="T:System.Collections.Generic.IEnumerator`1" /> öğesi.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Belirli bir HTTP isteği için rota verilerini alır.</summary>
      <returns>Rota verilerini temsil eden <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> örneği.</returns>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Sanal bir yol alır.</summary>
      <returns>Sanal yolu temsil eden bir <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" /> örneği.</returns>
      <param name="request">HTTP isteği.</param>
      <param name="name">Rota adı.</param>
      <param name="values">Rota değerleri.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Insert(System.Int32,System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Topluluğa bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneği ekler.</summary>
      <param name="index">
        <paramref name="value" /> eklenecek sıfır tabanlı dizin.</param>
      <param name="name">Rota adı.</param>
      <param name="value">Eklenecek <see cref="T:System.Web.Http.Routing.IHttpRoute" /> öğesi.Değer boş olamaz.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.IsReadOnly">
      <summary>Topluluğun salt okunur olup olmadığını gösteren bir değer alır.</summary>
      <returns>Koleksiyonun salt okunursa true; değilse, false.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.Int32)">
      <summary>Belirtilen dizindeki öğeyi alır veya ayarlar.</summary>
      <returns>Belirtilen dizindeki <see cref="T:System.Web.Http.Routing.IHttpRoute" /> öğesi.</returns>
      <param name="index">Dizin.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.String)">
      <summary>Belirtilen rota adına sahip öğeyi alır veya ayarlar.</summary>
      <returns>Belirtilen dizindeki <see cref="T:System.Web.Http.Routing.IHttpRoute" /> öğesi.</returns>
      <param name="name">Rota adı.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.OnGetEnumerator">
      <summary>Topluluğa numaralandırıcı almak için dahili olarak çağrılır.</summary>
      <returns>Toplulukta yinelemek için kullanılabilecek bir <see cref="T:System.Collections.IEnumerator" /> öğesi.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Remove(System.String)">
      <summary>Topluluktan bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneğini kaldırır.</summary>
      <returns>Öğe başarılı şekilde kaldırılırsa true; kaldırılmazsa, false.Bu yöntem aynı zamanda, toplulukta <paramref name="name" /> öğesi bulunmazsa false değerini döndürür.</returns>
      <param name="name">Kaldırılacak rotanın adı.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Add(System.Web.Http.Routing.IHttpRoute)">
      <summary>Bir öğeyi koleksiyona ekler.</summary>
      <param name="route">Koleksiyona eklenecek nesne.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Remove(System.Web.Http.Routing.IHttpRoute)">
      <summary>Belirli bir nesnenin ilk örneğini topluluktan kaldırır.</summary>
      <returns>
        <paramref name="route" /> topluluktan başarıyla kaldırıldıysa true, aksi halde false şeklindedir.Bu yöntem, <paramref name="route" /> özgün koleksiyonda bulunmamışsa da false değerini döndürür.</returns>
      <param name="route">Koleksiyondan kaldırılacak nesne.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Toplulukta yinelenen bir numaralandırıcı döndürür.</summary>
      <returns>Koleksiyonda yinelemek için kullanılabilecek bir <see cref="T:System.Collections.IEnumerator" /> nesnesi.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.TryGetValue(System.String,System.Web.Http.Routing.IHttpRoute@)">
      <summary>Belirtilen rota adına sahip <see cref="T:System.Web.Http.Routing.IHttpRoute" /> öğesini alır.</summary>
      <returns>Topluluk, belirtilen ada sahip bir öğe içeriyorsa true; içermiyorsa, false.</returns>
      <param name="name">Rota adı.</param>
      <param name="route">Bu yöntem döndürdüğünde, rota adı bulunursa <see cref="T:System.Web.Http.Routing.IHttpRoute" /> örneğini içerir, aksi halde null şeklindedir.Bu parametre, başlatmadan iletilir.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ValidateConstraint(System.String,System.String,System.Object)">
      <summary>Bir kısıtlamanın <see cref="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)" /> yöntemi çağrılarak oluşturulan bir <see cref="T:System.Web.Http.Routing.IHttpRoute" /> için geçerli olduğunu doğrular.</summary>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="name">Kısıtlama adı.</param>
      <param name="constraint">Kısıtlama nesnesi.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.VirtualPathRoot">
      <summary>Sanal yol kökünü alır.</summary>
      <returns>Sanal yol kökü.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollectionExtensions">
      <summary>
        <see cref="T:System.Web.Http.HttpRouteCollection" /> genişletme yöntemleri</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Belirtilen rotayı yok sayar.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> döndürür.</returns>
      <param name="routes">Uygulama için rota koleksiyonu.</param>
      <param name="routeName">Yok sayılacak rotanın adı.</param>
      <param name="routeTemplate">Rota için rota şablonu.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Belirtilen rotayı yok sayar.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> döndürür.</returns>
      <param name="routes">Uygulama için rota koleksiyonu.</param>
      <param name="routeName">Yok sayılacak rotanın adı.</param>
      <param name="routeTemplate">Rota için rota şablonu.</param>
      <param name="constraints">Rota şablonu için değerler belirten bir ifade kümesi.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpBatchRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Web.Http.Batch.HttpBatchHandler)">
      <summary> HTTP toplu isteklerini işlemek için belirtilen rotayı eşler. </summary>
      <param name="routes">Uygulama için rota koleksiyonu.</param>
      <param name="routeName">Eşlenecek rotanın adı.</param>
      <param name="routeTemplate">Rota için rota şablonu.</param>
      <param name="batchHandler">Toplu istekleri işlemek için <see cref="T:System.Web.Http.Batch.HttpBatchHandler" />.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Belirtilen rota şablonunu eşler.</summary>
      <returns>Eşlenen rotaya bir başvuru.</returns>
      <param name="routes">Uygulama için rota koleksiyonu.</param>
      <param name="name">Eşlenecek rotanın adı.</param>
      <param name="routeTemplate">Rota için rota şablonu.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Belirtilen rota şablonunu eşler ve varsayılan rota değerlerini ayarlar.</summary>
      <returns>Eşlenen rotaya bir başvuru.</returns>
      <param name="routes">Uygulama için rota koleksiyonu.</param>
      <param name="name">Eşlenecek rotanın adı.</param>
      <param name="routeTemplate">Rota için rota şablonu.</param>
      <param name="defaults">Varsayılan rota değerlerini içeren bir nesne.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Belirtilen rota şablonunu eşler ve varsayılan rota değerleri ile kısıtlamaları ayarlar.</summary>
      <returns>Eşlenen rotaya bir başvuru.</returns>
      <param name="routes">Uygulama için rota koleksiyonu.</param>
      <param name="name">Eşlenecek rotanın adı.</param>
      <param name="routeTemplate">Rota için rota şablonu.</param>
      <param name="defaults">Varsayılan rota değerlerini içeren bir nesne.</param>
      <param name="constraints">
        <paramref name="routeTemplate" /> için değerler belirten bir ifade kümesi.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>Belirtilen rota şablonunu eşler ve varsayılan rota değerleri, kısıtlamalar ve uç nokta ileti işleyicilerini ayarlar.</summary>
      <returns>Eşlenen rotaya bir başvuru.</returns>
      <param name="routes">Uygulama için rota koleksiyonu.</param>
      <param name="name">Eşlenecek rotanın adı.</param>
      <param name="routeTemplate">Rota için rota şablonu.</param>
      <param name="defaults">Varsayılan rota değerlerini içeren bir nesne.</param>
      <param name="constraints">
        <paramref name="routeTemplate" /> için değerler belirten bir ifade kümesi.</param>
      <param name="handler">İsteğin dağıtılacağı işleyici.</param>
    </member>
    <member name="T:System.Web.Http.HttpServer">
      <summary> Gelen bir <see cref="T:System.Net.Http.HttpRequestMessage" /> gönderen ve bunun sonucunda <see cref="T:System.Net.Http.HttpResponseMessage" /> oluşturan bir <see cref="T:System.Net.Http.HttpMessageHandler" /> uygulamasını tanımlar. </summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor">
      <summary>Varsayılan yapılandırmayı ve dağıtıcıyı kullanarak <see cref="T:System.Web.Http.HttpServer" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary> Belirtilen dağıtıcıya sahip <see cref="T:System.Web.Http.HttpServer" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="dispatcher">Gelen istekleri işleyen HTTP dağıtıcısı.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Belirtilen yapılandırmaya sahip <see cref="T:System.Web.Http.HttpServer" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="configuration">Bu örneği yapılandırmak için kullanılan <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary>Belirtilen yapılandırma ve dağıtıcıya sahip <see cref="T:System.Web.Http.HttpServer" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="configuration">Bu örneği yapılandırmak için kullanılan <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
      <param name="dispatcher">Gelen istekleri işleyen HTTP dağıtıcısı.</param>
    </member>
    <member name="P:System.Web.Http.HttpServer.Configuration">
      <summary>Bu örneği yapılandırmak için kullanılan <see cref="T:System.Web.Http.HttpConfiguration" /> öğesini alır.</summary>
      <returns>Bu örneği yapılandırmak için kullanılan <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpServer.Dispatcher">
      <summary>Gelen istekleri işleyen HTTP dağıtıcısını alır.</summary>
      <returns>Gelen istekleri işleyen HTTP dağıtıcısı.</returns>
    </member>
    <member name="M:System.Web.Http.HttpServer.Dispose(System.Boolean)">
      <summary>Nesne tarafından kullanılan ve yönetilmeyen kaynaklar ile isteğe bağlı olarak yönetilen kaynakları serbest bırakır.</summary>
      <param name="disposing">Hem yönetilen hem de yönetilmeyen kaynakları serbest bırakmak için true; yalnızca yönetilmeyen kaynakları serbest bırakmak için false.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.Initialize">
      <summary>Sunucuyu işletime hazırlar.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Gelen bir <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesini gönderir.</summary>
      <returns> Zaman uyumsuz işlemi temsil eden görev.</returns>
      <param name="request">Gönderme isteği</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="T:System.Web.Http.IHttpActionResult">
      <summary>Bir <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesini zaman uyumsuz olarak oluşturan komutu tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.IHttpActionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Bir <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesini zaman uyumsuz olarak oluşturur.</summary>
      <returns>Tamamlandığında <see cref="T:System.Net.Http.HttpResponseMessage" /> içeren bir görev.</returns>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="T:System.Web.Http.IncludeErrorDetailPolicy">
      <summary>Özel durum iletileri ve yığın izlemeleri gibi hata ayrıntılarının hata iletilerine dahil edilip edilmeyeceğini belirtir.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Always">
      <summary>Hata ayrıntılarını her zaman ekleyin.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Default">
      <summary>Ana bilgisayar ortamının varsayılan davranışını kullanın.ASP.NET barındırması için, Web.config dosyasındaki customErrors öğesinin değerini kullanın.Kendi kendine barındırma için, <see cref="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly" /> değerini kullanın.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly">
      <summary>Hata ayrıntılarını yalnızca yerel bir isteğe yanıt verirken ekleyin. </summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Never">
      <summary>Hata ayrıntılarını hiçbir zaman eklemeyin. </summary>
    </member>
    <member name="T:System.Web.Http.NonActionAttribute">
      <summary>Bir denetleyici yöntemin bir eylem yöntemi olmadığını göstermek için kullanılan bir özniteliği temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.NonActionAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.NonActionAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="T:System.Web.Http.OverrideActionFiltersAttribute">
      <summary>Daha yüksek bir düzeyde tanımlanan eylem filtrelerini geçersiz kılan bir filtre özniteliğini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideActionFiltersAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OverrideActionFiltersAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.AllowMultiple">
      <summary>Eylem filtresinin birden çok özniteliğe izin verip vermediğini belirten bir değer alır.</summary>
      <returns>Eylem filtresi birden çok özniteliğe izin veriyorsa true, aksi takdirde false.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Geçersiz kılınacak filtrelerin türünü alır.</summary>
      <returns>Geçersiz kılınacak filtrelerin türü.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideAuthenticationAttribute">
      <summary>Daha yüksek bir düzeyde tanımlanan kimlik doğrulaması filtrelerini geçersiz kılan bir filtre özniteliğini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthenticationAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.OverrideAuthorizationAttribute">
      <summary>Daha yüksek bir düzeyde tanımlanan yetkilendirme filtrelerini geçersiz kılan bir filtre özniteliğini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthorizationAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.OverrideAuthorizationAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.AllowMultiple">
      <summary>Belirtilen özniteliğin bir veya birden çok örneğinin tek bir program öğesi için belirtilip belirtilemeyeceğini gösteren bir Boolean değerini alır veya ayarlar.</summary>
      <returns>Birden çok örneğin belirtilmesine izin verilirse doğru; tersi durumda yanlıştır.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Filtre geçersiz kılma özniteliklerinin türünü alır.</summary>
      <returns>Filtre geçersiz kılma özniteliklerinin türü.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideExceptionFiltersAttribute">
      <summary>Daha yüksek bir düzeyde tanımlanan özel durum filtrelerini geçersiz kılan bir filtre özniteliğini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideExceptionFiltersAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.ParameterBindingAttribute">
      <summary>Bir <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> üreten bir parametre veya türün özniteliği.Öznitelik bir tür belirtimine aitse, özniteliğin bu türdeki tüm eylem parametrelerinde mevcut olduğu kabul edilir.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ParameterBindingAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Parametre bağlamasını alır.</summary>
      <returns>Parametre bağlaması.</returns>
      <param name="parameter">Parametre açıklaması.</param>
    </member>
    <member name="T:System.Web.Http.RouteAttribute">
      <summary>Bir rota üzerinden doğrudan kullanıma sunmak için bir eyleme yerleştirir.</summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.RouteAttribute" /> sınıfının yeni bir örneğini başlatır. </summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.RouteAttribute" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="template">Eşleştirilecek URI desenini belirten rota şablonu.</param>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Name">
      <returns>
        <see cref="T:System.String" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Order">
      <returns>
        <see cref="T:System.Int32" /> döndürür.</returns>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.System#Web#Http#Routing#IDirectRouteFactory#CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)"></member>
    <member name="P:System.Web.Http.RouteAttribute.Template">
      <returns>
        <see cref="T:System.String" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary>
        <see cref="T:System.Web.Http.RouteParameter" /> sınıfı, bir rota parametresi ile ilgili özellikleri göstermek için kullanılabilir (bir <see cref="M:IHttpRoute.RouteTemplate" /> öğesinin segmentlerinde bulunan değişmez değerler ve yer tutucular).Bu örneğin, bir rota parametresinin isteğe bağlı olduğunu göstermek için kullanılabilir.</summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary>İsteğe bağlı bir parametre.</summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary>Bu örnekteki bir <see cref="T:System.String" /> öğesini döndürür.</summary>
      <returns>Bu örneği temsil eden bir <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.RoutePrefixAttribute">
      <summary> Denetleyicideki tüm eylemler için geçerli olan bir rota önekiyle denetleyiciye açıklama ekler. </summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.RoutePrefixAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.RoutePrefixAttribute" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="prefix">Denetleyici için rota öneki.</param>
    </member>
    <member name="P:System.Web.Http.RoutePrefixAttribute.Prefix">
      <summary> Rota önekini alır. </summary>
    </member>
    <member name="T:System.Web.Http.ServicesExtensions">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> nesnesinden sağlanan hizmetlerin tür kullanımı uyumlu erişimcilerini sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionInvoker(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionValueBinder(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetApiExplorer(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Description.IApiExplorer" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Description.IApiExplorer" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetAssembliesResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetBodyModelValidator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Validation.IBodyModelValidator" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Validation.IBodyModelValidator" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetContentNegotiator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Net.Http.Formatting.IContentNegotiator" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Net.Http.Formatting.IContentNegotiator" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetDocumentationProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Description.IDocumentationProvider" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Description.IDocumentationProvider" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Varsa kayıtlı işlenmeyen özel durum işleyicisini döndürür.</summary>
      <returns>Varsa kayıtlı işlenmeyen özel durum işleyicisi, aksi takdirde null.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionLoggers(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Kayıtlı işlenmeyen özel durum günlükçülerini döndürür.</summary>
      <returns>Kayıtlı işlenmeyen özel durum günlükçüleri.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetFilterProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Filters.IFilterProvider" /> topluluğunu alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.Filters.IFilterProvider" /> nesneleri topluluğunu döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostBufferPolicySelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerActivator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> hizmetini alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> örneği, bir örnek kaydedilmemişse de boş değeri döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerTypeResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelBinderProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> topluluğunu alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> nesneleri topluluğunu döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelMetadataProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelValidatorProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> topluluğunu alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> nesneleri topluluğunu döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceManager(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Tracing.ITraceManager" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Tracing.ITraceManager" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceWriter(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" /> hizmetini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Tracing.ITraceWriter" /> örneği döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetValueProviderFactories(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> topluluğunu alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> nesneleri topluluğunu döndürür.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="T:System.Web.Http.SingleResult">
      <summary>Sıfır veya bir varlık içeren bir <see cref="T:System.Linq.IQueryable" /> öğesini temsil eder.System.Web.Http.OData veya System.Web.OData ad alanındaki [EnableQuery] ile birlikte kullanın.</summary>
    </member>
    <member name="M:System.Web.Http.SingleResult.#ctor(System.Linq.IQueryable)">
      <summary>
        <see cref="T:System.Web.Http.SingleResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="queryable">Sıfır veya bir varlık içeren bir <see cref="T:System.Linq.IQueryable" /> öğesi.</param>
    </member>
    <member name="M:System.Web.Http.SingleResult.Create``1(System.Linq.IQueryable{``0})">
      <summary>Bir <see cref="T:System.Linq.IQueryable`1" /> öğesinden <see cref="T:System.Web.Http.SingleResult`1" /> oluşturur.<paramref name="T" /> türünü açık olarak belirtmeye gerek kalmadan bir <see cref="T:System.Web.Http.SingleResult`1" /> nesnesi oluşturmak için kullanılan yardımcı bir yöntem.</summary>
      <returns>Oluşturulan <see cref="T:System.Web.Http.SingleResult`1" />.</returns>
      <param name="queryable">Sıfır veya bir varlık içeren bir <see cref="T:System.Linq.IQueryable`1" /> öğesi.</param>
      <typeparam name="T">Veri kaynağındaki verilerin türü.</typeparam>
    </member>
    <member name="P:System.Web.Http.SingleResult.Queryable">
      <summary>Sıfır veya bir varlık içeren bir <see cref="T:System.Linq.IQueryable" /> öğesi.</summary>
    </member>
    <member name="T:System.Web.Http.SingleResult`1">
      <summary>Sıfır veya bir varlık içeren bir <see cref="T:System.Linq.IQueryable`1" /> öğesini temsil eder.System.Web.Http.OData veya System.Web.OData ad alanındaki [EnableQuery] ile birlikte kullanın.</summary>
      <typeparam name="T">Veri kaynağındaki verilerin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
      <summary>
        <see cref="T:System.Web.Http.SingleResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="queryable">Sıfır veya bir varlık içeren bir <see cref="T:System.Linq.IQueryable`1" /> öğesi.</param>
    </member>
    <member name="P:System.Web.Http.SingleResult`1.Queryable">
      <summary>Sıfır veya bir varlık içeren bir <see cref="T:System.Linq.IQueryable`1" /> öğesi.</summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchExecutionOrder">
      <summary> Toplu istekler için yürütme sırasını tanımlar. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.NonSequential">
      <summary> Toplu istekleri sırasız olarak yürütür. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.Sequential">
      <summary> Toplu istekleri sıralı olarak yürütür. </summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchHttpRequestMessageExtensions">
      <summary>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> sınıfı için genişletme yöntemleri sağlar. </summary>
    </member>
    <member name="M:System.Web.Http.Batch.BatchHttpRequestMessageExtensions.CopyBatchRequestProperties(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpRequestMessage)">
      <summary> Başka bir <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesinden özellikleri kopyalar. </summary>
      <param name="subRequest">Alt istek.</param>
      <param name="batchRequest">Kopyalanacak özellikleri içeren toplu istek.</param>
    </member>
    <member name="T:System.Web.Http.Batch.DefaultHttpBatchHandler">
      <summary>HTTP isteği/yanıt iletilerini MIME çoklu bölümü olarak kodlayan varsayılan <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> uygulamasını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>
        <see cref="T:System.Web.Http.Batch.DefaultHttpBatchHandler" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="httpServer">Toplu istekleri ayrı ayrı işlemek için <see cref="T:System.Web.Http.HttpServer" />.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IList{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Toplu iş yanıt iletisini oluşturur.</summary>
      <returns>Toplu yanıt iletisi.</returns>
      <param name="responses">Toplu istekler için yanıtlar.</param>
      <param name="request">Tüm toplu istekleri içeren özgün istek.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage},System.Threading.CancellationToken)">
      <summary>Toplu istek iletilerini yürütür.</summary>
      <returns>Toplu istekler için bir <see cref="T:System.Net.Http.HttpResponseMessage" /> koleksiyonu.</returns>
      <param name="requests">Toplu istek iletileri koleksiyonu.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecutionOrder">
      <summary>Toplu istekler için yürütme sırasını alır veya ayarlar.Varsayılan yürütme sırası sıralıdır.</summary>
      <returns>Toplu istekler için yürütme sırası.Varsayılan yürütme sırası sıralıdır.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Gelen toplu isteği bir istek iletisi koleksiyonuna dönüştürür.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> koleksiyonu.</returns>
      <param name="request">Toplu istek iletilerini içeren istek.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Toplu istekleri işler.</summary>
      <returns>İşlemin sonucu.</returns>
      <param name="request">Toplu istek.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.SupportedContentTypes">
      <summary>Toplu istek için desteklenen içerik türlerini alır.</summary>
      <returns>Toplu istek için desteklenen içerik türleri.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Toplu istek iletilerini içeren gelen isteği doğrular.</summary>
      <param name="request">Toplu istek iletilerini içeren istek.</param>
    </member>
    <member name="T:System.Web.Http.Batch.HttpBatchHandler">
      <summary>HTTP toplu isteklerini işlemek için özeti tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>
        <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="httpServer">Toplu istekleri ayrı ayrı işlemek için <see cref="T:System.Web.Http.HttpServer" />.</param>
    </member>
    <member name="P:System.Web.Http.Batch.HttpBatchHandler.Invoker">
      <summary>
        <see cref="T:System.Web.Http.HttpServer" /> hedefine toplu istekler göndermek için çağırıcıyı alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.HttpServer" /> hedefine toplu istekler göndermek için çağırıcı.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Gelen toplu isteği tek bir <see cref="T:System.Net.Http.HttpRequestMessage" /> olarak işler.</summary>
      <returns>Toplu yanıt.</returns>
      <param name="request">Toplu istek.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Seri işleyiciyi zaman uyumsuz olarak gönderir.</summary>
      <returns>İşlemin sonucu.</returns>
      <param name="request">gönderme isteği.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionInvoker">
      <summary>Bir denetleyicinin eylem yöntemlerini çağırır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Belirtilen denetleyici bağlamını kullanarak, belirtilen eylemi zamanuyumsuz olarak çağırır.</summary>
      <returns>Çağrılan eylem.</returns>
      <param name="actionContext">Denetleyici bağlamı.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionSelector">
      <summary>Yansıma tabanlı bir eylem seçiciyi temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> için eylem eşleştirmelerini alır.</summary>
      <returns>Eylem eşleştirmeleri.</returns>
      <param name="controllerDescriptor">Bir denetleyiciyi açıklayan bilgiler.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> için bir eylem seçin.</summary>
      <returns>Seçilen eylem.</returns>
      <param name="controllerContext">Denetleyici bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ControllerServices">
      <summary> Belirli bir denetleyiciye özgü olabilecek hizmetler için bir kapsayıcıyı temsil eder.  Üst <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> öğesindeki hizmetleri yansıtır. Bir denetleyici burada bir hizmeti ayarlayabilir veya daha genel bir hizmetler kümesine atlayabilir.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.#ctor(System.Web.Http.Controllers.ServicesContainer)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ControllerServices" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="parent">Üst öğe hizmetler kapsayıcısı.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ClearSingle(System.Type)">
      <summary>Varsayılan hizmetlerden tek örnekli bir hizmeti kaldırır.</summary>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetService(System.Type)">
      <summary>Belirtilen türde bir hizmeti alır.</summary>
      <returns>Hizmetin ilk örneği veya hizmet bulunamazsa null.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServiceInstances(System.Type)">
      <summary>Verili bir hizmet türünün hizmet nesneleri listesini alır ve hizmet türünü doğrular.</summary>
      <returns>Belirtilen türdeki hizmet nesneleri listesi.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServices(System.Type)">
      <summary>Verili bir hizmet türünün hizmet nesneleri listesini alır.</summary>
      <returns>Belirtilen türdeki hizmet nesneleri listesi veya hizmet bulunamazsa boş bir liste.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.IsSingleService(System.Type)">
      <summary>Bir hizmet türünün tek örnekli bir hizmet mi olduğunu sorgular.</summary>
      <returns>Hizmet türünün en çok bir örneği varsa true; hizmet türü birden çok örneği destekliyorsa false.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Tek örnekli bir hizmet nesnesini değiştirir.</summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="service">Önceki örneği değiştiren bir hizmet nesnesi.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionBinding">
      <summary>Bağlamanın *nasıl* olacağını açıklar ve gerçekte bağlamaz.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Controllers.HttpParameterBinding[])">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionDescriptor">Bu bağlamanın ilişkin olduğu eylemin geri işaretçisi.  </param>
      <param name="bindings">Her bir parametreye ilişkin eşzamanlı bağlamalar.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ActionDescriptor">
      <summary>Bu bağlamanın ilişkin olduğu eylemin geri işaretçisini alır veya ayarlar.  </summary>
      <returns>Bu bağlamanın ilişkin olduğu eylemin geri işaretçisi.  </returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.ExecuteBindingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Verilen istek bağlamı için bağlamayı zamanuyumsuz olarak yürütür.</summary>
      <returns>Bağlama işlemi tamamlandığında işareti verilen görev. </returns>
      <param name="actionContext">Bağlamaya ilişkin eylem bağlamı. Bu, doldurulacak olan parametre sözlüğünü içerir.</param>
      <param name="cancellationToken">Bağlama işlemini iptal etmek için iptal simgesi. Veya bir bağlayıcı da buna bir parametre bağlayabilir.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ParameterBindings">
      <summary>Her bir parametreye ilişkin eşzamanlı bağlamaları alır veya ayarlar. </summary>
      <returns>Her bir parametreye ilişkin eşzamanlı bağlamalar.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContext">
      <summary>Yürütülen eyleme ilişkin bilgi içerir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> sınıfının yeni bir örneğini başlatır. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor(System.Web.Http.Controllers.HttpControllerContext,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="controllerContext">Denetleyici bağlamı.</param>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionArguments">
      <summary>Bir eylem bağımsız değişkenleri listesi alır.</summary>
      <returns>Bir eylem bağımsız değişkenleri listesi.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionDescriptor">
      <summary>Eylem bağlamı için eylem tanımlayıcısını alır veya ayarlar.</summary>
      <returns>Eylem tanımlayıcı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ControllerContext">
      <summary>Denetleyici bağlamını alır veya ayarlar.</summary>
      <returns>Denetleyici bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ModelState">
      <summary>Bağlama ilişkin modem durumu sözlüğünü alır.</summary>
      <returns>Model durumu sözlüğü.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Request">
      <summary>Eylem bağlamına ilişkin istek iletisini alır.</summary>
      <returns>Eylem bağlamına ilişkin istek iletisi.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.RequestContext">
      <summary>Geçerli istek bağlamını alır.</summary>
      <returns>Geçerli istek bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Response">
      <summary>Eylem bağlamına ilişkin yanıt iletisini alır veya ayarlar.</summary>
      <returns>Eylem bağlamına ilişkin yanıt iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContextExtensions">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> için genişletme yöntemleri içerir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetMetadataProvider(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidatorProviders(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidators(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Metadata.ModelMetadata)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.TryBindStrongModel``1(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.String,System.Web.Http.Metadata.ModelMetadataProvider,``0@)">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionDescriptor">
      <summary>Eylem yöntemleri hakkında bilgi sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> sınıfının yeni örneğini eylemin denetleyicisini açıklamak üzere belirtilen bilgilerle başlatır.</summary>
      <param name="controllerDescriptor">Eylem denetleyicisini açıklayan bilgiler.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionBinding">
      <summary>Eylemi açıklayan bağlamayı alır veya ayarlar.</summary>
      <returns>Eylemi açıklayan bağlama.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionName">
      <summary>Eylem adını alır.</summary>
      <returns>Eylemin adı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Configuration">
      <summary>Eylem yapılandırmasını alır veya ayarlar.</summary>
      <returns>Eylem yapılandırması.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ControllerDescriptor">
      <summary>Eylem denetleyicisini açıklayan bilgileri alır.</summary>
      <returns>Eylem denetleyicisini açıklayan bilgiler.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Açıklanan eylemi yerine getirir ve tamamlandıktan sonra eylemin döndürülen değerini içerecek bir <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</summary>
      <returns>Tamamlandıktan sonra eylemin döndürülen değerini içerecek bir <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="controllerContext">Denetleyici bağlamı.</param>
      <param name="arguments">Bağımsız değişkenler listesi.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1">
      <summary>Eylem tanımlayıcısıyla ilişkilendirilen özel öznitelikleri döndürür. </summary>
      <returns>Eylem tanımlayıcısıyla ilişkilendirilen özel öznitelikler.</returns>
      <typeparam name="T">Eylem tanımlayıcı.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Eylem için özel öznitelikleri alır.</summary>
      <returns>Bu eyleme uygulanan özel öznitelikler topluluğu.</returns>
      <param name="inherit">Öznitelikleri bulmak amacıyla bu eylemin devralma zincirini aramak için true; aksi takdirde false.</param>
      <typeparam name="T">Aranacak öznitelik türünün adı.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilterPipeline">
      <summary>Belirtilen yapılandırmaya ve eyleme yönelik filtreleri alır.</summary>
      <returns>Belirtilen yapılandırmaya ve eyleme yönelik filtreler.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilters">
      <summary>Eylem tanımlayıcısının filtrelerini alır.</summary>
      <returns>Eylem tanımlayıcısının filtreleri.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetParameters">
      <summary>Eylem tanımlayıcısının parametrelerini alır.</summary>
      <returns>Eylem tanımlayıcısının parametreleri.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Properties">
      <summary>Bu örnekle ilişkili özellikleri alır.</summary>
      <returns>Bu örnekle ilişkili özellikler.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ResultConverter">
      <summary>ExecuteAsync(HttpControllerContext, IDictionaryString, Object)" çağırmanın sonucunu bir <see cref="T:System.Net.Http.HttpResponseMessage" /> örneğine doğru şekilde dönüştürmek için dönüştürücüyü alır.</summary>
      <returns>Eylem sonucu dönüştürücüsü.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ReturnType">
      <summary>Tanımlayıcının dönüş türünü alır.</summary>
      <returns>Tanımlayıcının dönüş türü.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.SupportedHttpMethods">
      <summary>Tanımlayıcı için desteklenen HTTP yöntemleri koleksiyonunu alır.</summary>
      <returns>Tanımlayıcı için desteklenen HTTP yöntemleri koleksiyonu.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerContext">
      <summary>Tek HTTP işlemi için bilgiler içerir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.Controllers.HttpRequestContext,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Controllers.IHttpController)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="requestContext">İstek bağlamı.</param>
      <param name="request">HTTP isteği.</param>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
      <param name="controller">Denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IHttpRouteData,System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="configuration">Yapılandırma.</param>
      <param name="routeData">Rota verileri.</param>
      <param name="request">İstek.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Configuration">
      <summary>Yapılandırmayı alır veya ayarlar.</summary>
      <returns>Yapılandırma.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Controller">
      <summary>HTTP denetleyicisini alır veya ayarlar.</summary>
      <returns>HTTP denetleyicisi.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.ControllerDescriptor">
      <summary>Denetleyici tanımlayıcıyı alır veya ayarlar.</summary>
      <returns>Denetleyici tanımlayıcısı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Request">
      <summary>İsteği alır veya ayarlar.</summary>
      <returns>İstek.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RequestContext">
      <summary>İstek bağlamını alır veya ayarlar.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RouteData">
      <summary>Rota verilerini alır veya ayarlar.</summary>
      <returns>Rota verileri.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerDescriptor">
      <summary>HTTP denetleyicisini açıklayan bilgileri gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor(System.Web.Http.HttpConfiguration,System.String,System.Type)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="configuration">Yapılandırma.</param>
      <param name="controllerName">Denetleyici adı.</param>
      <param name="controllerType">Denetleyici türü.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Configuration">
      <summary>Denetleyiciyle ilişkili yapılandırmaları alır veya ayarlar.</summary>
      <returns>Denetleyiciyle ilişkili yapılandırmalar.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerName">
      <summary>Denetleyicinin adını alır veya ayarlar.</summary>
      <returns>Denetleyicinin adı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerType">
      <summary>Denetleyicinin adını alır veya ayarlar.</summary>
      <returns>Denetleyicinin türü.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen <see cref="T:System.Net.Http.HttpRequestMessage" /> için bir denetleyici örneği oluşturur.</summary>
      <returns>Oluşturulan denetleyici örneği.</returns>
      <param name="request">İstek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1">
      <summary>Denetleyicinin özel özniteliklerinden oluşan bir topluluğu alır.</summary>
      <returns>Bir özel öznitelikler topluluğu.</returns>
      <typeparam name="T">Nesnenin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary> Bu tanımlayıcının denetleyicisi için &lt;typeparamref name="T" /&gt; öğesine atanabilen bir öznitelik topluluğu döndürür. </summary>
      <returns>Bu denetleyici ile ilişkili öznitelik topluluğu.</returns>
      <param name="inherit">Öznitelikleri bulmak amacıyla bu denetleyicinin devralma zincirini aramak için true; aksi takdirde false.</param>
      <typeparam name="T">Öznitelik topluluğunu filtrelemek için kullanılır. Tüm öznitelikleri almak için bir <see cref="T:System.Object" /> değeri kullanın.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetFilters">
      <summary>Denetleyiciyle ilişkili bir filtre topluluğunu döndürür.</summary>
      <returns>Denetleyiciyle ilişkili bir filtre topluluğu.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Properties">
      <summary>Bu örnekle ilişkili özellikleri alır.</summary>
      <returns>Bu örnekle ilişkili özellikler.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerSettings">
      <summary>HTTP denetleyicisinin ayarlarını içerir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerSettings.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpControllerSettings" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="configuration">Örneği başlatmak için kullanılan bir yapılandırma nesnesi.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Formatters">
      <summary>Denetleyici <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> örnekleri koleksiyonunu alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> örnekleri koleksiyonu.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.ParameterBindingRules">
      <summary>Denetleyicinin parametre bağlama işlevleri koleksiyonunu alır.</summary>
      <returns>Parametre bağlama işlevleri koleksiyonu.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Services">
      <summary>Denetleyicinin hizmet örnekleri koleksiyonunu alır.</summary>
      <returns>Hizmet örnekleri koleksiyonu.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterBinding">
      <summary> Bir parametrenin nasıl bağlı olduğunu tanımlar. Bağlama işleminin statik (tamamen tanımlayıcı tabanlı olarak) ve istekler genelinde paylaşılabilir olması gerekir.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="descriptor">Parametreleri açıklayan bir <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.Descriptor">
      <summary>Bu örneği başlatmak için kullanılan <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> değerini alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> örneği.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.ErrorMessage">
      <summary>Bu bağlama geçersizse, bağlama hatasını açıklayan bir hata iletisi alır.</summary>
      <returns>Bir hata iletisi. Bağlama başarılı olduysa, değer boş olur.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Belirtilen istek için bağlama işlemini zaman uyumsuz olarak yürütür.</summary>
      <returns>Zaman uyumsuz işlemi temsil eden bir görev nesnesi.</returns>
      <param name="metadataProvider">Doğrulama yapmak için kullanılan meta veri sağlayıcısı.</param>
      <param name="actionContext">Bağlamaya ilişkin eylem bağlamı. Parametreyle doldurulacak parametre sözlüğünü içeren eylem bağlamı.</param>
      <param name="cancellationToken">Bağlama işleminin iptali için iptal belirteci.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.GetValue(System.Web.Http.Controllers.HttpActionContext)">
      <summary> Eylem bağlamının bağımsız değişken sözlüğünden parametre değerini alır.</summary>
      <returns>Bu parametrenin belirtilen eylem bağlamındaki değeri veya parametre henüz ayarlanmadıysa boş.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.IsValid">
      <summary>Bağlamanın başarılı olup olmadığını belirten bir değer alır.</summary>
      <returns>Bağlama başarılı olduysa true, aksi halde false şeklindedir.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.SetValue(System.Web.Http.Controllers.HttpActionContext,System.Object)">
      <summary>Eylem bağlamının bağımsız değişken sözlüğünde bu parametre bağlamasının sonucunu ayarlar.  </summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="value">Parametre değeri.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.WillReadBody">
      <summary>Bu <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> örneğinin HTTP iletisinin varlık gövdesini okuyup okumayacağını belirten bir değer döndürür.</summary>
      <returns>Bu <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> varlık gövdesini okuyacaksa true, aksi halde false şeklindedir.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterDescriptor">
      <summary>HTTP parametre tanımlayıcısını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ActionDescriptor">
      <summary>Eylem tanımlayıcıyı alır veya ayarlar.</summary>
      <returns>Eylem tanımlayıcı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Configuration">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> öğesinin <see cref="T:System.Web.Http.HttpConfiguration" /> değerini alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> öğesinin <see cref="T:System.Web.Http.HttpConfiguration" /> değeri.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.DefaultValue">
      <summary>Parametrenin varsayılan değerini alır.</summary>
      <returns>Parametrenin varsayılan değeri.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Parametreden özel özniteliklerin bir koleksiyonunu alır.</summary>
      <returns>Parametreden özel özniteliklerin bir koleksiyonu.</returns>
      <typeparam name="T">Özel özniteliklerin türü.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.IsOptional">
      <summary>Parametrenin isteğe bağlı olup olmadığını belirten bir değer alır.</summary>
      <returns>Parametre isteğe bağlıysa true, aksi takdirde false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterBinderAttribute">
      <summary>Parametre bağlama özniteliğini alır veya ayarlar.</summary>
      <returns>Parametre bağlama özniteliği.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterName">
      <summary>Parametrenin adını alır.</summary>
      <returns>Parametrenin adı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterType">
      <summary>Parametrenin türünü alır.</summary>
      <returns>Parametrenin türü.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Prefix">
      <summary>Bu parametrenin önekini alır.</summary>
      <returns>Bu parametrenin öneki.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Properties">
      <summary>Bu parametrenin özelliklerini alır.</summary>
      <returns>Bu parametrenin özellikleri.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpRequestContext">
      <summary>İstekle ilişkili bağlamı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpRequestContext.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpRequestContext" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.ClientCertificate">
      <summary>İstemci sertifikasını alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Configuration">
      <summary>Yapılandırmayı alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Web.Http.HttpConfiguration" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IncludeErrorDetail">
      <summary>Özel durum iletileri ve yığın izlemeleri gibi hata ayrıntılarının bu istek için yanıta dahil edilip edilmeyeceğini belirten bir değer alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Boolean" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IsLocal">
      <summary>İsteğin yerel bir adresten başlatılıp başlatılmadığını belirten bir değer alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Boolean" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Principal">
      <summary>Sorumluyu alır veya ayarlar</summary>
      <returns>
        <see cref="T:System.Security.Principal.IPrincipal" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.RouteData">
      <summary>Rota verilerini alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Url">
      <summary>Diğer API'lerin URL'lerini oluşturmak için kullanılan üreteci alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.VirtualPathRoot">
      <summary>Sanal yol kökünü alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.String" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionHttpMethodProvider"></member>
    <member name="P:System.Web.Http.Controllers.IActionHttpMethodProvider.HttpMethods"></member>
    <member name="T:System.Web.Http.Controllers.IActionResultConverter">
      <summary> &lt;see cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /&gt; öğesinden döndürülen bir eylemi alıp bir <see cref="T:System.Net.Http.HttpResponseMessage" /> örneğine dönüştüren bir dönüştürme yordamına ilişkin bir anlaşma. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Belirtilen <see cref="T:System.Web.Http.Controllers.IActionResultConverter" /> nesnesini başka bir nesneye dönüştürür.</summary>
      <returns>Dönüştürülen nesne.</returns>
      <param name="controllerContext">Denetleyici bağlamı.</param>
      <param name="actionResult">Eylem sonucu.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionValueBinder">
      <summary>Parametre değeriyle ilişkili eylem bağlama alma yöntemini tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> öğesini alır.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> nesnesi.</returns>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IControllerConfiguration">
      <summary> Bir denetleyici bu arabirime sahip bir öznitelikle donatılırsa, denetleyici ayarlarına ilk değerlerini vermek için çağrılır.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IControllerConfiguration.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Bu denetleyici tanımlayıcısının denetleyiciye özgü geçersiz kılmalarını ayarlamak için çağrılan geri çağırma. </summary>
      <param name="controllerSettings">İlk değerleri verilecek denetleyici ayarları.</param>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı. <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> miras alınmışsa <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> tanımlayıcısının türetilen denetleyici türü ile ilişkilendirilebileceğine dikkat edin.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionInvoker">
      <summary>HTTP işlemini çağırmak için kullanılan yöntemi içerir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>HTTP işlemini zamanuyumsuz olarak yürütür.</summary>
      <returns>Yeni başlatılan görev.</returns>
      <param name="actionContext">Yürütme bağlamı.</param>
      <param name="cancellationToken">HTTP işlemi için atanan iptal simgesi.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionSelector">
      <summary>Bir eylem yöntemi seçmeye ilişkin mantığı içerir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Seçicinin seçebileceği tüm <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> öğelerinin, eylem dizesi tarafından anahtarlanan bir eşlemesini döndürür.Bu, denetleyicideki tüm olası eylemleri keşfetmek için başlıca <see cref="T:System.Web.Http.Description.IApiExplorer" /> tarafından çağrılır.</summary>
      <returns>Seçicinin seçebileceği bir <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> eşlemesi, seçicide iyi tanımlanmış bir <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> eşlemesi yoksa null değeri.</returns>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Denetleyici için eylemi seçer.</summary>
      <returns>Denetleyici için eylem.</returns>
      <param name="controllerContext">Denetleyicinin bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpController">
      <summary>Bir HTTP denetleyicisini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Eşitleme için denetleyiciyi çalıştırır.</summary>
      <returns>Denetleyici.</returns>
      <param name="controllerContext">Sınama denetleyicisi için geçerli bağlam.</param>
      <param name="cancellationToken">İşlemi iptal eden bildirim.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ParameterBindingExtensions">
      <summary>
        <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> için genişletme yöntemlerini tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindAsError(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Hata olarak sonuçlanan parametreyi bağlar. </summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="message">Başarısız olan bağlama işleminin nedenini açıklayan hata iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithAttribute(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ParameterBindingAttribute)">
      <summary>Parametreyi bildirimde belirtilen özniteliğe sahipmiş gibi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlama sağlanacak parametre.</param>
      <param name="attribute">Bağlamayı açıklayan öznitelik.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>HTTP gövdesi içeriğini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>HTTP gövdesi içeriğini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="formatters">Parametreyi nesnede seri hale getirmek için kullanılacak uygun biçimlendiricileri sağlayan biçimlendirici listesi. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>HTTP gövdesi içeriğini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="formatters">Parametreyi nesnede seri hale getirmek için kullanılacak uygun biçimlendiricileri sağlayan biçimlendirici listesi. </param>
      <param name="bodyModelValidator">Parametreyi doğrulamak için kullanılan gövde modeli doğrulayıcısı.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Net.Http.Formatting.MediaTypeFormatter[])">
      <summary>HTTP gövdesi içeriğini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="formatters">Parametreyi nesnede seri hale getirmek için kullanılacak uygun biçimlendiricileri sağlayan biçimlendirici listesi. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Sorgu dizesini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Sorgu dizesini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="valueProviderFactories">Sorgu dizesi parametre verilerini sağlayan değer sağlayıcı üreteçleri.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Sorgu dizesini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="binder">Parametreyi bir nesnede derlemek için kullanılan model bağlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Sorgu dizesini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="binder">Parametreyi bir nesnede derlemek için kullanılan model bağlayıcı.</param>
      <param name="valueProviderFactories">Sorgu dizesi parametre verilerini sağlayan değer sağlayıcı üreteçleri.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ValueProviders.ValueProviderFactory[])">
      <summary>Sorgu dizesini ayrıştırarak parametreyi bağlar.</summary>
      <returns>HTTP parametresi bağlama nesnesi.</returns>
      <param name="parameter">Bağlanacak parametreyi açıklayan parametre tanımlayıcısı.</param>
      <param name="valueProviderFactories">Sorgu dizesi parametre verilerini sağlayan değer sağlayıcı üreteçleri.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor">
      <summary>Yansıtılan zaman uyumlu veya zaman uyumsuz bir eylem yöntemini gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor,System.Reflection.MethodInfo)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> sınıfının yeni bir örneğini belirtilen tanımlayıcı ve yöntem ayrıntılarıyla başlatır.</summary>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
      <param name="methodInfo">Eylem-yöntem bilgileri.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionName">
      <summary>Eylem adını alır.</summary>
      <returns>Eylemin adı.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.Equals(System.Object)"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Açıklanan eylemi yerine getirir ve tamamlandıktan sonra eylemin döndürülen değerini içerecek bir <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</summary>
      <returns>Tamamlandıktan sonra eylemin döndürülen değerini içerecek bir [T:System.Threading.Tasks.Task`1"].</returns>
      <param name="controllerContext">Bağlam.</param>
      <param name="arguments">Bağımsız değişkenler.</param>
      <param name="cancellationToken">Eylemi iptal edecek iptal belirteci.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Bu üye için tanımlanan ve türe göre belirlenen özel özniteliklerin dizisini döndürür.</summary>
      <returns>Bir özel öznitelikler dizisi veya özel öznitelik yoksa boş bir dizi.</returns>
      <param name="inherit">Öznitelikleri bulmak amacıyla bu eylemin devralma zincirini aramak için true; aksi takdirde false.</param>
      <typeparam name="T">Özel özniteliklerin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetFilters">
      <summary>Eylem filtreleriyle ilgili bilgileri alır.</summary>
      <returns>Filtre bilgileri.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetHashCode"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetParameters">
      <summary>Eylem yönteminin parametrelerini alır.</summary>
      <returns>Eylem yönteminin parametreleri.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.MethodInfo">
      <summary>Eylem-yöntem bilgilerini alır veya ayarlar.</summary>
      <returns>Eylem-yöntem bilgileri.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ReturnType">
      <summary>Bu yöntemin dönüş türünü alır.</summary>
      <returns>Bu yöntemin dönüş türü.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.SupportedHttpMethods">
      <summary>Desteklenen http yöntemlerini alır veya ayarlar.</summary>
      <returns>Desteklenen http yöntemleri.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor">
      <summary>Yansıtılan HTTP parametre tanımlayıcısını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Reflection.ParameterInfo)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
      <param name="parameterInfo">Parametre bilgileri.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.DefaultValue">
      <summary>Parametrenin varsayılan değerini alır.</summary>
      <returns>Parametrenin varsayılan değeri.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Parametreden özel özniteliklerin bir koleksiyonunu alır.</summary>
      <returns>Parametreden özel özniteliklerin bir koleksiyonu.</returns>
      <typeparam name="TAttribute">Özel özniteliklerin türü.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.IsOptional">
      <summary>Parametrenin isteğe bağlı olup olmadığını belirten bir değer alır.</summary>
      <returns>Parametre isteğe bağlıysa true, aksi takdirde false şeklindedir.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterInfo">
      <summary>Parametre bilgilerini alır veya ayarlar.</summary>
      <returns>Parametre bilgileri.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterName">
      <summary>Parametrenin adını alır.</summary>
      <returns>Parametrenin adı.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterType">
      <summary>Parametrenin türünü alır.</summary>
      <returns>Parametrenin türü.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ResponseMessageResultConverter">
      <summary>Dönüş türü <see cref="T:System.Net.Http.HttpResponseMessage" /> olan eylemler için bir dönüştürücüyü gösterir. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Bir <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> nesnesini başka bir nesneye dönüştürür.</summary>
      <returns>Dönüştürülen nesne.</returns>
      <param name="controllerContext">Denetleyici bağlamı.</param>
      <param name="actionResult">Eylem sonucu.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ServicesContainer">
      <summary>ASP.NET Web API tarafından kullanılan hizmetler için bir kapsayıcı sağlayan soyut bir sınıf.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)">
      <summary> Verili hizmet türünün hizmetler listesinin sonuna bir hizmet ekler.  </summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="service">Hizmet örneği.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Belirtilen koleksiyonun hizmetlerini verili hizmet türünün hizmetler listesinin sonuna ekler. </summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="services">Eklenecek hizmetler.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)">
      <summary> Verili hizmet türünün tüm hizmet örneklerini kaldırır.  </summary>
      <param name="serviceType">Hizmetler listesinden silinecek hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)">
      <summary>Çok örnekli bir hizmet türünün tüm örneklerini kaldırır.</summary>
      <param name="serviceType">Kaldırılacak hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)">
      <summary>Tek örnekli bir hizmet türünü kaldırır.</summary>
      <param name="serviceType">Kaldırılacak hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Dispose">
      <summary>Uygulama tarafından tanımlanan, yönetilmeyen kaynakları serbest bırakma, salma veya sıfırlama ile ilişkili görevleri gerçekleştirir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})">
      <summary> Belirtilen önerme tarafından tanımlanan koşullarla eşleşen bir hizmet arar ve bulduğu ilk örneğin sıfır tabanlı dizinini döndürür. </summary>
      <returns>Bulunduysa ilk örneğin sıfır tabanlı dizini; bulunmadıysa,  -1 değeri.</returns>
      <param name="serviceType">Hizmet türü.</param>
      <param name="match">Aranacak öğenin koşullarını tanımlayan temsilci. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)">
      <summary>Belirtilen bir türün bir hizmet örneğini alır.</summary>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)">
      <summary>Belirtilen bir türün değiştirilebilir bir hizmet örnekleri listesini alır.</summary>
      <returns>Değiştirilebilir bir hizmet örnekleri listesi.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)">
      <summary>Belirtilen bir türün hizmet örneklerinin bir koleksiyonunu alır.</summary>
      <returns>Hizmet örneklerinin bir koleksiyonu.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)">
      <summary> Belirtilen dizinde koleksiyona bir hizmet ekler. </summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="index">Hizmetin ekleneceği sıfır tabanlı dizin.<see cref="F:System.Int32.MaxValue" /> geçilirse, öğenin sona eklenmesini sağlar.</param>
      <param name="service">Eklenecek hizmet.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Koleksiyonun öğelerini hizmete belirtilen dizinde ekler. </summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="index">Yeni öğelerin ekleneceği sıfır tabanlı dizin.<see cref="F:System.Int32.MaxValue" /> geçilirse, öğelerin sona eklenmesini sağlar.</param>
      <param name="services">Eklenecek hizmetler koleksiyonu.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)">
      <summary> Hizmet türünün GetService veya GetServices ile alınması gerekip gerekmediğini belirtir.  </summary>
      <returns>hizmet tekilse true. </returns>
      <param name="serviceType">sorgulanacak hizmet türü</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)">
      <summary> Verili hizmetin ilk örneğini verili hizmet türünü hizmet listesinden kaldırır. </summary>
      <returns>öğesi başarıyla kaldırılırsa true; kaldırılmazsa, false.</returns>
      <param name="serviceType">Hizmet türü.</param>
      <param name="service">Kaldırılacak hizmet örneği.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})">
      <summary> Belirtilen önerme tarafından tanımlanan koşullarla eşleşen tüm öğeleri kaldırır. </summary>
      <returns>Listeden kaldırılan öğelerin sayısı.</returns>
      <param name="serviceType">Hizmet türü.</param>
      <param name="match">Kaldırılacak öğenin koşullarını tanımlayan temsilci.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)">
      <summary> Belirtilen dizindeki hizmeti kaldırır. </summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="index">Kaldırılacak hizmetin sıfır tabanlı dizini.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)">
      <summary>Verili hizmet örneğine sahip verili hizmet türünün mevcut tüm hizmetlerini değiştirir.Hem tekil hem çoğul hizmetlerde çalışır.</summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="service">Hizmet örneği.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)">
      <summary>Çok örnekli bir hizmetin tüm örneklerini yeni bir örnekle değiştirir.</summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="service">Bu türün geçerli hizmetlerini değiştirecek hizmet örneği.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Verili hizmet örneklerine sahip verili hizmet türünün mevcut tüm hizmetlerini değiştirir. </summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="services">Hizmet örnekleri.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)">
      <summary>Belirtilen bir türdeki tek örnekli bir hizmeti değiştirir.</summary>
      <param name="serviceType">Hizmet türü. </param>
      <param name="service">Hizmet örneği.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)">
      <summary>Tek bir hizmet türünün arabelleğe alınmış değerlerini değiştirir.</summary>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ValueResultConverter`1">
      <summary> Rastgele bir <paramref name="T" /> değeri döndüren eylemlerden yanıt oluşturmak için bir dönüştürücü. </summary>
      <typeparam name="T">Bir eyleme ilişkin bildirilmiş dönüş türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.ValueResultConverter`1" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Rastgele bir <paramref name="T" /> dönüş türü olan bir eylemin sonucunu bir <see cref="T:System.Net.Http.HttpResponseMessage" /> örneğine dönüştürür.</summary>
      <returns>Yeni oluşturulan <see cref="T:System.Net.Http.HttpResponseMessage" /> nesnesi.</returns>
      <param name="controllerContext">Eylem denetleyicisi bağlamı.</param>
      <param name="actionResult">Yürütme sonucu.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.VoidResultConverter">
      <summary>Bir değer döndürmeyen eylemlerden yanıt oluşturmak için bir dönüştürücüyü gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Controllers.VoidResultConverter" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Bir değer döndürmeyen eylemlerden oluşturulan yanıtı dönüştürür.</summary>
      <returns>Dönüştürülen eylem.</returns>
      <param name="controllerContext">Denetleyicinin bağlamı.</param>
      <param name="actionResult">Eylemin sonucu.</param>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyResolver">
      <summary>Bir bağımlılık ekleme kapsayıcısını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
      <summary> Bir çözümleme kapsamı başlatır. </summary>
      <returns>Bağımlılık kapsamı.</returns>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyScope">
      <summary>Bağımlılık kümesinin arabirimini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
      <summary>Kapsamdan bir hizmet alır.</summary>
      <returns>Alınan hizmet.</returns>
      <param name="serviceType">Alınacak hizmet.</param>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
      <summary>Kapsamdan bir hizmetler koleksiyonu alır.</summary>
      <returns>Alınan hizmetler koleksiyonu.</returns>
      <param name="serviceType">Alınacak hizmetler koleksiyonu.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiDescription">
      <summary> Göreli URI yolu ve HTTP yöntemi ile tanımlanmış bir API belirtir. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiDescription.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Description.ApiDescription" /> sınıfının yeni bir örneğini başlatır. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ActionDescriptor">
      <summary> API işleyecek eylem tanımlayıcısını alır veya ayarlar. </summary>
      <returns> Eylem tanımlayıcı. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Documentation">
      <summary> API belgelerini alır veya ayarlar. </summary>
      <returns> Belgeler. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.HttpMethod">
      <summary> HTTP yöntemini alır veya ayarlar. </summary>
      <returns> HTTP yöntemi. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ID">
      <summary>Kimliği alır.Kimlik <see cref="T:System.Web.Http.HttpServer" /> içinde benzersizdir.</summary>
      <returns>Kimlik.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ParameterDescriptions">
      <summary> Parametre açıklamalarını alır. </summary>
      <returns>Parametre açıklamaları.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.RelativePath">
      <summary> Göreli yolu alır veya ayarlar. </summary>
      <returns> Göreli yol. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ResponseDescription">
      <summary>Yanıt açıklamasını alır veya ayarlar.</summary>
      <returns>Yanıt açıklaması.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Route">
      <summary> Kayıtlı API rotasını alır veya ayarlar. </summary>
      <returns> Rota. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedRequestBodyFormatters">
      <summary> Desteklenen istek gövde biçimlendiricilerini alır. </summary>
      <returns>Desteklenen istek gövde biçimlendiricileri.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedResponseFormatters">
      <summary> Desteklenen yanıt biçimlendiricilerini alır. </summary>
      <returns>Desteklenen yanıt biçimlendiricileri.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorer">
      <summary> Sistemdeki rotalara, denetleyicilere ve eylemlere dayalı hizmetin URI alanını araştırır. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.Description.ApiExplorer" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="configuration">Yapılandırma.</param>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions">
      <summary> API açıklamalarını alır. Açıklamalar, ilk erişimde başlatılır. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.DocumentationProvider">
      <summary> Belge sağlayıcısını alır veya ayarlar. Sağlayıcı, API belgelemesinden sorumlu olacaktır. </summary>
      <returns> Belge sağlayıcısı. </returns>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.GetHttpMethodsSupportedByAction(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Eylem tarafından desteklenen HttpMethods koleksiyonunu alır. <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> başlatılırken çağrılır. </summary>
      <returns>Eylem tarafından desteklenen HttpMethods koleksiyonu.</returns>
      <param name="route">Rota.</param>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreAction(System.String,System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Eylemin <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> oluşturma işlemi için değerlendirilip değerlendirilmeyeceğini belirler. <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> başlatılırken çağrılır. </summary>
      <returns>Eylemin <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> oluşturma için değerlendirilmesi gerekiyorsa true, aksi takdirde false.</returns>
      <param name="actionVariableValue">Rotadaki eylem değişken değeri.</param>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
      <param name="route">Rota.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreController(System.String,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Denetleyicinin <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> oluşturma işlemi için değerlendirilip değerlendirilmeyeceğini belirler. <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> başlatılırken çağrılır. </summary>
      <returns>Denetleyicinin <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> oluşturma için değerlendirilmesi gerekiyorsa true, aksi takdirde false.</returns>
      <param name="controllerVariableValue">Rotadaki denetleyici değişken değeri.</param>
      <param name="controllerDescriptor">Denetleyici tanımlayıcı.</param>
      <param name="route">Rota.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorerSettingsAttribute">
      <summary> Bu öznitelik <see cref="T:System.Web.Http.Description.ApiExplorer" /> davranışını etkilemek için denetleyicilerde ve eylemlerde kullanılabilir. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorerSettingsAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Description.ApiExplorerSettingsAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorerSettingsAttribute.IgnoreApi">
      <summary> Denetleyici veya eylemin, <see cref="T:System.Web.Http.Description.ApiExplorer" /> tarafından oluşturulan <see cref="T:System.Web.Http.Description.ApiDescription" /> örneklerinden hariç tutulup tutulmayacağını gösteren bir değer alır veya ayarlar. </summary>
      <returns>Denetleyici veya eylemin yoksayılması gerekiyorsa true; gerekmiyorsa, false şeklindedir.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterDescription">
      <summary> API'de, göreli URI yolu ve HTTP yöntemi ile tanımlanmış bir parametreyi belirtir. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiParameterDescription.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Description.ApiParameterDescription" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Documentation">
      <summary> Belgeleri alır veya ayarlar. </summary>
      <returns> Belgeler. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Name">
      <summary> Adı alır veya ayarlar. </summary>
      <returns> Ad. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.ParameterDescriptor">
      <summary> Parametre tanımlayıcıyı alır veya ayarlar. </summary>
      <returns> Parametre tanımlayıcı. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Source">
      <summary> Parametre kaynağını alır veya ayarlar. Bu, istek URI'sinden, istek gövdesinden veya başka yerlerden gelebilir. </summary>
      <returns> Kaynak. </returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterSource">
      <summary> Parametrenin nereden geldiğini belirtir. </summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromBody">
      <summary>Gövdeden gelen parametre.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromUri">
      <summary>Uri'den gelen parametre.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.Unknown">
      <summary>Konumu bilinmiyor.</summary>
    </member>
    <member name="T:System.Web.Http.Description.IApiExplorer">
      <summary>
        <see cref="T:System.Web.Http.Description.ApiDescription" /> koleksiyonu almak için arabirimi tanımlar. </summary>
    </member>
    <member name="P:System.Web.Http.Description.IApiExplorer.ApiDescriptions">
      <summary> API açıklamalarını alır. </summary>
    </member>
    <member name="T:System.Web.Http.Description.IDocumentationProvider">
      <summary> Hizmet belgelemesinden sorumlu olan sağlayıcıyı tanımlar. </summary>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Belgeleri <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> öğesine göre alır. </summary>
      <returns>Denetleyiciye ilişkin belgeler.</returns>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)"></member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Belgeleri <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> öğesine göre alır. </summary>
      <returns>Denetleyiciye ilişkin belgeler.</returns>
      <param name="parameterDescriptor">Parametre tanımlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)"></member>
    <member name="T:System.Web.Http.Description.ResponseDescription">
      <summary>API yanıtını açıklar.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseDescription.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Description.ResponseDescription" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.DeclaredType">
      <summary>Bildirilen yanıt türünü alır veya ayarlar.</summary>
      <returns>Bildiren yanıt türü.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.Documentation">
      <summary>Yanıt belgelerini alır veya ayarlar.</summary>
      <returns>Yanıt belgeleri.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.ResponseType">
      <summary>Fili yanıt türünü alır veya ayarlar.</summary>
      <returns>Fiili yanıt türü.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ResponseTypeAttribute">
      <summary>Bildirilen döndürme türü <see cref="T:System.Net.Http.HttpResponseMessage" /> veya <see cref="T:System.Web.Http.IHttpActionResult" /> olduğunda bir eylem tarafından döndürülen varlık türünü belirtmek için bunu kullanın.<see cref="T:System.Web.Http.Description.ApiDescription" /> oluşturulurken <see cref="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType" /> öğesi <see cref="T:System.Web.Http.Description.ApiExplorer" /> tarafından okunur.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseTypeAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Web.Http.Description.ResponseTypeAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="responseType">Yanıt türü.</param>
    </member>
    <member name="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType">
      <summary>Yanıt türünü alır.</summary>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />'ın dış bağımlılıkları olmayan bir uygulamasını sağlar. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.GetAssemblies">
      <summary> Uygulamanın kullanabileceği derlemelerin bir listesini döndürür. </summary>
      <returns>&lt;Bkz. cref="T:System.Collections.ObjectModel.Collection`1" /&gt; derleme koleksiyonu.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator">
      <summary>Varsayılan bir <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> gerçekleştirmesini gösterir. <see cref="T:System.Web.Http.Services.DependencyResolver" /> yoluyla farklı bir uygulama kaydedilebilir. <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> örneği başına bir <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> örneğine sahip olduğumuz ancak bir <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> için birden çok <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> bulunan durumları da destekleyebildiğimiz durum için iyileştiririz. Belirtilen ikinci durumda, arama <see cref="P:HttpControllerDescriptor.Properties" /> sözlüğünden geçtiğinden kısmen daha yavaştır. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary> Belirtilen <paramref name="request" /> kullanılarak <paramref name="controllerType" /> ile belirtilen <see cref="T:System.Web.Http.Controllers.IHttpController" /> öğesini oluşturur.</summary>
      <returns>
        <paramref name="controllerType" /> türünün bir örneği.</returns>
      <param name="request">İstek iletisi.</param>
      <param name="controllerDescriptor">Denetleyici tanımlayıcı.</param>
      <param name="controllerType">Denetleyicinin türü.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector">
      <summary>Bir <see cref="T:System.Net.Http.HttpRequestMessage" /> verilerek bir <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> seçmek için varsayılan bir <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> örneğini gösterir. <see cref="P:System.Web.Http.HttpConfiguration.Services" /> yoluyla farklı bir uygulama kaydedilebilir. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="configuration">Yapılandırma.</param>
    </member>
    <member name="F:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.ControllerSuffix">
      <summary>Denetleyici adındaki sonek dizesini belirtir.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
      <summary>Seçicinin seçebileceği tüm <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> öğelerinin, denetleyici dizesi tarafından anahtarlanan bir eşlemesini döndürür. </summary>
      <returns>Seçicinin seçebileceği tüm <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> öğelerinin eşlemesidir veya seçicide iyi tanımlanmış bir <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> eşlemesi yoksa null değerindedir.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen <see cref="T:System.Net.Http.HttpRequestMessage" /> için denetleyicinin adını alır.</summary>
      <returns>Belirtilen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesine ilişkin denetleyicinin adı.</returns>
      <param name="request">HTTP isteği iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary>Belirli bir <see cref="T:System.Net.Http.HttpRequestMessage" /> için <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> seçer.</summary>
      <returns>Belirli <see cref="T:System.Net.Http.HttpRequestMessage" /> için <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> örneği.</returns>
      <param name="request">HTTP isteği iletisi.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver">
      <summary> Harici bağımlılıklar olmadan <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> öğesinin uygulanmasını sağlar. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor(System.Predicate{System.Type})">
      <summary>Denetleyici türlerini filtreleme koşulu kullanarak, yeni bir <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" /> örneği başlatır. </summary>
      <param name="predicate">Koşul.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Uygulama için kullanılabilir olan denetleyicilerin listesini döndürür. </summary>
      <returns>Denetleyicilere ait &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;.</returns>
      <param name="assembliesResolver">Derleme çözümleyicisi.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
      <summary>Çözümleyici türünün denetleyici türü koşulu olup olmadığını belirten bir değer alır.</summary>
      <returns>Çözümleyici türü denetleyici türü koşuluysa true, aksi halde false şeklindedir.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpControllerDispatcher">
      <summary>Gelen bir <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesini işlenmek üzere <see cref="T:System.Web.Http.Controllers.IHttpController" /> uygulamasına gönderir.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> sınıfının yeni bir örneğini belirtilen yapılandırmayla başlatır.</summary>
      <param name="configuration">Http yapılandırması.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.HttpControllerDispatcher.Configuration">
      <summary>HTTP yapılandırmasını alır.</summary>
      <returns>HTTP yapılandırması.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Gelen bir <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesini bir <see cref="T:System.Web.Http.Controllers.IHttpController" /> öğesine gönderir.</summary>
      <returns>Süren işlemi gösteren bir <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="request">Gönderme isteği</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher">
      <summary> Bu sınıf, eşlenen yolun <see cref="T:System.Web.Http.Routing.IHttpRoute" /> arabirimini inceleyen varsayılan uç nokta ileti işleyicisidir ve çağrılacak ileti işleyicisini seçer. <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> null ise görevi <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> temsilcisine devreder. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Sağlanan <see cref="T:System.Web.Http.HttpConfiguration" /> ve <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> nesnelerini varsayılan işleyici olarak kullanarak <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> sınıfının yeni bir örneğine ilk değerlerini verir. </summary>
      <param name="configuration">Sunucu yapılandırması.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary> Sağlanan <see cref="T:System.Web.Http.HttpConfiguration" /> ve <see cref="T:System.Net.Http.HttpMessageHandler" /> nesnelerini kullanarak <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> sınıfının yeni bir örneğine ilk değerlerini verir. </summary>
      <param name="configuration">Sunucu yapılandırması.</param>
      <param name="defaultHandler">
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> hiçbir <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> nesnesine sahip olmadığında kullanılacak varsayılan işleyici.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Eşzamansız bir işlem olarak bir HTTP isteği gönderir.</summary>
      <returns>Eşzamansız işlemi temsil eden görev nesnesi.</returns>
      <param name="request">Gönderilecek HTTP isteği iletisi.</param>
      <param name="cancellationToken">İşlemi iptal etmek için iptal belirteci.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IAssembliesResolver">
      <summary>Bir uygulamanın derlemelerini yönetmek için bir özet sağlar.<see cref="T:System.Web.Http.Services.DependencyResolver" /> yoluyla farklı bir uygulama kaydedilebilir.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IAssembliesResolver.GetAssemblies">
      <summary> Uygulamanın kullanabileceği derlemelerin bir listesini döndürür. </summary>
      <returns>Derlemelere ait &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerActivator">
      <summary>Bir <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> için gereken yöntemleri tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary>Bir <see cref="T:System.Web.Http.Controllers.IHttpController" /> nesnesi oluşturur.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Controllers.IHttpController" /> nesnesi.</returns>
      <param name="request">İleti isteği.</param>
      <param name="controllerDescriptor">HTTP denetleyicisi tanımlayıcısı.</param>
      <param name="controllerType">Denetleyicinin türü.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerSelector">
      <summary> Bir <see cref="T:System.Web.Http.Controllers.IHttpController" /> üreteci için gereken yöntemleri tanımlar. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
      <summary>Seçicinin seçebileceği tüm <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> öğelerinin, denetleyici dizesi tarafından anahtarlanan bir eşlemesini döndürür.Bu, sistemdeki tüm olası denetleyicileri keşfetmek için başlıca <see cref="T:System.Web.Http.Description.IApiExplorer" /> tarafından çağrılır.</summary>
      <returns>Seçicinin seçebileceği tüm <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> öğelerinin eşlemesidir veya seçicide iyi tanımlanmış bir <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> eşlemesi yoksa null değerindedir.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary> Belirli bir <see cref="T:System.Net.Http.HttpRequestMessage" /> için <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> seçer. </summary>
      <returns>Bir <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> örneği.</returns>
      <param name="request">İstek iletisi.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver">
      <summary> Bir uygulamanın denetleyici türlerini yönetmek için bir özet sağlar. DependencyResolver aracılığıyla farklı bir uygulama kaydettirilebilir.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Uygulama için kullanılabilir olan denetleyicilerin listesini döndürür. </summary>
      <returns>Denetleyicilere ait &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;.</returns>
      <param name="assembliesResolver">Başarısız derlemeler için çözümleyici.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks">
      <summary>Bu derlemede kullanılan yakalama bloklarını sağlar.</summary>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler">
      <summary>System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync içindeki yakalama bloğunu alır.</summary>
      <returns>System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync içindeki yakalama bloğu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher">
      <summary>System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync içindeki yakalama bloğunu alır.</summary>
      <returns>System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync içindeki yakalama bloğu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer">
      <summary>System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync içindeki yakalama bloğunu alır.</summary>
      <returns>System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync içindeki yakalama bloğu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter">
      <summary>
        <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" /> kullanılırken System.Web.Http.ApiController.ExecuteAsync içindeki yakalama bloğunu alır.</summary>
      <returns>
        <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" /> kullanılırken System.Web.Http.ApiController.ExecuteAsync içindeki yakalama bloğu.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContext">
      <summary>Bir özel durumu ve yakalandığında onunla ilişkilendirilen bağlamsal verileri temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock)">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Yakalanan özel durum.</param>
      <param name="catchBlock">Özel durumun yakalandığı yakalama bloğu.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Yakalanan özel durum.</param>
      <param name="catchBlock">Özel durumun yakalandığı yakalama bloğu.</param>
      <param name="request">Özel durum yakalandığında işlenmekte olan istek.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Yakalanan özel durum.</param>
      <param name="catchBlock">Özel durumun yakalandığı yakalama bloğu.</param>
      <param name="request">Özel durum yakalandığında işlenmekte olan istek.</param>
      <param name="response">Özel durum yakalandığında döndürülmekte olan yanıt.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Web.Http.Controllers.HttpActionContext)">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Yakalanan özel durum.</param>
      <param name="catchBlock">Özel durumun yakalandığı yakalama bloğu.</param>
      <param name="actionContext">Özel durumun meydana geldiği eylem bağlamı.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ActionContext">
      <summary>Varsa özel durumun meydana geldiği eylem bağlamını alır.</summary>
      <returns>Varsa özel durumun meydana geldiği eylem bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.CatchBlock">
      <summary>Özel durumun yakalandığı yakalama bloğunu alır.</summary>
      <returns>Özel durumun yakalandığı yakalama bloğu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ControllerContext">
      <summary>Varsa özel durumun meydana geldiği denetleyici bağlamını alır.</summary>
      <returns>Varsa özel durumun meydana geldiği denetleyici bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Exception">
      <summary>Yakalanan özel durumu alır.</summary>
      <returns>Yakalanan özel durum.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Request">
      <summary>Özel durum yakalandığında işlenmekte olan isteği alır.</summary>
      <returns>Özel durum yakalandığında işlenmekte olan istek.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.RequestContext">
      <summary>Özel durumun meydana geldiği istek bağlamını alır.</summary>
      <returns>Özel durumun meydana geldiği istek bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Response">
      <summary>Özel durum yakalandığında gönderilmekte olan yanıtı alır.</summary>
      <returns>Özel durum yakalandığında gönderilmekte olan yanıt.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock">
      <summary>Bir özel durum bağlamı için yakalama bloğu konumunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="name">Özel durumun yakalandığı yakalama bloğunun etiketi.</param>
      <param name="isTopLevel">Özel durumun yakalandığı yakalama bloğunun ana bilgisayardan bir önce olup olmadığını belirten bir değer.</param>
      <param name="callsHandler">Yakalama bloğundaki özel durumların günlüğe kaydedildikten sonra işlenip işlenemeyeceğini belirten bir değer.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.CallsHandler">
      <summary>Yakalama bloğundaki özel durumların günlüğe kaydedildikten sonra işlenip işlenemeyeceğini belirten bir değer alır.</summary>
      <returns>Yakalama bloğundaki özel durumların günlüğe kaydedildikten sonra işlenip işlenemeyeceğini belirten bir değer.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.IsTopLevel">
      <summary>Özel durumun yakalandığı yakalama bloğunun ana bilgisayardan bir önce olup olmadığını belirten bir değer alır.</summary>
      <returns>Özel durumun yakalandığı yakalama bloğunun ana bilgisayardan bir önce olup olmadığını belirten bir değer.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.Name">
      <summary>Özel durumun yakalandığı yakalama bloğu etiketi alır.</summary>
      <returns>Özel durumun yakalandığı yakalama bloğu etiketi.</returns>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.ToString">
      <returns>
        <see cref="T:System.String" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandler">
      <summary>İşlenmeyen özel durum işleyicisini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandler" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>Türetilen bir sınıfta geçersiz kılındığında özel durumu zaman uyumlu olarak işler.</summary>
      <param name="context">Özel durum işleyici bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>Türetilen bir sınıfta geçersiz kılındığında özel durumu zaman uyumsuz olarak işler.</summary>
      <returns>Zaman uyumsuz özel durum işleme işlemini temsil eden görev.</returns>
      <param name="context">Özel durum işleyici bağlamı.</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>Özel durumun işlenip işlenmeyeceğini belirler.</summary>
      <returns>Özel durum işlenecekse true, aksi takdirde false.</returns>
      <param name="context">Özel durum işleyici bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.System#Web#Http#ExceptionHandling#IExceptionHandler#HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext">
      <summary>İşlenmeyen özel durumu işlemenin gerçekleştiği bağlamı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exceptionContext">Özel durum bağlamı.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.CatchBlock">
      <summary>Özel durumun yakalandığı yakalama bloğunu alır.</summary>
      <returns>Özel durumun yakalandığı yakalama bloğu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Exception">
      <summary>Yakalanan özel durumu alır.</summary>
      <returns>Yakalanan özel durum.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.ExceptionContext">
      <summary>Özel durumu ve ilgili verileri sağlayan özel durum bağlamını alır.</summary>
      <returns>Özel durumu ve ilgili verileri sağlayan özel durum bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Request">
      <summary>Özel durum yakalandığında işlenmekte olan isteği alır.</summary>
      <returns>Özel durum yakalandığında işlenmekte olan istek.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.RequestContext">
      <summary>Özel durumun meydana geldiği istek bağlamını alır.</summary>
      <returns>Özel durumun meydana geldiği istek bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Result">
      <summary>Özel durum işlendiğinde yanıt iletisini sağlayan sonucu alır veya ayarlar.</summary>
      <returns>Özel durum işlendiğinde yanıt iletisini sağlayan sonuç.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" /> öğesi için genişletme yöntemleri sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions.HandleAsync(System.Web.Http.ExceptionHandling.IExceptionHandler,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Bir özel durum işleyici çağırır ve varsa yanıt işlemeyi belirler.</summary>
      <returns>Tamamlandığında, özel durum işlendiği zaman döndürülecek yanıt iletisini içeren veya özel durum işlenmemiş halde kaldığında null olan bir görev.</returns>
      <param name="handler">İşlenmeyen özel durum işleyicisi.</param>
      <param name="context">Özel durum bağlamı.</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLogger">
      <summary>İşlenmeyen özel durum günlükçüsünü temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLogger" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>Türetilen bir sınıfta geçersiz kılındığında özel durumu zaman uyumlu olarak günlüğe kaydeder.</summary>
      <param name="context">Özel durum günlükçü bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>Türetilen bir sınıfta geçersiz kılındığında özel durumu zaman uyumsuz olarak günlüğe kaydeder.</summary>
      <returns>Zaman uyumsuz özel durum günlüğe kaydetme işlemini temsil eden görev.</returns>
      <param name="context">Özel durum günlükçü bağlamı.</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.ShouldLog(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>Özel durumun günlüğe kaydedilip kaydedilmeyeceğini belirler.</summary>
      <returns>Özel durum günlüğe kaydedilecekçe true, aksi takdirde false.</returns>
      <param name="context">Özel durum günlükçü bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.System#Web#Http#ExceptionHandling#IExceptionLogger#LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext">
      <summary>İşlenmeyen özel durumu günlüğe kaydetmenin gerçekleştiği bağlamı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exceptionContext">Özel durum bağlamı.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CallsHandler">
      <summary>Özel durumun daha sonra yeni bir yanıt iletisi oluşturmak üzere bir <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" /> tarafından işlenip işlenemeyeceğini belirten bir değer alır veya ayarlar.</summary>
      <returns>Özel durumun daha sonra yeni bir yanıt iletisi oluşturmak üzere bir <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" /> tarafından işlenip işlenemeyeceğini belirten bir değer.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CatchBlock">
      <summary>Özel durumun yakalandığı yakalama bloğunu alır.</summary>
      <returns>Özel durumun yakalandığı yakalama bloğu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Exception">
      <summary>Yakalanan özel durumu alır.</summary>
      <returns>Yakalanan özel durum.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.ExceptionContext">
      <summary>Özel durumu ve ilgili verileri sağlayan özel durum bağlamını alır.</summary>
      <returns>Özel durumu ve ilgili verileri sağlayan özel durum bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Request">
      <summary>Özel durum yakalandığında işlenmekte olan isteği alır.</summary>
      <returns>Özel durum yakalandığında işlenmekte olan istek.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.RequestContext">
      <summary>Özel durumun meydana geldiği istek bağlamını alır.</summary>
      <returns>Özel durumun meydana geldiği istek bağlamı.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions">
      <summary>
        <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" /> öğesi için genişletme yöntemleri sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions.LogAsync(System.Web.Http.ExceptionHandling.IExceptionLogger,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Bir özel durum günlükçüsü çağırır.</summary>
      <returns>Zaman uyumsuz özel durum günlüğe kaydetme işlemini temsil eden görev.</returns>
      <param name="logger">İşlenmeyen özel durum günlükçüsü.</param>
      <param name="context">Özel durum bağlamı.</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionServices">
      <summary>Yakalama bloklarından günlüğe kaydetme ve işleme çağırmak üzere özel durum hizmetleri oluşturur.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Varsa kayıtlı işleyici hizmetini çağıran ve özel durumların yanlışlıkla ana bilgisayara yayılmamasını sağlayan bir özel durum işleyici alır.</summary>
      <returns>Herhangi bir kayıtlı işleyici çağıran ve özel durumların yanlışlıkla ana bilgisayara yayılmamasını sağlayan bir özel durum işleyici.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.HttpConfiguration)">
      <summary>Varsa kayıtlı işleyici hizmetini çağıran ve özel durumların yanlışlıkla ana bilgisayara yayılmamasını sağlayan bir özel durum işleyici alır.</summary>
      <returns>Herhangi bir kayıtlı işleyici çağıran ve özel durumların yanlışlıkla ana bilgisayara yayılmamasını sağlayan bir özel durum işleyici.</returns>
      <param name="configuration">Yapılandırma.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Tüm kayıtlı günlükçü hizmetlerini çağıran bir özel durum günlükçüsü.</summary>
      <returns>Bileşik günlükçü.</returns>
      <param name="services">Hizmet kapsayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.HttpConfiguration)">
      <summary>Tüm kayıtlı günlükçü hizmetlerini çağıran bir özel durum günlükçüsü.</summary>
      <returns>Bileşik günlükçü.</returns>
      <param name="configuration">Yapılandırma.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionHandler">
      <summary>İşlenmeyen özel durum işleyicisini tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>Yayılmasına izin vererek veya onun yerine döndürmek üzere bir yanıt iletisi sağlayarak işlenmeyen bir özel durumu işler.</summary>
      <returns>Zaman uyumsuz özel durum işleme işlemini temsil eden görev.</returns>
      <param name="context">Özel durum işleyici bağlamı.</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionLogger">
      <summary>İşlenmeyen özel durum günlükçüsü tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>İşlenmeyen özel durumu günlüğe kaydeder.</summary>
      <returns>Zaman uyumsuz özel durum günlüğe kaydetme işlemini temsil eden görev.</returns>
      <param name="context">Özel durum günlükçü bağlamı.</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionDescriptorFilterProvider">
      <summary>Bir eylem yöntemi hakkında; eylem yönteminin adı, denetleyicisi, parametreleri, öznitelikleri ve filtreleri gibi bilgileri sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.ActionDescriptorFilterProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Bu eylem yöntemine ilişkin filtreleri döndürür.</summary>
      <returns>Bu eylem yöntemine ilişkin filtreler.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionFilterAttribute">
      <summary>Tüm eylem-filtre öznitelikleri için temel sınıfı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Eylem yöntemi çağrıldıktan sonra gerçekleşir.</summary>
      <param name="actionExecutedContext">Eylem tarafından yürütülen bağlam.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Eylem yöntemi çağrılmadan önce gerçekleşir.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Filtre eylemini zamanuyumsuz olarak yürütür.</summary>
      <returns>Bu işlem için yeni oluşturulan görev.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="cancellationToken">Bu görev için atanan iptal simgesi.</param>
      <param name="continuation">Eylem yöntemi çağrıldıktan sonra devam edecek atama işlevi.</param>
    </member>
    <member name="T:System.Web.Http.Filters.AuthorizationFilterAttribute">
      <summary>Yetkilendirme filtresinin ayrıntılarını sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Bir işlem yetkilendirme gerektirdiğinde çağırır.</summary>
      <param name="actionContext">
        <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" /> öğesini kullanmaya yönelik bilgileri yalıtan eylem bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.System#Web#Http#Filters#IAuthorizationFilter#ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Eşitleme sırasında yetkilendirme filtresini yürütür.</summary>
      <returns>Eşitleme sırasındaki yetkilendirme filtresi.</returns>
      <param name="actionContext">
        <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" /> öğesini kullanmaya yönelik bilgileri yalıtan eylem bağlamı.</param>
      <param name="cancellationToken">İşlemi iptal eden iptal belirteci.</param>
      <param name="continuation">İşlemin devam etmesi.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ConfigurationFilterProvider">
      <summary>Yapılandırma filtresi sağlayıcıyı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.ConfigurationFilterProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Bu yapılandırma yöntemiyle ilişkilendirilen filtreleri döndürür.</summary>
      <returns>Bu yapılandırma yöntemiyle ilişkilendirilen filtreler.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ExceptionFilterAttribute">
      <summary>Özel durum filtresine ilişkin öznitelikleri gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Özel durum olayını başlatır.</summary>
      <param name="actionExecutedContext">Eyleme ilişkin bağlam.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnExceptionAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.System#Web#Http#Filters#IExceptionFilter#ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Özel durum filtresini zamanuyumsuz olarak başlatır.</summary>
      <returns>Yürütmenin sonucu.</returns>
      <param name="actionExecutedContext">Eyleme ilişkin bağlam.</param>
      <param name="cancellationToken">İptal etme bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.Filters.FilterAttribute">
      <summary>Eylem-filtre öznitelikleri için temel sınıfı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.FilterAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.FilterAttribute.AllowMultiple">
      <summary>Birden çok filtreye izin verilip verilmediğini gösteren bir değer alır.</summary>
      <returns>Birden çok filtreye izin veriliyorsa true; verilmiyorsa, false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterInfo">
      <summary>Kullanılabilir eylem filtreleri hakkındaki bilgi sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterInfo.#ctor(System.Web.Http.Filters.IFilter,System.Web.Http.Filters.FilterScope)">
      <summary>
        <see cref="T:System.Web.Http.Filters.FilterInfo" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="instance">Bu sınıfın örneği.</param>
      <param name="scope">Bu sınıfın kapsamı.</param>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Instance">
      <summary>
        <see cref="T:System.Web.Http.Filters.FilterInfo" /> örneğini alır veya ayarlar.</summary>
      <returns>Bir <see cref="T:System.Web.Http.Filters.FilterInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Scope">
      <summary>
        <see cref="T:System.Web.Http.Filters.FilterInfo" /> kapsamını alır veya ayarlar.</summary>
      <returns>FilterInfo kapsamı.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterScope">
      <summary>Filtrelerin aynı filtre türü ve filtre sırası içinde çalışacakları sırayı belirten değerleri tanımlar.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Action">
      <summary>Denetleyiciden sonra bir sırayı belirtir. </summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Controller">
      <summary>Eylemden önce ve Genelden sonra bir sırayı belirtir.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Global">
      <summary>Denetleyiciden önce bir eylemi belirtir.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpActionExecutedContext">
      <summary>HTTP tarafından yürütülen bağlamın eylemini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Exception)">
      <summary>
        <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="exception">Özel durum.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.ActionContext">
      <summary>HTTP eylem bağlamını alır veya ayarlar.</summary>
      <returns>HTTP eylem bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Exception">
      <summary>Yürütme sırasında başlatılan özel durumu alır veya ayarlar.</summary>
      <returns>Yürütme sırasında başlatılan özel durum.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Request">
      <summary>Bağlama ilişkin <see cref="T:System.Net.Http.HttpRequestMessage" /> nesnesini alır.</summary>
      <returns>Bağlama ilişkin <see cref="T:System.Net.Http.HttpRequestMessage" /> nesnesi.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Response">
      <summary>Bağlam için <see cref="T:System.Net.Http.HttpResponseMessage" /> öğesini alır veya ayarlar.</summary>
      <returns>Bağlama ilişkin <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext">
      <summary>Bir kimlik doğrulaması sınaması gerçekleştirmeye yönelik bilgileri içeren bir kimlik doğrulaması sınama bağlamını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationChallengeContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.IHttpActionResult)">
      <summary>
        <see cref="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="result">Geçerli eylem sonucu.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.ActionContext">
      <summary>Eylem bağlamını alır.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Request">
      <summary>İstek iletisini alır.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Result">
      <summary>Uygulanacak eylem sonucunu alır veya ayarlar.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationContext">
      <summary>Bir kimlik doğrulaması gerçekleştirmeye yönelik bilgileri içeren kimlik doğrulaması bağlamını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Security.Principal.IPrincipal)">
      <summary>
        <see cref="T:System.Web.Http.Filters.HttpAuthenticationContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="principal">Geçerli sorumlu.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ActionContext">
      <summary>Eylem bağlamını alır.</summary>
      <returns>Eylem bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ErrorResult">
      <summary>Bir hata yanıtı oluşturan eylem sonucunu alır veya ayarlar (kimlik doğrulaması başarısız olduysa; aksi takdirde, null).</summary>
      <returns>Bir hata yanıtı oluşturan eylem sonucu.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Principal">
      <summary>Kimliği doğrulanmış sorumluyu alır veya ayarlar.</summary>
      <returns>Kimliği doğrulanmış sorumlu.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Request">
      <summary>İstek iletisini alır.</summary>
      <returns>İstek iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpFilterCollection">
      <summary>Bir HTTP filtreleri topluluğunu gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Filters.HttpFilterCollection" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Add(System.Web.Http.Filters.IFilter)">
      <summary>Topluluğun sonuna bir öğe ekler.</summary>
      <param name="filter">Topluluğa eklenecek öğe.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.AddRange(System.Collections.Generic.IEnumerable{System.Web.Http.Filters.IFilter})"></member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Clear">
      <summary>Topluluktaki tüm öğeleri kaldırır.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Contains(System.Web.Http.Filters.IFilter)">
      <summary>Koleksiyonun belirtilen öğeyi içerip içermediğini belirler.</summary>
      <returns>Topluluk belirtilen öğeyi içeriyorsa doğru; tersi durumda yanlıştır.</returns>
      <param name="filter">Kontrol edilecek öğe.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpFilterCollection.Count">
      <summary>Koleksiyondaki öğe sayısını alır.</summary>
      <returns>Koleksiyondaki öğe sayısı.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.GetEnumerator">
      <summary>Toplulukta tekrarlanan bir numaralayıcı alır.</summary>
      <returns>Toplulukta tekrarlama için kullanılabilecek bir numaralayıcı nesnesi.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Remove(System.Web.Http.Filters.IFilter)">
      <summary>Belirtilen öğeyi topluluktan kaldırır.</summary>
      <param name="filter">Topluluktan kaldırılacak öğe.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Toplulukta tekrarlanan bir numaralayıcı alır.</summary>
      <returns>Toplulukta tekrarlama için kullanılabilecek bir numaralayıcı nesnesi.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IActionFilter">
      <summary>Eylem filtresinde kullanılan yöntemleri tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Filtre eylemini zamanuyumsuz olarak yürütür.</summary>
      <returns>Bu işlem için yeni oluşturulan görev.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="cancellationToken">Bu görev için atanan iptal simgesi.</param>
      <param name="continuation">Eylem yöntemi çağrıldıktan sonra devam edecek atama işlevi.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IAuthenticationFilter">
      <summary>Kimlik doğrulaması gerçekleştiren bir filtre tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)">
      <summary>İsteğin kimliğini doğrular.</summary>
      <returns>Kimlik doğrulamasını yapacak Görev.</returns>
      <param name="context">Kimlik doğrulaması bağlamı.</param>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.Filters.IAuthorizationFilter">
      <summary>Bir yetkilendirme filtresi için gereken yöntemleri tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Eşitlemek için yetkilendirme filtresini yürütür.</summary>
      <returns>Eşitlenecek yetkilendirme filtresi.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="cancellationToken">Filtreyle ilişkili iptal simgesi.</param>
      <param name="continuation">Süreklilik.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IExceptionFilter">
      <summary>Bir özel durum filtresi için gereken yöntemleri tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Zamanuyumsuz bir özel durum filtresini yürütür.</summary>
      <returns>Bir zamanuyumsuz özel durum filtresi.</returns>
      <param name="actionExecutedContext">Eylem tarafından yürütülen bağlam.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IFilter">
      <summary>Bir filtrede kullanılan yöntemleri tanımlar.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.IFilter.AllowMultiple">
      <summary>Belirtilen özniteliğin bir veya birden çok örneğinin tek bir program öğesi için belirtilip belirtilemeyeceğini gösteren bir değer alır veya ayarlar.</summary>
      <returns>Birden çok örneğin belirtilmesine izin verilirse doğru; tersi durumda yanlıştır.Varsayılan değer: false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IFilterProvider">
      <summary>Filtre bilgilerini sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Bir filtre numaralandırması döndürür.</summary>
      <returns>Bir filtre numaralandırması.</returns>
      <param name="configuration">HTTP yapılandırması.</param>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IOverrideFilter"></member>
    <member name="P:System.Web.Http.Filters.IOverrideFilter.FiltersToOverride"></member>
    <member name="T:System.Web.Http.Hosting.HttpPropertyKeys">
      <summary>
        <see cref="P:System.Net.Http.HttpRequestMessage.Properties" /> içinde depolanan özellikler için ortak anahtarlar sağlar</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.ClientCertificateKey">
      <summary>Bu isteğe ilişkin istemci sertifikası için bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DependencyScope">
      <summary>Bu istekle ilişkilendirilen <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> için bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DisposableRequestResourcesKey">
      <summary>Bir istek çıkarıldığından çıkarılması gereken kaynakların koleksiyonu için bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpActionDescriptorKey">
      <summary> Bu istekle ilişkilendirilen <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> için bir anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpConfigurationKey">
      <summary>Bu istekle ilişkilendirilen <see cref="T:System.Web.Http.HttpConfiguration" /> için bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpRouteDataKey">
      <summary>Bu istekle ilişkilendirilen <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> için bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IncludeErrorDetailKey">
      <summary>Hata ayrıntılarının bu HTTP isteği yanıtına eklenip eklenmemesi gerektiğini gösteren bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsBatchRequest">
      <summary> İsteğin toplu bir istek olup olmadığını belirten bir anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsLocalKey">
      <summary>İsteğin yerel bir adresten başlatılıp başlatılmadığını belirten bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.NoRouteMatched">
      <summary> İsteğin bir rota ile eşleşmekte başarısız olup olmadığını belirten bir anahtar sağlar. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestContextKey">
      <summary>Bu isteğe ilişkin <see cref="T:System.Web.Http.Controllers.HttpRequestContext" /> için bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestCorrelationKey">
      <summary>
        <see cref="T:System.Net.Http.Properties" /> içinde depolanan <see cref="T:System.Guid" /> için bir anahtar sağlar. Bu, söz konusu isteğe ilişkin bağıntı kimliğidir.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestQueryNameValuePairsKey">
      <summary>
        <see cref="T:System.Net.Http.Properties" /> içinde depolanan ayrıştırılmış sorgu dizesi için bir anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RetrieveClientCertificateDelegateKey">
      <summary>Bu isteğe ilişkin istemci sertifikasını alabilecek bir temsilci için anahtar sağlar.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.SynchronizationContextKey">
      <summary>Properties() içinde depolanan geçerli <see cref="T:System.Threading.SynchronizationContext" /> için bir anahtar sağlar. Current() değeri öğesi null ise hiçbir bağlam depolanmaz.</summary>
    </member>
    <member name="T:System.Web.Http.Hosting.IHostBufferPolicySelector">
      <summary> Ana bilgisayarda arabelleğe alma isteklerinin ve yanıtlarının kullanımını denetleyen arabirim. Ana bilgisayar arabelleğe alma isteklerini ve/veya yanıtlarını destekliyorsa, arabelleğe alma işlemi sırasında kullanılacak ilkeyi belirlemek için bu arabirimi kullanabilir.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Ana bilgisayarın <see cref="T:System.Net.Http.HttpRequestMessage" /> varlık gövdesini arabelleğe alıp almayacağını belirler.</summary>
      <returns>Arabelleğe alma kullanılacaksa true şeklindedir, aksi halde akışla alınan istek kullanılmalıdır.</returns>
      <param name="hostContext">Ana bilgisayar bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Ana bilgisayarın <see cref="T.System.Net.Http.HttpResponseMessage" /> varlık gövdesini arabelleğe alıp almayacağını belirler.</summary>
      <returns>Arabelleğe alma kullanılacaksa true şeklindedir, aksi halde akışla alınan yanıt kullanılmalıdır.</returns>
      <param name="response">HTTP yanıt iletisi.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler">
      <summary>Ana bilgisayar kimlik doğrulaması sonuçlarını atlayan bir ileti işleyicisini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Bir istek iletisini zaman uyumsuz olarak gönderir.</summary>
      <returns>Zaman uyumsuz işlemi tamamlayan görev.</returns>
      <param name="request">Gönderilecek istek iletisi.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadata">
      <summary>ModelMetadata meta veri sınıfını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>
        <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="provider">Sağlayıcı.</param>
      <param name="containerType">Kapsayıcının türü.</param>
      <param name="modelAccessor">Model erişimcisi.</param>
      <param name="modelType">Modelin türü.</param>
      <param name="propertyName">Özelliğin adı.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.AdditionalValues">
      <summary>Model hakkında ek meta veriler içeren bir sözlük alır.</summary>
      <returns>Model hakkında ek meta veriler içeren bir sözlük.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ContainerType">
      <summary>Modelin kapsayıcısının türünü alır veya ayarlar.</summary>
      <returns>Modelin kapsayıcısının türü.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Formlara geri gönderilen boş dizelerin boşa dönüştürülüp dönüştürülmeyeceğini gösteren bir değer alır veya ayarlar.</summary>
      <returns>Formlara geri gönderilen değerler boşa dönüştürülecekse doğru; tersi durumda yanlıştır.Varsayılan değer: true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Description">
      <summary>Modelin açıklamasını alır veya ayarlar.</summary>
      <returns>Modelin açıklaması.Varsayılan değer boştur.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetDisplayName">
      <summary>Modelin görünen adını alır.</summary>
      <returns>Modelin görünen adı.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetValidators(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Model için doğrulayıcıların bir listesini alır.</summary>
      <returns>Model için doğrulayıcıların bir listesi.</returns>
      <param name="validatorProviders">Modele ilişkin doğrulayıcı sağlayıcıları.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsComplexType">
      <summary>Modelin bir karmaşık tür olup olmadığını belirten bir değeri alır veya ayarlar.</summary>
      <returns>Modelin karmaşık olup olmadığını gösteren bir değer.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsNullableValueType">
      <summary>Türün boş değer atanabilir olup olmadığını belirten bir değer alır.</summary>
      <returns>Türe boş değer atanabiliyorsa true; atanamıyorsa, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsReadOnly">
      <summary>Modelin salt okunur olup olmadığını belirten bir değeri alır veya ayarlar.</summary>
      <returns>Model salt okunursa true; değilse, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Model">
      <summary>Modelin değerini alır.</summary>
      <returns>Model değeri boş olabilir.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ModelType">
      <summary>Modelin türünü alır.</summary>
      <returns>Modelin türü.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Properties">
      <summary>Modelin özelliklerini açıklayan model meta veri nesnelerinin bir koleksiyonunu alır.</summary>
      <returns>Modelin özelliklerini açıklayan model meta veri nesnelerinin bir koleksiyonu.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.PropertyName">
      <summary>Özellik adını alır.</summary>
      <returns>Özellik adı.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Provider">
      <summary>Sağlayıcıyı alır veya ayarlar.</summary>
      <returns>Sağlayıcı.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadataProvider">
      <summary>Özel bir meta veri sağlayıcısı için özet temel sınıf sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Bir modelin her bir özelliği için bir ModelMetadata nesnesi alır.</summary>
      <returns>Bir modelin her bir özelliği için bir ModelMetadata nesnesi.</returns>
      <param name="container">Kapsayıcı.</param>
      <param name="containerType">Kapsayıcının türü.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Belirtilen özellik için bir meta veri alır.</summary>
      <returns>Belirtilen özellik için meta veri modeli.</returns>
      <param name="modelAccessor">Model erişimcisi.</param>
      <param name="containerType">Kapsayıcının türü.</param>
      <param name="propertyName">Meta veri modelinin alınacağı özellik.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Belirtilen model erişimi ve model türü için meta verileri alır.</summary>
      <returns>Meta veriler.</returns>
      <param name="modelAccessor">Model erişimcisi.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1">
      <summary>Meta veri sağlayıcısı için uygulanacak bir özet sınıf sağlar.</summary>
      <typeparam name="TModelMetadata">Modelin meta verilerinin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Türetilen bir sınıfta geçersiz kılındığında, özelliğin model meta verilerini, belirtilen prototipi kullanarak oluşturur.</summary>
      <returns>Özellik için model meta verileri.</returns>
      <param name="prototype">Model meta verilerinin oluşturulacağı prototip.</param>
      <param name="modelAccessor">Model erişimcisi.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Türetilen bir sınıfta geçersiz kılındığında, özellik için model meta verilerini oluşturur.</summary>
      <returns>Özellik için model meta verileri.</returns>
      <param name="attributes">Öznitelik kümesi.</param>
      <param name="containerType">Kapsayıcının türü.</param>
      <param name="modelType">Modelin türü.</param>
      <param name="propertyName">Özelliğin adı.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Model için özelliklerin listesini alır.</summary>
      <returns>Model için özelliklerin listesi.</returns>
      <param name="container">Model kapsayıcı.</param>
      <param name="containerType">Kapsayıcının türü.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Kapsayıcı türünü ve özellik adını kullanan belirtilen özellik için meta verileri alır.</summary>
      <returns>Belirtilen özellik için meta veriler.</returns>
      <param name="modelAccessor">Model erişimcisi.</param>
      <param name="containerType">Kapsayıcının türü.</param>
      <param name="propertyName">Özelliğin adı.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Modelin türünü kullanan belirtilen özellik için meta verileri döndürür.</summary>
      <returns>Belirtilen özellik için meta veriler.</returns>
      <param name="modelAccessor">Model erişimcisi.</param>
      <param name="modelType">Kapsayıcının türü.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" /> için prototip önbellek verileri sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="attributes">Başlatma için veri sağlayan öznitelikler.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Meta veri görüntüleme özniteliğini alır veya ayarlar.</summary>
      <returns>Meta veri görüntüleme özniteliği.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Meta veri görüntüleme biçimi özniteliğini alır veya ayarlar.</summary>
      <returns>Meta veri görüntüleme biçimi özniteliği.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayName"></member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Meta veri düzenlenebilir özniteliğini alır veya ayarlar.</summary>
      <returns>Metaveri düzenlenebilir özniteliği.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Meta veri salt okunur özniteliğini alır veya ayarlar.</summary>
      <returns>Meta veri salt okunur özniteliği.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata">
      <summary>Bir veriş modeli için, bir <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" /> sınıfı için, genel meta verilere ilişkin bir kapsayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="prototype">Model meta verilerini başlatmak için kullanılan prototip.</param>
      <param name="modelAccessor">Model erişimcisi.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="provider">Meta veri sağlayıcısı.</param>
      <param name="containerType">Kapsayıcının türü.</param>
      <param name="modelType">Modelin türü.</param>
      <param name="propertyName">Özelliğin adı.</param>
      <param name="attributes">Başlatma için veri sağlayan öznitelikler.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Formlara geri gönderilen boş dizelerin boşa dönüştürülüp dönüştürülmeyeceğini gösteren bir değer alır.</summary>
      <returns>Formlara geri gönderilen değerler boşa dönüştürülecekse doğru; tersi durumda yanlıştır.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Modelin açıklamasını alır.</summary>
      <returns>Modelin açıklaması.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Modelin salt okunur olup olmadığını belirten bir değer alır.</summary>
      <returns>Model salt okunursa true; değilse, false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.GetDisplayName"></member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" /> için prototip önbellek verileri sağlar.</summary>
      <typeparam name="TPrototypeCache">Prototip önbelleğinin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="prototype">Prototip.</param>
      <param name="modelAccessor">Model erişimcisi.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="provider">Sağlayıcı.</param>
      <param name="containerType">Kapsayıcı türü.</param>
      <param name="modelType">Modelin türü.</param>
      <param name="propertyName">Özelliğin adı.</param>
      <param name="prototypeCache">Prototip önbellek.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Formlara geri gönderilen boş dizelerin hesaplanıp boşa dönüştürülüp dönüştürülmeyeceğini belirtir.</summary>
      <returns>Formlara geri gönderilen değerler hesaplanıp boşa dönüştürülecekse doğru; tersi durumda yanlıştır.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeDescription">
      <summary>Hesaplama değerini belirtir.</summary>
      <returns>Hesaplama değeri.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsComplexType">
      <summary>Modelin karmaşık bir tür olup olmadığını belirten bir değeri alır.</summary>
      <returns>Modelin Web API çerçevesi tarafından karmaşık tür olarak kabul edilip edilmediğini belirten bir değer.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Hesaplanacak değerin salt okunur olup olmadığını gösteren bir değer alır.</summary>
      <returns>Hesaplanan değer salt okunur ise doğru; tersi durumda yanlıştır.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Formlara geri gönderilen boş dizelerin boşa dönüştürülüp dönüştürülmeyeceğini gösteren bir değer alır veya ayarlar.</summary>
      <returns>Formlara geri gönderilen değerler boşa dönüştürülecekse doğru; tersi durumda yanlıştır.Varsayılan değer: true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.Description">
      <summary>Modelin açıklamasını alır veya ayarlar.</summary>
      <returns>Modelin açıklaması.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsComplexType">
      <summary>Modelin karmaşık bir tür olup olmadığını belirten bir değeri alır.</summary>
      <returns>Modelin Web API çerçevesi tarafından karmaşık tür olarak kabul edilip edilmediğini belirten bir değer.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsReadOnly">
      <summary>Modelin salt okunur olup olmadığını belirten bir değeri alır veya ayarlar.</summary>
      <returns>Model salt okunursa true; değilse, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.PrototypeCache">
      <summary>Prototip önbelleğinin güncelleştirilip güncelleştirilmediğini gösteren bir değer alır veya ayarlar.</summary>
      <returns>Prototip önbelleği güncelleştiriliyorsa doğru; tersi durumda, yanlıştır.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider">
      <summary>Varsayılan model meta veri sağlayıcısını uygular.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Prototipten belirtilen özelliğin meta verilerini oluşturur.</summary>
      <returns>Özelliğin meta verileri.</returns>
      <param name="prototype">Prototip.</param>
      <param name="modelAccessor">Model erişimcisi.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Belirtilen özelliğin meta verilerini oluşturur.</summary>
      <returns>Özelliğin meta verileri.</returns>
      <param name="attributes">Öznitelikler.</param>
      <param name="containerType">Kapsayıcının türü.</param>
      <param name="modelType">Modelin türü.</param>
      <param name="propertyName">Özelliğin adı.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider">
      <summary>Boş model meta veri sağlayıcısını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.ModelMetadata,System.Func{System.Object})">
      <summary>Prototipten meta veri oluşturur.</summary>
      <returns>Meta veriler.</returns>
      <param name="prototype">Model meta veri prototipi.</param>
      <param name="modelAccessor">Model erişimcisi.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>
        <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" /> meta veri sağlayıcısının prototipini oluşturur.</summary>
      <returns>Meta veri sağlayıcısının prototipi.</returns>
      <param name="attributes">Öznitelikler.</param>
      <param name="containerType">Kapsayıcı türü.</param>
      <param name="modelType">Modelin türü.</param>
      <param name="propertyName">Özelliğin adı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding">
      <summary>İptal etme belirtecine doğrudan bağlamayı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="descriptor">Bağlama tanımlayıcısı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Eşitleme sırasında bağlamayı yürütür.</summary>
      <returns>Eşitleme sırasındaki bağlama.</returns>
      <param name="metadataProvider">Meta veri sağlayıcısı.</param>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="cancellationToken">İşlemlerin iptal edilmesinden sonraki bildirim.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute">
      <summary>Özel bir model bağlayıcıyı çağıran bir özniteliği temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.GetBinder">
      <summary>İlişkilendirilen model bağlayıcıyı alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> arabirimini uygulayan bir nesneye başvuru.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.DefaultActionValueBinder">
      <summary>Bağlayıcının varsayılan eylem değerini temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /> arabiriminin varsayılan uygulaması.Bu arabirim bağlama eylem parametreleri için birincil giriş noktasıdır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" /> ile ilişkili <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> öğesi.</returns>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetParameterBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" /> ile ilişkili <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> öğesini alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" /> ile ilişkili <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> öğesi.</returns>
      <param name="parameter">Parametre tanımlayıcı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ErrorParameterBinding">
      <summary>Bir bağlama hatası tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ErrorParameterBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="descriptor">Hata tanımlayıcı.</param>
      <param name="message">İleti.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ErrorParameterBinding.ErrorMessage">
      <summary>Hata iletisini alır.</summary>
      <returns>Hata iletisi.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Eşitleme sırasında bağlama yöntemini yürütür.</summary>
      <param name="metadataProvider">Meta veri sağlayıcısı.</param>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="cancellationToken">İptal belirteci değeri.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormatterParameterBinding">
      <summary>Gövdeden okuma yapacak ve biçimlendiricileri çağıracak parametre bağlamasını gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="descriptor">Tanımlayıcı.</param>
      <param name="formatters">Biçimlendirici.</param>
      <param name="bodyModelValidator">Gövde modeli değerlendiricisi.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.BodyModelValidator">
      <summary>Gövde modeli değerlendiricisi için bir arabirim alır veya ayarlar.</summary>
      <returns>Gövde modeli değerlendiricisi için bir arabirim.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.ErrorMessage">
      <summary>Hata iletisini alır.</summary>
      <returns>Hata iletisi.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> bağlamasını zamanuyumsuz olarak yürütür.</summary>
      <returns>Eylemin sonucu.</returns>
      <param name="metadataProvider">Meta veri sağlayıcısı.</param>
      <param name="actionContext">Eylemle ilişkili bağlam.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.Formatters">
      <summary>Parametre bağlama için biçimlendiriciyi gösteren bir numaralandırma nesnesi alır veya ayarlar.</summary>
      <returns>Parametre bağlama için biçimlendiriciyi gösteren bir numaralandırma nesnesi.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> içeriğini zamanuyumsuz olarak okur.</summary>
      <returns>Eylemin sonucu.</returns>
      <param name="request">İstek.</param>
      <param name="type">Tür.</param>
      <param name="formatters">Biçimlendirici.</param>
      <param name="formatterLogger">Biçim günlük kaydedicisi.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.WillReadBody">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> öğesinin gövdeyi okuyup okumayacağı bilgisini alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> gövdeyi okuyacaksa true, aksi halde false şeklindedir.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormDataCollectionExtensions">
      <summary>Form verileri topluluğuna ilişkin uzantıları gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection)">
      <summary>Belirtilen türde topluluk uzantılarını okur.</summary>
      <returns>Okunan topluluk uzantıları.</returns>
      <param name="formData">Form verileri.</param>
      <typeparam name="T">Genel tür.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Belirtilen türde topluluk uzantılarını okur.</summary>
      <returns>Topluluk uzantıları.</returns>
      <param name="formData">Form verileri.</param>
      <param name="modelName">Modelin adı.</param>
      <param name="requiredMemberSelector">Gerekli üye seçici.</param>
      <param name="formatterLogger">Biçimlendirici günlük kaydedicisi.</param>
      <typeparam name="T">Genel tür.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type)">
      <summary>Belirtilen türde topluluk uzantılarını okur.</summary>
      <returns>Belirtilen türde topluluk uzantıları.</returns>
      <param name="formData">Form verileri.</param>
      <param name="type">Nesnenin türü.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Belirtilen tür ve model adını içeren topluluk uzantılarını okur.</summary>
      <returns>Topluluk uzantıları.</returns>
      <param name="formData">Form verileri.</param>
      <param name="type">Nesnenin türü.</param>
      <param name="modelName">Modelin adı.</param>
      <param name="requiredMemberSelector">Gerekli üye seçici.</param>
      <param name="formatterLogger">Biçimlendirici günlük kaydedicisi.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger,System.Web.Http.HttpConfiguration)">
      <summary>Model bağlama kullanarak, belirtilen türde olmak üzere form verilerinin serisini kaldırın.</summary>
      <returns>nesneyi bağlamak için en iyi girişim. En iyi girişim boş olabilir.</returns>
      <param name="formData">ayrıştırılmış form url verileriyle koleksiyon</param>
      <param name="type">şeklinde okunacak hedef türü</param>
      <param name="modelName">tüm formu tek bir nesne olarak okumak için boş veya boş. Bu, gövde verileri için yaygındır. Ya da form verilerine karşı kısmi bağlamak yapmak için bir modelin adı. Bu, tek tek alanların ayıklanmasında yaygındır.</param>
      <param name="requiredMemberSelector">Gerekli üyeleri tespit etmek için <see cref="T:System.Net.Http.Formatting.IRequiredMemberSelector" /> kullanılır.</param>
      <param name="formatterLogger">Olayların günlüğe kaydedileceği <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />.</param>
      <param name="config">Bağlayıcının seçileceği <see cref="T:System.Web.Http.HttpConfiguration" /> yapılandırması. Yapılandırma henüz oluşturulmamışsa null olabilir. Bu durumda yeni bir yapılandırma oluşturulur.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehavior">
      <summary>HTTP bağlamasının davranışını numaralandırır.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Never">
      <summary>HTTP bağlamasını hiçbir zaman kullanmayın.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Optional">
      <summary>İsteğe bağlı bağlama davranışı</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Required">
      <summary>HTTP bağlaması gerekli.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute">
      <summary>Model-bağlama davranışı öznitelikleri için bir temel sınıf sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.#ctor(System.Web.Http.ModelBinding.HttpBindingBehavior)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="behavior">Davranış.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.Behavior">
      <summary>Davranış kategorisini alır veya ayarlar.</summary>
      <returns>Davranış kategorisi.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.TypeId">
      <summary>Bu öznitelik için benzersiz tanımlayıcıyı alır.</summary>
      <returns>Bu özniteliğin kimliği.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding">
      <summary>Parametre isteğe bağlanır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="descriptor">Parametre tanımlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Parametre bağlamasını zaman uyumsuz olarak yürütür.</summary>
      <returns>Bağlanan parametre.</returns>
      <param name="metadataProvider">Meta veri sağlayıcısı.</param>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IModelBinder">
      <summary>Bir model bağlayıcı için gereken yöntemleri tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen denetleyici bağlamını ve bağlama bağlamını kullanarak modeli bir değere bağlar.</summary>
      <returns>Model bağlama başarılıysa true; değilse, false.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IValueProviderParameterBinding">
      <summary>Parametre bağlaması için bir değer sağlayıcı gösterir.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.IValueProviderParameterBinding.ValueProviderFactories">
      <summary>Bu parametre bağlamasının kullandığı <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> örneklerini alır.</summary>
      <returns>Bu parametre bağlamasının kullandığı <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> örnekleri.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter">
      <summary>application/x-www-form-urlencoded olarak da HTML biçimli URL sonlu verileri işlemek için <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> sınıfını gösterir.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor(System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.CanReadType(System.Type)">
      <summary> Bu <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" /> öğesinin belirtilen <paramref name="type" /> türünde nesneleri okuyup okuyamayacağını belirtir. </summary>
      <returns>Bu type türündeki nesneler okunabilirse true, aksi halde false şeklindedir.</returns>
      <param name="type">Okunacak nesnenin türü.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Belirtilen <paramref name="type" /> türünde bir nesneyi belirtilen stream kaynağından okur. Bu yöntem seri kaldırma sırasında çağrılır.</summary>
      <returns>Sonucu, okunmuş nesne örneği olacak bir <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="type">Okunacak nesnenin türü.</param>
      <param name="readStream">Okunacak <see cref="T:System.IO.Stream" />.</param>
      <param name="content">Okunan içerik.</param>
      <param name="formatterLogger">Olayların günlüğe kaydedileceği <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderAttribute">
      <summary>Bu parametrenin bir model bağlayıcısı kullandığını belirtir.Bu, isteğe bağlı olarak, özel bir model bağlayıcısını ve bu model bağlayıcısını yönlendiren değer sağlayıcılarını belirtebilir.Türetilen öznitelikler, model bağlayıcısı veya değer sağlayıcıları için kullanışlı ayarlar sağlayabilir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="binderType">Model bağlayıcı türü.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
      <summary>Model bağlayıcı türünü alır veya ayarlar.</summary>
      <returns>Model bağlayıcı türü. </returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Parametre için bağlamayı alır.</summary>
      <returns>Bağlama öğesini içeren <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</returns>
      <param name="parameter">Bağlanacak parametre.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary> Bu tür için IModelBinder özniteliğini alır. </summary>
      <returns> boş olmayan bir model bağlayıcı.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="modelType">bağlayıcının bağlanması beklenen model türü.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
      <summary>Model bağlayıcı sağlayıcısını alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> örneği.</returns>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> yapılandırma nesnesi.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary> Model bağlayıcıya veri sağlayacak değer sağlayıcılarını alır. </summary>
      <returns>
        <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> örneklerinin koleksiyonu.</returns>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> yapılandırma nesnesi.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
      <summary>Model bağlama sırasında parametre adı olarak değerlendirilecek adı alır veya ayarlar.</summary>
      <returns>Kullanılacak parametre adı.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
      <summary>Önek denetiminin atlanması gerekip gerekmediğini belirten bir değeri alır veya ayarlar.</summary>
      <returns>Önek denetimin atlanması gerekiyorsa true; gerekmiyorsa, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderConfig">
      <summary>Model bağlayıcı yapılandırması için bir kapsayıcı sağlar.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ResourceClassKey">
      <summary>Yerelleştirilmiş dize değerlerini içeren kaynak dosyasının (sınıf anahtarı) adını alır veya ayarlar.</summary>
      <returns>Kaynak dosyanın adı (sınıf anahtarı).</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.TypeConversionErrorMessageProvider">
      <summary>Tür-dönüştürme hata iletisi için geçerli sağlayıcıyı alır veya ayarlar.</summary>
      <returns>Tür-dönüştürme hata iletisi için geçerli sağlayıcı.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ValueRequiredErrorMessageProvider">
      <summary>Değer gerektiren hata iletileri için geçerli sağlayıcıyı alır veya ayarlar.</summary>
      <returns>Hata iletisi sağlayıcı.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderErrorMessageProvider">
      <summary>Model bağlayıcı hata iletisi sağlayıcısı için bir kapsayıcı sağlar.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding">
      <summary> ModelBinding yoluyla bağlanan bir parametreyi açıklar.   </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="descriptor">Parametre tanımlayıcı.</param>
      <param name="modelBinder">Model bağlayıcı.</param>
      <param name="valueProviderFactories">Değer sağlayıcı üreteci koleksiyonu.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.Binder">
      <summary>Model bağlayıcısını alır.</summary>
      <returns>Model bağlayıcı.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Parametre bağlamasını model bağlayıcı aracılığıyla zaman uyumsuz olarak yürütür.</summary>
      <returns>Bağlama işlemi tamamlandığında işareti verilen görev.</returns>
      <param name="metadataProvider">Doğrulama yapmak için kullanılan meta veri sağlayıcı.</param>
      <param name="actionContext">Bağlamaya ilişkin eylem bağlamı.</param>
      <param name="cancellationToken">Bağlama işlemini iptal etmek için bu göreve atanan iptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ValueProviderFactories">
      <summary>Değer sağlayıcı üreteci koleksiyonunu alır.</summary>
      <returns>Değer sağlayıcı üreteci koleksiyonu.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderProvider">
      <summary>Model bağlayıcı sağlayıcıları için özet temel sınıf sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Belirtilen tür için bir bağlayıcı bulur.</summary>
      <returns>Bu türü bağlamayı deneyebilecek bir bağlayıcı. Bağlayıcı türü hiçbir zaman bağlayamayacağını statik olarak bilirse, boş.</returns>
      <param name="configuration">Bir yapılandırma nesnesi.</param>
      <param name="modelType">Bağlama yapılacak modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBindingContext">
      <summary>Bir model bağlayıcının çalıştığı bağlamı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor(System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Bağlayıcının boş bir önek kullanması gerekip gerekmediğini gösteren bir değeri alır veya ayarlar.</summary>
      <returns>Bağlayıcının boş önek kullanması gerekiyorsa true; gerekmiyorsa, false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.Model">
      <summary>Modeli alır veya ayarlar.</summary>
      <returns>Model.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelMetadata">
      <summary>Model meta verilerini alır veya ayarlar.</summary>
      <returns>Model meta verileri.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelName">
      <summary>Modelin adını alır veya ayarlar.</summary>
      <returns>Modelin adı.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelState">
      <summary>Modelin durumunu alır veya ayarlar.</summary>
      <returns>Modelin durumu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelType">
      <summary>Modelin türünü alır veya ayarlar.</summary>
      <returns>Modelin türü.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.PropertyMetadata">
      <summary>Özellik meta verilerini alır.</summary>
      <returns>Özellik meta verileri.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValidationNode">
      <summary>Doğrulama modunu alır veya ayarlar.</summary>
      <returns>Doğrulama düğümü.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValueProvider">
      <summary>Değer sağlayıcıyı alır veya ayarlar.</summary>
      <returns>Değer sağlayıcı.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelError">
      <summary>Model bağlama sırasında oluşan bir hatayı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception)">
      <summary>Belirtilen özel durumu kullanarak <see cref="T:System.Web.Http.ModelBinding.ModelError" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Özel durum.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception,System.String)">
      <summary>Belirtilen özel durumu ve hata iletisini kullanarak <see cref="T:System.Web.Http.ModelBinding.ModelError" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Özel durum.</param>
      <param name="errorMessage">Hata iletisi</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.String)">
      <summary>Belirtilen hata iletisini kullanarak <see cref="T:System.Web.Http.ModelBinding.ModelError" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="errorMessage">Hata iletisi</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.ErrorMessage">
      <summary>Hata iletisini alır veya ayarlar.</summary>
      <returns>Hata iletisi.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.Exception">
      <summary>Özel durum nesnesini alır veya ayarlar.</summary>
      <returns>Özel durum nesnesi.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelErrorCollection">
      <summary>Bir <see cref="T:System.Web.Http.ModelBinding.ModelError" /> örnekleri topluluğunu gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.Exception)">
      <summary>Belirtilen Özel Durum nesnesini model-hata koleksiyonuna ekler.</summary>
      <param name="exception">Özel durum.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.String)">
      <summary>Belirtilen hata iletisini model-hata koleksiyonuna ekler.</summary>
      <param name="errorMessage">Hata iletisi.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelState">
      <summary>Model bağlamının durumunu bir eylem-yöntem bağımsız değişkeninin özelliğine veya bağımsız değişkenin kendisine kapsüller.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelState.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelState" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Errors">
      <summary>Model bağlama sırasında oluşmuş olabilecek hataları içeren bir <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" /> nesnesi alır.</summary>
      <returns>Model durumu hataları.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Value">
      <summary>Model bağlama sırasında bağlanan değeri yalıtan bir <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" /> nesnesi alır.</summary>
      <returns>Model durumu değeri.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelStateDictionary">
      <summary>Gönderilen bir formu bir eylem yöntemine bağlama girişiminin durumu temsil eder ve doğrulama bilgileri içerir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Belirtilen model durumu sözlüğünden kopyalanan değerleri kullanarak <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="dictionary">Sözlük.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Belirtilen öğeyi model durumu sözlüğüne ekler.</summary>
      <param name="item">Model durumu sözlüğüne eklenecek nesne.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.Http.ModelBinding.ModelState)">
      <summary>Belirtilen anahtarı ve değeri içeren bir öğeyi model durumu sözlüğüne ekler.</summary>
      <param name="key">Eklenecek öğenin anahtarı.</param>
      <param name="value">Eklenecek öğenin değeri.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Belirtilen model hatasını, belirtilen anahtarla ilişkilendirilen model durumu sözlüğü için hatalar koleksiyonuna ekler.</summary>
      <param name="key">Anahtar.</param>
      <param name="exception">Özel durum.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Belirtilen hata iletisini, belirtilen anahtarla ilişkilendirilen model durumu sözlüğü için hatalar koleksiyonuna ekler.</summary>
      <param name="key">Anahtar.</param>
      <param name="errorMessage">Hata iletisi.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Clear">
      <summary>Model durumu sözlüğündeki tüm öğeleri kaldırır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Model durumu sözlüğünün belirli bir değeri içerip içermediğini belirler.</summary>
      <returns>Öğe model durumu sözlüğünde bulunursa true; bulunmazsa, false.</returns>
      <param name="item">Model durumu sözlüğünde bulunacak nesne.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Model durumu sözlüğünün belirtilen anahtarı içerip içermediğini belirler.</summary>
      <returns>Model durumu sözlüğü belirtilen anahtarı içeriyorsa true; içermiyorsa, false.</returns>
      <param name="key">Model durumu sözlüğünde bulunacak anahtar.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState}[],System.Int32)">
      <summary>Model durumu sözlüğünün öğelerini, belirtilen bir dizinden başlayarak bir diziye kopyalar.</summary>
      <param name="array">Dizi. Dizinin sıfır tabanlı dizinlemeye sahip olması gerekir.</param>
      <param name="arrayIndex">Dizide kopyalamanın başladığı sıfır tabanlı dizinleme.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Count">
      <summary>Koleksiyondaki anahtar/değer çiftlerinin sayısını alır.</summary>
      <returns>Koleksiyondaki anahtar/değer çiftlerinin sayısı.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.GetEnumerator">
      <summary>Koleksiyonda yinelemek için kullanılabilecek bir numaralandırıcı döndürür.</summary>
      <returns>Koleksiyonda yinelemek için kullanılabilecek bir numaralandırıcı.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsReadOnly">
      <summary>Koleksiyonun salt okunur olup olmadığını gösteren bir değer alır.</summary>
      <returns>Koleksiyonun salt okunursa true; değilse, false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsValid">
      <summary>Model durumu sözlüğünün bu örneğinin geçerli olup olmadığını gösteren bir değeri alır veya ayarlar.</summary>
      <returns>Bu örnek geçerliyse true; değilse, false.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.IsValidField(System.String)">
      <summary>Belirtilen anahtarla ilişkilendirilen veya önek olarak kullanılan <see cref="T:System.Web.Http.ModelBinding.ModelError" /> nesneleri olup olmadığını belirler.</summary>
      <returns>Model durumu sözlüğü belirtilen anahtarla ilişkilendirilen bir değer içeriyorsa true; içermiyorsa, false.</returns>
      <param name="key">Anahtar.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Item(System.String)">
      <summary>Belirtilen anahtarla ilişkilendirilen değerin türünü alır veya ayarlar.</summary>
      <returns>Model durumu öğesi.</returns>
      <param name="key">Anahtar.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Keys">
      <summary>Sözlükteki anahtarları içeren bir koleksiyon alır.</summary>
      <returns>Model durumu sözlüğündeki anahtarları içeren bir koleksiyon.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Merge(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Belirtilen <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> nesneden değerleri bu sözlüğe kopyalar ve anahtarlar aynıysa var olan değerlerin üzerine yazar.</summary>
      <param name="dictionary">Sözlük.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Belirtilen nesnenin model durumu sözlüğündeki ilk örneğini kaldırır.</summary>
      <returns>Öğe, model durumu sözlüğünden başarılı şekilde kaldırıldıysa true; kaldırılmadıysa, false. Bu yöntem, öğe model durumu sözlüğünde bulunmadığında da false değerini döndürür.</returns>
      <param name="item">Model durumu sözlüğünden kaldırılacak nesne.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.String)">
      <summary>Belirtilen anahtarı içeren öğeyi model durumu sözlüğünden kaldırır.</summary>
      <returns>Öğe başarılı şekilde kaldırılırsa true; kaldırılmazsa, false. Bu yöntem, anahtar model durumu sözlüğünde bulunmadığında da false değerini döndürür.</returns>
      <param name="key">Kaldırılacak öğenin anahtarı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.Http.ValueProviders.ValueProviderResult)">
      <summary>Belirtilen değer sağlayıcı sözlüğünü kullanarak, belirtilen anahtar için değeri ayarlar.</summary>
      <param name="key">Anahtar.</param>
      <param name="value">Anahtar.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Bir toplulukta tekrarlanan bir numaralayıcı döndürür.</summary>
      <returns>Toplulukta tekrarlama için kullanılabilecek bir IEnumerator nesnesi.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.Http.ModelBinding.ModelState@)">
      <summary>Belirtilen anahtarla ilişkilendirilen değeri almaya çalışır.</summary>
      <returns>Nesne, belirtilen öğeye sahip bir öğe içeriyorsa true; içermiyorsa, false.</returns>
      <param name="key">Alınacak değerin anahtarı.</param>
      <param name="value">Belirtilen anahtarla ilişkili değer.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Values">
      <summary>Sözlükteki değerleri içeren bir koleksiyon alır.</summary>
      <returns>Model durumu sözlüğündeki değerleri içeren bir koleksiyon.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection">
      <summary> Verili bir parametre için bir parametre bağlaması üretebilecek işlevler koleksiyonu.    </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Add(System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> İşlevi koleksiyonun sonuna ekler.  Eklenen işlev, funcInner çevresindeki, parameterType değerinin typeMatch parametresi ile eşlenip eşlenmediğini denetleyen bir sarmalayıcıdır. </summary>
      <param name="typeMatch">HttpParameterDescriptor.ParameterType ile eşlenecek tür</param>
      <param name="funcInner">tür eşlemesi başarılı olursa çağrılacak iç işlev</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Insert(System.Int32,System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Koleksiyona belirtilen dizinde bir işlev ekler. /// Eklenen işlev, funcInner çevresindeki, parameterType değerinin typeMatch parametresi ile eşlenip eşlenmediğini denetleyen bir sarmalayıcıdır. </summary>
      <param name="index">eklenin yapılacağı dizin.</param>
      <param name="typeMatch">HttpParameterDescriptor.ParameterType ile eşlenecek tür</param>
      <param name="funcInner">tür eşlemesi başarılı olursa çağrılacak iç işlev</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.LookupBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Her bağlama işlevini, bunlardan biri null olmayan bir işlev döndürünceye kadar sırayla çağırın.  </summary>
      <returns>parametre için üretilen null olmayan ilk bağlama. veya hiçbir bağlama üretilmezse null değerini alır.</returns>
      <param name="parameter">bağlanacak parametre.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1">
      <summary>Bir tarayıcı isteğini bir diziye eşler.</summary>
      <typeparam name="TElement">Dizinin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Modelin bağlanıp bağlanmadığını gösterir.</summary>
      <returns>Belirtilen model bağlıysa true, aksi halde false şeklindedir.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Koleksiyonu bir diziye dönüştürür.</summary>
      <returns>Her durumda, true.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
      <param name="newCollection">Yeni koleksiyon.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider">
      <summary>Diziler için bir model bağlayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Diziler için bir model bağlayıcısı döndürür.</summary>
      <returns>Model bağlayıcı nesnesi veya bir model bağlayıcısı alma denemesi başarısız olursa, boş.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1">
      <summary>Bir tarayıcı isteğini bir koleksiyona eşler.</summary>
      <typeparam name="TElement">Koleksiyonun türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen yürütme bağlamını ve bağlama bağlamını kullanarak modeli bağlar.</summary>
      <returns>Model bağlama başarılıysa true; değilse, false.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Türetilen sınıflar için koleksiyonu bağlayıcıya döndürmeden önce değiştirmek için bir yol sağlar.</summary>
      <returns>Her durumda true.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
      <param name="newCollection">Yeni koleksiyon.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider">
      <summary>Koleksiyon için bir model bağlayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Koleksiyon için bir model bağlayıcı alır.</summary>
      <returns>Model bağlayıcı.</returns>
      <param name="configuration">Modelin yapılandırması.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto">
      <summary>Karmaşık modele yönelik bir veri aktarım nesnesini (DTO) gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDto.#ctor(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Metadata.ModelMetadata})">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelMetadata">Model meta verileri.</param>
      <param name="propertyMetadata">Özellik meta verileri koleksiyonu.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.ModelMetadata">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> model meta verilerini alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> model meta verileri.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.PropertyMetadata">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> özellik meta verileri koleksiyonunu alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> özellik meta verileri koleksiyonu.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.Results">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> sonuçlarını alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> sonuçları.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> nesnesine yönelik bir model bağlayıcıyı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen modelin bağlı olup olmadığını belirler.</summary>
      <returns>Belirtilen model bağlıysa true, aksi halde false şeklindedir.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider">
      <summary>Model bağlayıcı sağlayıcısı çağıran bir karmaşık modeli gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>İlişkilendirilen model bağlayıcısını alır.</summary>
      <returns>Model bağlayıcı.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="modelType">Alınacak modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" /> nesnesine yönelik sonuçları gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.#ctor(System.Object,System.Web.Http.Validation.ModelValidationNode)">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="model">Nesne modeli.</param>
      <param name="validationNode">Doğrulama düğümü.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.Model">
      <summary>Bu nesne için modeli alır veya ayarlar.</summary>
      <returns>Bu nesneye ait model.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.ValidationNode">
      <summary>Bu nesne için <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> modelini alır veya ayarlar.</summary>
      <returns>Bu nesneye ait <see cref="T:System.Web.Http.Validation.ModelValidationNode" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder">
      <summary>Bir <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> örnek koleksiyonuna temsilci atanan <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> öğesini gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="binders">Bir bağlayıcı numaralandırması.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Web.Http.ModelBinding.IModelBinder[])">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="binders">Bir bağlayıcı dizisi.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen modelin bağlanıp bağlanmadığını gösterir.</summary>
      <returns>Model bağlandıysa true, aksi halde false şeklindedir.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider">
      <summary>Bileşik model bağlayıcı sağlayıcıları için sınıfı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.ModelBinderProvider})">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="providers">
        <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> koleksiyonu</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Modele ilişkin bağlayıcıyı alır.</summary>
      <returns>Modele ilişkin bağlayıcı.</returns>
      <param name="configuration">Bağlayıcı yapılandırması.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.Providers">
      <summary>Bileşik model bağlayıcısı için sağlayıcıları alır.</summary>
      <returns>Sağlayıcı topluluğu.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2">
      <summary>Bir tarayıcı isteğini bir sözlük veri nesnesine eşler.</summary>
      <typeparam name="TKey">Anahtarın türü.</typeparam>
      <typeparam name="TValue">Değerin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary>Koleksiyonu bir sözlüğe dönüştürür.</summary>
      <returns>Her durumda true.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
      <param name="newCollection">Yeni koleksiyon.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider">
      <summary>Sözlük için bir model bağlayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>İlişkilendirilen model bağlayıcısını alır.</summary>
      <returns>İlişkili model bağlayıcısı.</returns>
      <param name="configuration">Kullanılacak yapılandırma.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2">
      <summary>Bir tarayıcı isteğini bir anahtar/değer veri nesnesine eşler.</summary>
      <typeparam name="TKey">Anahtarın türü.</typeparam>
      <typeparam name="TValue">Değerin türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen yürütme bağlamını ve bağlama bağlamını kullanarak modeli bağlar.</summary>
      <returns>Model bağlama başarılıysa true; değilse, false.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider">
      <summary>Bir anahtar/değer çiftleri koleksiyonu için bir model bağlayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>İlişkilendirilen model bağlayıcısını alır.</summary>
      <returns>İlişkili model bağlayıcısı.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder">
      <summary>Bir tarayıcı isteğini değişebilir bir veri nesnesine eşler.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen eylem bağlamını ve bağlama bağlamını kullanarak modeli bağlar.</summary>
      <returns>Bağlama başarılıysa true; değilse, false şeklindedir.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CanUpdateProperty(System.Web.Http.Metadata.ModelMetadata)">
      <summary>Bir özelliğin güncelleştirilip güncelleştirilemeyeceğini gösteren bir değer alır.</summary>
      <returns>Özellik güncelleştirilebiliyorsa true; güncelleştirilemiyorsa, false.</returns>
      <param name="propertyMetadata">Değerlendirilecek özelliğe yönelik meta veriler.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CreateModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Modelin bir örneğini oluşturur.</summary>
      <returns>Yeni oluşturulan model nesnesi.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.EnsureModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Bir örnek bağlama bağlamında henüz yoksa bir model örneği oluşturur.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.GetMetadataForProperties(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Modelin özellikleri için meta verilerini alır.</summary>
      <returns>Modelin özelliklerine yönelik meta veriler.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.SetProperty(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Web.Http.Metadata.ModelMetadata,System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult,System.Web.Http.Validation.ModelValidator)">
      <summary>Belirtilen bir özelliğin değerini ayarlar.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
      <param name="propertyMetadata">Ayarlanacak özelliğe yönelik meta veriler.</param>
      <param name="dtoResult">Özellikle ilgili doğrulama bilgileri.</param>
      <param name="requiredValidator">Modelin doğrulayıcısı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider">
      <summary>Değişebilir nesneler için bir model bağlayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Belirtilen türe ait model bağlayıcısını alır.</summary>
      <returns>Model bağlayıcı.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="modelType">Alınacak modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider">
      <summary>Bu model bağlama sınıfı için basit model bağlayıcısı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Func{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelType">Model türü.</param>
      <param name="modelBinderFactory">Model bağlayıcı üreteci.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Belirtilen model türünü ve model bağlayıcıyı kullanarak <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelType">Model türü.</param>
      <param name="modelBinder">Model bağlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Belirtilen yürütme bağlamını ve bağlama bağlamını kullanarak bir model bağlayıcısı döndürür.</summary>
      <returns>Model bağlayıcısı veya bir model bağlayıcısı alma denemesi başarısız olursa, boş.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="modelType">Model türü.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.ModelType">
      <summary>Modelin türünü alır.</summary>
      <returns>Modelin türü.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.SuppressPrefixCheck">
      <summary>Önek denetiminin atlanması gerekip gerekmediğini belirten bir değeri alır veya ayarlar.</summary>
      <returns>Önek denetimin atlanması gerekiyorsa true; gerekmiyorsa, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder">
      <summary>Bir tarayıcı isteğini bir veri nesnesine eşler. Bu tür, model bağlama için bir .NET Framework türü dönüştürücü ile dönüştürmeler gerektiğinde kullanılır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen denetleyici bağlamını ve bağlama bağlamını kullanarak modeli bağlar.</summary>
      <returns>Model bağlama başarılıysa true; değilse, false.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider">
      <summary>Tür dönüştürme gerektiren bir model için model bağlayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Tür dönüştürme gerektiren bir model için model bağlayıcı alır.</summary>
      <returns>Tür dönüştürülemiyorsa veya dönüştürülecek hiçbir değer yoksa, model bağlayıcı veya Nothing.</returns>
      <param name="configuration">Bağlayıcının yapılandırması.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder">
      <summary>Bir tarayıcı isteğini bir veri nesnesine eşler. Bu sınıf, model bağlama için tür dönüştürme gerekmediğinde kullanılır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Belirtilen yürütme bağlamını ve bağlama bağlamını kullanarak modeli bağlar.</summary>
      <returns>Model bağlama başarılıysa true; değilse, false.</returns>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="bindingContext">Bağlama bağlamı.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider">
      <summary>Tür dönüştürme gerektirmeyen bir model için model bağlayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>İlişkilendirilen model bağlayıcısını alır.</summary>
      <returns>İlişkili model bağlayıcısı.</returns>
      <param name="configuration">Yapılandırma.</param>
      <param name="modelType">Modelin türü.</param>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestErrorMessageResult">
      <summary>Bir <see cref="F:System.Net.HttpStatusCode.BadRequest" /> yanıtı döndüren ve <see cref="T:System.Web.Http.HttpError" />  üzerinde <see cref="P:System.Web.Http.HttpError.Message" /> ile içerik anlaşması gerçekleştiren eylem sonucunu temsil eder. </summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>
        <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="message">Kullanıcıya görünen hata iletisi.</param>
      <param name="contentNegotiator">İçerik anlaşmasını işleyecek içerik temsilcisi.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
      <param name="formatters">Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="message">Kullanıcıya görünen hata iletisi.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.ContentNegotiator">
      <summary>İçerik anlaşmasını işleyecek içerik temsilcisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.Formatting.IContentNegotiator" /> döndürür.</returns>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Formatters">
      <summary>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiricileri alır.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Message">
      <summary>Kullanıcıya görünen hata iletisini alır.</summary>
      <returns>
        <see cref="T:System.String" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestResult">
      <summary>Boş bir <see cref="F:System.Net.HttpStatusCode.BadRequest" /> yanıt döndüren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.BadRequestResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.BadRequestResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>İsteği zaman uyumsuz olarak yürütür.</summary>
      <returns>Yürütme işlemini tamamlayan görev.</returns>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>Bu sonuca neden olan istek iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ConflictResult">
      <summary>Boş bir HttpStatusCode.Conflict yanıtı döndüren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.ConflictResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.ConflictResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Çakışma sonucunun işlemini zaman uyumsuz olarak yürütür.</summary>
      <returns>Belirtilen görevi zaman uyumsuz olarak yürütür.</returns>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.Results.ConflictResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>Bu sonuca neden olan HTTP istek iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1">
      <summary>Rota oluşturma ve içerik anlaşması gerçekleştiren ve içerik anlaşması başarılı olduğunda bir <see cref="F:System.Net.HttpStatusCode.Created" /> döndüren eylem sonucunu temsil eder.</summary>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.Routing.UrlHelper,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="urlFactory">URL oluşturmak için kullanılan üreteç.</param>
      <param name="contentNegotiator">İçerik anlaşmasını işleyecek içerik temsilcisi.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
      <param name="formatters">Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Content">
      <summary>Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değerini alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ContentNegotiator">
      <summary>İçerik anlaşmasını işleyecek içerik temsilcisini alır.</summary>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Formatters">
      <summary>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiricileri alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteName">
      <summary>URL oluşturmak için kullanılan rotanın adını alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteValues">
      <summary>URL oluşturmak için kullanılan rota verilerini alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.UrlFactory">
      <summary>URL oluşturmak için kullanılan üreteci alır.</summary>
    </member>
    <member name="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1">
      <summary>İçerik anlaşması gerçekleştiren ve başarılı olduğunda bir <see cref="F:System.Net.HttpStatusCode.Created" /> döndüren eylem sonucunu temsil eder.</summary>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="location">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="content">İçeriğin oluşturulduğu konum.</param>
      <param name="contentNegotiator">İçerik anlaşmasını işleyecek içerik temsilcisi.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
      <param name="formatters">Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="location">İçeriğin oluşturulduğu konum.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Content">
      <summary>Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değerini alır.</summary>
      <returns>Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ContentNegotiator">
      <summary>İçerik anlaşmasını işleyecek içerik temsilcisini alır.</summary>
      <returns>İçerik anlaşmasını işleyecek içerik temsilcisi.</returns>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Oluşturulan anlaşma sonucunun işlemini zaman uyumsuz olarak yürütür.</summary>
      <returns>Bir döndürme değerini zaman uyumsuz olarak yürütür.</returns>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Formatters">
      <summary>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiricileri alır.</summary>
      <returns>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Location">
      <summary>İçeriğin oluşturulduğu konumu alır.</summary>
      <returns>İçeriğin oluşturulduğu konum.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>Bu sonuca neden olan HTTP istek iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ExceptionResult">
      <summary>Bir <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> yanıtı döndüren ve <see cref="T:System.Web.Http.HttpError" />  üzerinde <see cref="P:System.Web.Http.Results.ExceptionResult.Exception" /> öğesine dayalı bir içerik anlaşması gerçekleştiren eylem sonucunu temsil eder. </summary>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>
        <see cref="T:System.Web.Http.Results.ExceptionResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="exception">Hataya dahil edilecek özel durum.</param>
      <param name="includeErrorDetail">Hata özel durum iletilerini içerecekse true, aksi takdirde false . </param>
      <param name="contentNegotiator">İçerik anlaşmasını işleyecek içerik temsilcisi.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
      <param name="formatters">Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</param>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.ExceptionResult" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="exception">Hataya dahil edilecek özel durum.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.ContentNegotiator">
      <summary>İçerik anlaşmasını işleyecek içerik temsilcisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.Formatting.IContentNegotiator" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Exception">
      <summary>Hataya dahil edilecek özel durumu alır.</summary>
      <returns>
        <see cref="T:System.Exception" /> döndürür.</returns>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Formatters">
      <summary>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiricileri alır.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.IncludeErrorDetail">
      <summary>Hatanın özel durum iletilerini içerip içermeyeceğini belirten bir değeri alır.</summary>
      <returns>
        <see cref="T:System.Boolean" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.Results.FormattedContentResult`1">
      <summary>Biçimlendirilmiş içerik döndüren eylem sonucunu temsil eder.</summary>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="content">Varlık gövdesinde biçimlendirilecek içerik değeri.</param>
      <param name="formatter">İçeriği biçimlendirmek için kullanılacak biçimlendirici.</param>
      <param name="mediaType">Content-Type üstbilgisi değeri veya biçimlendiricinin varsayılan değer seçmesi için <see cref="null" />.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="content">Varlık gövdesinde biçimlendirilecek içerik değeri.</param>
      <param name="formatter">İçeriği biçimlendirmek için kullanılacak biçimlendirici.</param>
      <param name="mediaType">Content-Type üstbilgisi değeri veya biçimlendiricinin varsayılan değer seçmesi için <see cref="null" />.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Content">
      <summary>Varlık gövdesinde biçimlendirilecek içerik değerini alır.</summary>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Formatter">
      <summary>İçeriği biçimlendirmek için kullanılacak biçimlendiriciyi alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.MediaType">
      <summary>Content-Type üstbilgisi değeri veya biçimlendiricinin varsayılan değer seçmesi için <see cref="null" /> değeri alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.StatusCode">
      <summary>Yanıt iletisi için HTTP durum kodunu alır.</summary>
    </member>
    <member name="T:System.Web.Http.Results.InternalServerErrorResult">
      <summary>Boş bir <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> yanıt döndüren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InternalServerErrorResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.Results.InvalidModelStateResult">
      <summary>Bir <see cref="F:System.Net.HttpStatusCode.BadRequest" /> yanıtı döndüren ve <see cref="T:System.Web.Http.HttpError" />  üzerinde <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> öğesine dayalı bir içerik anlaşması gerçekleştiren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>
        <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelState">Hataya dahil edilecek model durumu.</param>
      <param name="includeErrorDetail">Hata özel durum iletilerini içerecekse true, aksi takdirde false .</param>
      <param name="contentNegotiator">İçerik anlaşmasını işleyecek içerik temsilcisi.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
      <param name="formatters">Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</param>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelState">Hataya dahil edilecek model durumu.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ContentNegotiator">
      <summary>İçerik anlaşmasını işleyecek içerik temsilcisini alır.</summary>
      <returns>İçerik anlaşmasını işleyecek içerik temsilcisi.</returns>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Bir yanıt iletisini zaman uyumsuz olarak oluşturur.</summary>
      <returns>Tamamlandığında yanıt iletisi içeren bir görev.</returns>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Formatters">
      <summary>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiricileri alır.</summary>
      <returns>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.IncludeErrorDetail">
      <summary>Hatanın özel durum iletilerini içerip içermeyeceğini belirten bir değeri alır.</summary>
      <returns>Hata özel durum iletilerini içerecekse true, aksi takdirde false .</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ModelState">
      <summary>Hataya dahil edilecek model durumunu alır.</summary>
      <returns>Hataya dahil edilecek model durumu.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>Bu sonuca neden olan istek iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Results.JsonResult`1">
      <summary>JSON verileriyle bir <see cref="F:System.Net.HttpStatusCode.OK" /> yanıtı döndüren eylem sonucunu temsil eder.</summary>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.JsonResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="content">Varlık gövdesinde serileştirilecek içerik değeri.</param>
      <param name="serializerSettings">Serileştirici ayarları.</param>
      <param name="encoding">İçerik kodlaması.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.JsonResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="content">Varlık gövdesinde serileştirilecek içerik değeri.</param>
      <param name="serializerSettings">Serileştirici ayarları.</param>
      <param name="encoding">İçerik kodlaması.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Content">
      <summary>Varlık gövdesinde serileştirilecek içerik değerini alır.</summary>
      <returns>Varlık gövdesinde serileştirilecek içerik değeri.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Encoding">
      <summary>İçerik kodlamasını alır.</summary>
      <returns>İçerik kodlaması.</returns>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Bir yanıt iletisini zaman uyumsuz olarak oluşturur.</summary>
      <returns>Tamamlandığında yanıt iletisi içeren bir görev.</returns>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>Bu sonuca neden olan istek iletisi.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.SerializerSettings">
      <summary>Serileştirici ayarlarını alır.</summary>
      <returns>Serileştirici ayarları.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NegotiatedContentResult`1">
      <summary>İçerik anlaşmasını gerçekleştiren bir eylem sonucunu temsil eder.</summary>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="contentNegotiator">İçerik anlaşmasını işleyecek içerik temsilcisi.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
      <param name="formatters">Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</param>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Content">
      <summary>Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değerini alır.</summary>
      <returns>Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.ContentNegotiator">
      <summary>İçerik anlaşmasını işleyecek içerik temsilcisini alır.</summary>
      <returns>İçerik anlaşmasını işleyecek içerik temsilcisi.</returns>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>HTTP anlaşması içerik sonuçlarını zaman uyumsuz olarak yürütür.</summary>
      <returns>HTTP anlaşması içerik sonuçlarını zaman uyumsuz olarak yürütür.</returns>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Formatters">
      <summary>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiricileri alır.</summary>
      <returns>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>Bu sonuca neden olan HTTP istek iletisi.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.StatusCode">
      <summary>Yanıt iletisi için HTTP durum kodunu alır.</summary>
      <returns>Yanıt iletisi için HTTP durum kodu.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NotFoundResult">
      <summary>Boş bir <see cref="F:System.Net.HttpStatusCode.NotFound" /> yanıt döndüren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.NotFoundResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.NotFoundResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.NotFoundResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkNegotiatedContentResult`1">
      <summary>İçerik anlaşması gerçekleştiren ve başarılı olduğunda bir HttpStatusCode.OK yanıtı döndüren eylem sonucunu temsil eder.</summary>
      <typeparam name="T">Varlık gövdesindeki içerik türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="contentNegotiator">İçerik anlaşmasını işleyecek içerik temsilcisi.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
      <param name="formatters">Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiriciler.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="content">Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değeri.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Content">
      <summary>Varlık gövdesinde anlaşılacak ve biçimlendirilecek içerik değerini alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.ContentNegotiator">
      <summary>İçerik anlaşmasını işleyecek içerik temsilcisini alır.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Formatters">
      <summary>Anlaşmak ve içeriği biçimlendirmek için kullanılacak biçimlendiricileri alır.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkResult">
      <summary>Boş bir HttpStatusCode.OK yanıtı döndüren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.NotFoundResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.NotFoundResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Zaman uyumsuz olarak yürütür.</summary>
      <returns>Görevi döndürür.</returns>
      <param name="cancellationToken">İptal belirteci.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkResult.Request">
      <summary>Sonuçlar için bir HTTP istek iletisi alır.</summary>
      <returns>Sonuçlar için bir HTTP istek iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Results.RedirectResult">
      <summary>&lt;see cref="F:System.Net.HttpStatusCode.Redirect"/&gt; için eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.#ctor(System.Uri,System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen değerlerle &lt;see cref="T:System.Web.Http.Results.RedirectResult"/&gt; sınıfının yeni bir örneğini başlatır.</summary>
      <param name="location">Yeniden yönlendirilecek konum.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.#ctor(System.Uri,System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle &lt;see cref="T:System.Web.Http.Results.RedirectResult"/&gt; sınıfının yeni bir örneğini başlatır.</summary>
      <param name="location">Yeniden yönlendirilecek konum.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectResult.Location">
      <summary>İçeriğin oluşturulduğu konumu alır.</summary>
      <returns>
        <see cref="T:System.Uri" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.Results.RedirectToRouteResult">
      <summary>Rota oluşturmayı gerçekleştiren eylem sonucunu temsil eder ve bir &lt;see cref="F:System.Net.HttpStatusCode.Redirect"/&gt;            yanıtı döndürür.</summary>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.ApiController)">
      <summary>Belirtilen değerlerle &lt;see cref="T:System.Web.Http.Results.RedirectToRouteResult"/&gt; sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.UrlHelper,System.Net.Http.HttpRequestMessage)">
      <summary>Belirtilen değerlerle &lt;see cref="T:System.Web.Http.Results.RedirectToRouteResult"/&gt; sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeName">URL oluşturmak için kullanılan rotanın adı.</param>
      <param name="routeValues">URL oluşturmak için kullanılan rota verileri.</param>
      <param name="urlFactory">URL oluşturmak için kullanılan üreteç.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.RouteName">
      <summary>URL oluşturmak için kullanılan rotanın adını alır.</summary>
      <returns>
        <see cref="T:System.String" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.RouteValues">
      <summary>URL oluşturmak için kullanılan rota verilerini alır.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.UrlFactory">
      <summary>URL oluşturmak için kullanılan üreteci alır.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ResponseMessageResult">
      <summary>Belirtilen bir yanıt iletisini döndüren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="response">Yanıt iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.ResponseMessageResult.Response">
      <summary>Yanıt iletisini alır.</summary>
    </member>
    <member name="T:System.Web.Http.Results.StatusCodeResult">
      <summary>Belirtilen bir HTTP durum kodunu döndüren eylem sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.StatusCodeResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.StatusCodeResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="statusCode">Yanıt iletisi için HTTP durum kodu.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Bir yanıt iletisini zaman uyumsuz olarak oluşturur.</summary>
      <returns>Tamamlandığında yanıt iletisi içeren bir görev.</returns>
      <param name="cancellationToken">İptal isteklerini izleyecek simge.</param>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>Bu sonuca neden olan istek iletisi.</returns>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.StatusCode">
      <summary>Yanıt iletisi için HTTP durum kodunu alır.</summary>
      <returns>Yanıt iletisi için HTTP durum kodu.</returns>
    </member>
    <member name="T:System.Web.Http.Results.UnauthorizedResult">
      <summary>Bir <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> yanıtı döndüren eylem sonucunu temsil eder. </summary>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Results.StatusCodeResult" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="challenges">WWW-Authenticate sınamaları.</param>
      <param name="request">Bu sonuca neden olan istek iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Web.Http.ApiController)">
      <summary>
        <see cref="T:System.Web.Http.Results.StatusCodeResult" /> sınıfının yeni bir örneğini başlatır. </summary>
      <param name="challenges">WWW-Authenticate sınamaları.</param>
      <param name="controller">Yürütme için gerekli bağımlılıkların elde edileceği denetleyici.</param>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Challenges">
      <summary>WWW-Authenticate sınamalarını alır.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> döndürür.</returns>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> döndürür.</returns>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Request">
      <summary>Bu sonuca neden olan istek iletisini alır.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> döndürür.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.DefaultDirectRouteProvider">
      <summary>Varsayılan <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" /> uygulaması.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Http.Controllers.HttpActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Routing.IDirectRouteFactory},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Sağlanan üreteç ve eylemlerden yola çıkarak <see cref="T:System.Web.Http.Routing.RouteEntry" /> örnekleri oluşturur.Rota girişleri sağlanan eyleme doğrudan rota sağlar.</summary>
      <returns>Rota girişleri kümesi.</returns>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
      <param name="factories">Doğrudan rota üreteçleri.</param>
      <param name="constraintResolver">Kısıtlama çözümleyici.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Belirtilen eylem tanımlayıcı için rota üreteçleri kümesini alır.</summary>
      <returns>Rota girişleri üreteçleri.</returns>
      <param name="actionDescriptor">Eylem tanımlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Http.Routing.IDirectRouteFactory},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Sağlanan üreteç, denetleyici ve eylemlerden yola çıkarak <see cref="T:System.Web.Http.Routing.RouteEntry" /> örnekleri oluşturur.Rota girişleri sağlanan doğrudan rotayı denetleyiciye sağladı ve sağlanan eylemlere erişebilir.</summary>
      <returns>Rota girişleri kümesi.</returns>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
      <param name="actionDescriptors">Eylem tanımlayıcıları.</param>
      <param name="factories">Doğrudan rota üreteçleri.</param>
      <param name="constraintResolver">Kısıtlama çözümleyici.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Belirtilen denetleyici tanımlayıcısı için rota üreteçlerini alır.</summary>
      <returns>Rota girişleri üreteçleri.</returns>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>belirtilen denetleyici tanımlayıcısı ve eylem tanımlayıcıları için <see cref="T:System.Web.Http.Routing.IDirectRouteFactory" /> özniteliklerinden yola çıkarak doğrudan rotaları alır.</summary>
      <returns>Rota girişleri kümesi.</returns>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
      <param name="actionDescriptors">Tüm eylemler için eylem tanımlayıcıları.</param>
      <param name="constraintResolver">Kısıtlama çözümleyici.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Sağlanan denetleyiciden rota önekini alır.</summary>
      <returns>Rota öneki veya null.</returns>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
    </member>
    <member name="T:System.Web.Http.Routing.DefaultInlineConstraintResolver">
      <summary>Varsayılan <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" /> uygulaması.Kısıtlama türünü çözümlemek üzere bir eşlem kullanarak ve kısıtlama türü için uygun bir oluşturucu çağırarak kısıtlama anahtarını ve kısıtlama bağımsız değişkenlerini ayrıştırarak çözümler.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.DefaultInlineConstraintResolver" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary> Kısıtlama anahtarlarını belirli bir kısıtlama türüyle eşleyen değişebilir sözlüğü alır. </summary>
      <returns>Kısıtlama anahtarlarını belirli bir kısıtlama türüyle eşleyen değişebilir sözlük.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Satır içi kısıtlamayı çözümler.</summary>
      <returns>Satır içi kısıtlamanın çözümlendiği <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />.</returns>
      <param name="inlineConstraint">Çözümlenecek satır içi kısıtlama.</param>
    </member>
    <member name="T:System.Web.Http.Routing.DirectRouteFactoryContext">
      <summary>Doğrudan rota oluşturmayı destekleyen bir bağlamı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.#ctor(System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>
        <see cref="T:System.Web.Http.Routing.DirectRouteFactoryContext" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="prefix">Varsa, denetleyici tarafından tanımlanan rota öneki.</param>
      <param name="actions">Rota oluşturulacak eylem tanımlayıcıları.</param>
      <param name="inlineConstraintResolver">Satır içi kısıtlama çözümleyici.</param>
      <param name="targetIsAction">Rotanın eylem veya denetleyici düzeyinde yapılandırıldığını belirten bir değer.</param>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.Actions">
      <summary>Rota oluşturulacak eylem tanımlayıcılarını alır.</summary>
      <returns>Rota oluşturulacak eylem tanımlayıcıları.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>Bu bağlamla eşleşen bir rota oluşturabilen rota oluşturucusu oluşturur.</summary>
      <returns>Bu bağlamla eşleşen bir rota oluşturabilen rota oluşturucusu.</returns>
      <param name="template">Rota şablonu.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Bu bağlamla eşleşen bir rota oluşturabilen rota oluşturucusu oluşturur.</summary>
      <returns>Bu bağlamla eşleşen bir rota oluşturabilen rota oluşturucusu.</returns>
      <param name="template">Rota şablonu.</param>
      <param name="constraintResolver">Varsa kullanılacak satır içi kısıtlama çözümleyicisi; aksi takdirde null.</param>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>Satır içi kısıtlama çözümleyiciyi alır.</summary>
      <returns>Satır içi kısıtlama çözümleyici.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.Prefix">
      <summary>Varsa, denetleyici tarafından tanımlanan rota önekini alır.</summary>
      <returns>Varsa, denetleyici tarafından tanımlanan rota öneki.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>Rotanın eylem veya denetleyici düzeyinde yapılandırıldığını belirten bir değeri alır.</summary>
      <returns>Rota eylem düzeyinde yapılandırıldığında true, rota denetleyici düzeyinde yapılandırıldığında false.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpMethodConstraint">
      <summary>ASP.NET yönlendirme bir URL'nin bir rotayla eşleşip eşleşmediğini belirlediğinde hangi HTTP fiillerine izin verildiğini tanımlamanızı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.#ctor(System.Net.Http.HttpMethod[])">
      <summary>Rota için izin verilen HTTP fiillerini kullanarak <see cref="T:System.Web.Http.Routing.HttpMethodConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="allowedMethods">Rota için geçerli HTTP fiilleri.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods">
      <summary>Rota için izin verilen HTTP fiilleri koleksiyonunu alır veya ayarlar.</summary>
      <returns>Rota için izin verilen HTTP fiilleri koleksiyonu.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>İsteğin rota için izin verilen fiillerden biri olan bir HTTP fiili ile yapılıp yapılmadığını belirler.</summary>
      <returns>ASP.NET yönlendirme bir isteği işlerken, istek izin verilen bir HTTP fiili kullanılarak yapıldıysa true; diğer durumlarda, false. ASP.NET yönlendirme bir URL oluştururken, sağlanan değerler izin verilen HTTP değerlerinden biriyle eşleşen bir HTTP fiili içeriyorsa true; içermiyorsa, false. Varsayılan: true.</returns>
      <param name="request">URL ile eşleşip eşleşmediğini belirlemek için denetlenen istek.</param>
      <param name="route">URL ile eşleşip eşleşmediğini belirlemek için denetlenen nesne.</param>
      <param name="parameterName">Denetlenen parametrenin adı.</param>
      <param name="values">Bir rota için parametreleri içeren bir nesne.</param>
      <param name="routeDirection">Gelen bir istek işlendiğinde veya bir URL oluşturulduğunda kısıtlama denetimi yapılıp yapılmadığını gösteren bir nesne.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.System#Web#Http#Routing#IHttpRouteConstraint#Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>İsteğin rota için izin verilen fiillerden biri olan bir HTTP fiili ile yapılıp yapılmadığını belirler.</summary>
      <returns>ASP.NET yönlendirme bir isteği işlerken, istek izin verilen bir HTTP fiili kullanılarak yapıldıysa true; diğer durumlarda, false. ASP.NET yönlendirme bir URL oluştururken, sağlanan değerler izin verilen HTTP değerlerinden biriyle eşleşen bir HTTP fiili içeriyorsa true; içermiyorsa, false. Varsayılan: true.</returns>
      <param name="request">URL ile eşleşip eşleşmediğini belirlemek için denetlenen istek.</param>
      <param name="route">URL ile eşleşip eşleşmediğini belirlemek için denetlenen nesne.</param>
      <param name="parameterName">Denetlenen parametrenin adı.</param>
      <param name="values">Bir rota için parametreleri içeren bir nesne.</param>
      <param name="routeDirection">Gelen bir istek işlendiğinde veya bir URL oluşturulduğunda kısıtlama denetimi yapılıp yapılmadığını gösteren bir nesne.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRoute">
      <summary>Kendi ana bilgisayarı (yaniASP.NET dışında barındırma) için bir rota sınıfını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRoute" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRoute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeTemplate">Rota şablonu.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRoute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="defaults">Rota parametrelerinin varsayılan değerleri.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRoute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="defaults">Rota parametrelerinin varsayılan değerleri.</param>
      <param name="constraints">Rota parametrelerine ilişkin kısıtlamalar.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRoute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="defaults">Rota parametrelerinin varsayılan değerleri.</param>
      <param name="constraints">Rota parametrelerine ilişkin kısıtlamalar.</param>
      <param name="dataTokens">Rota parametrelerine yönelik ek belirteçler.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRoute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="routeTemplate">Rota şablonu.</param>
      <param name="defaults">Rota parametrelerinin varsayılan değerleri.</param>
      <param name="constraints">Rota parametrelerine ilişkin kısıtlamalar.</param>
      <param name="dataTokens">Rota parametrelerine yönelik ek belirteçler.</param>
      <param name="handler">İsteğin alıcısı olacak ileti işleyicisi.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Constraints">
      <summary>Rota parametrelerine ilişkin kısıtlamaları alır.</summary>
      <returns>Rota parametrelerine ilişkin kısıtlamalar.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.DataTokens">
      <summary>Bir rotanın bir gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesiyle eşleşip eşleşmediğini belirlemek için doğrudan kullanılmayan ilave veri belirteçlerini alır.</summary>
      <returns>Rotanın bir gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesiyle eşleşip eşleşmediğini belirlemek için doğrudan kullanılmayan ek veri belirteçleri.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Defaults">
      <summary>Gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesi tarafından sağlanmamışsa rota parametrelerinin varsayılan değerlerini alır.</summary>
      <returns>Gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesi tarafından sağlanmadıysa, rota parametrelerinin varsayılan değerleri.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary>Rotaya ilişkin <see cref="T:System.Web.Http.Routing.HttpRouteData" /> değerine bakarak bu rotanın gelen istek için bir eşleştirme olup olmadığını belirler.</summary>
      <returns>Eşleşirse rotaya yönelik <see cref="T:System.Web.Http.Routing.HttpRouteData" />; eşleşmezse boş şeklindedir.</returns>
      <param name="virtualPathRoot">Sanal yol kökü.</param>
      <param name="request">HTTP isteği.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRouteData" /> öğesindeki geçerli değerlere bağlı olarak geçirilen değerleri ve belirtilen <see cref="T:System.Web.Http.Routing.HttpRoute" /> öğesini kullanarak yeni değerleri gösteren bir URI oluşturmayı dener.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" /> örneği veya URI oluşturulamıyorsa boş..</returns>
      <param name="request">HTTP isteği iletisi.</param>
      <param name="values">Rota değerleri.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Handler">
      <summary>Http rota işleyicisini alır veya ayarlar.</summary>
      <returns>Http rota işleyicisi.</returns>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRoute.HttpRouteKey">
      <summary>HTTP rota anahtarını belirtir.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.ProcessConstraint(System.Net.Http.HttpRequestMessage,System.Object,System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">HTTP isteği.</param>
      <param name="constraint">Rota parametrelerine ilişkin kısıtlamalar.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">
        <see cref="System.Web.Http.Routing.HttpRouteDirection" /> listesinin liste değerlerinden biri.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.RouteTemplate">
      <summary>Eşleştirilecek URI desenini belirten rota şablonunu alır.</summary>
      <returns>Eşleştirilecek URI desenini belirten rota şablonu.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteData">
      <summary>HTTP yönlendirmesiyle ilgili bilgileri kapsüller.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRouteData" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="route">Yönlendirmeyi tanımlayan bir nesne.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRouteData" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="route">Yönlendirmeyi tanımlayan bir nesne.</param>
      <param name="values">Anahtar.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Route">
      <summary>Yönlendirmeyi gösteren nesneyi alır.</summary>
      <returns>yönlendirmeyi gösteren nesne.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Values">
      <summary>Yönlendirmeye ilişkin bir URL parametre değerleri ve varsayılan değerler topluluğunu alır.</summary>
      <returns>URL'den ve varsayılan değerlerden ayrıştırılan değerleri içeren bir nesne.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDataExtensions">
      <summary>Rota verilerinden bir değeri olmayan tüm isteğe bağlı parametreleri kaldırır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteDataExtensions.GetSubRoutes(System.Web.Http.Routing.IHttpRouteData)">
      <summary>Bir rota diğer rotaların gerçek anlamda bir birleşimiyse alt rota kümesini döndürür.</summary>
      <returns>Bu rotadaki alt rota kümesini döndürür.</returns>
      <param name="routeData">Birleşik rota verileri.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteDataExtensions.RemoveOptionalRoutingParameters(System.Web.Http.Routing.IHttpRouteData)">
      <summary>Rota verilerinden bir değeri olmayan tüm isteğe bağlı parametreleri kaldırır.</summary>
      <param name="routeData">Yerinde değiştirilecek rota verileri.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDirection">
      <summary>Rota yönünün listesini belirtir.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriGeneration">
      <summary>UriGeneration yönü.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriResolution">
      <summary>UriResolution yönü.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteValueDictionary">
      <summary>Belirtilen anahtar/değer çiftlerinin kendi kendini barındırmasına yönelik bir rota sınıfı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="dictionary">Sözlük.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Object)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="values">Anahtar değeri.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpVirtualPathData">
      <summary>HTTP sanal yoluyla ilgili verileri sunar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpVirtualPathData.#ctor(System.Web.Http.Routing.IHttpRoute,System.String)">
      <summary>
        <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="route">Sanal yolun rotası.</param>
      <param name="virtualPath">Rota tanımından oluşturulan URL.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.Route">
      <summary>Sanal yolun rotasını alır veya ayarlar.</summary>
      <returns>Sanal yolun rotası.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.VirtualPath">
      <summary>Rota tanımından oluşturulan URL'yi alır veya ayarlar.</summary>
      <returns>Rota tanımından oluşturulan URL.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteBuilder">
      <summary>Eylemlere doğrudan rotalar oluşturan bir oluşturucu tanımlar (öznitelik rotaları).</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Actions">
      <summary>Rota oluşturulacak eylem tanımlayıcılarını alır.</summary>
      <returns>Rota oluşturulacak eylem tanımlayıcıları.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteBuilder.Build">
      <summary>Geçerli özellik değerlerine göre bir rota girişi oluşturur.</summary>
      <returns>Oluşturulan rota girişi.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Constraints">
      <summary>Rota kısıtlamalarını alır veya ayarlar.</summary>
      <returns>Rota kısıtlamaları.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.DataTokens">
      <summary>Rota veri belirteçlerini alır veya ayarlar.</summary>
      <returns>Rota veri simgeleri.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Defaults">
      <summary>Rota varsayılanlarını alır veya ayarlar.</summary>
      <returns>Rota varsayılanları.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Name">
      <summary>Varsa rota adını alır; aksi takdirde null.</summary>
      <returns>Varsa rota adı; aksi takdirde null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Order">
      <summary>Rota sırasını alır veya ayarlar.</summary>
      <returns>Rota sırası.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Precedence">
      <summary>Rota önceliğini alır veya ayarlar.</summary>
      <returns>Rota önceliği.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>Rotanın eylem veya denetleyici düzeyinde yapılandırıldığını belirten bir değeri alır.</summary>
      <returns>Rota eylem düzeyinde yapılandırıldığında true, rota denetleyici düzeyinde yapılandırıldığında false.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Template">
      <summary>Rota şablonunu alır veya ayarlar.</summary>
      <returns>Rota şablonu.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteFactory">
      <summary>Doğrudan bir dizi eylem tanımlayıcıya rota oluşturan bir üreteç tanımlar (öznitelik rotası).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteFactory.CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)">
      <summary>Doğrudan rota girişi oluşturur.</summary>
      <returns>Doğrudan rota girişi.</returns>
      <param name="context">Rota oluşturmak için kullanılacak bağlam.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteProvider">
      <summary>Doğrudan eylem tanımlayıcılarını (öznitelik rotaları) hedefleyen rotalar için bir sağlayıcı tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Bir denetleyici için doğrudan rotayı alır.</summary>
      <returns>Denetleyici için rota varlığı kümesi.</returns>
      <param name="controllerDescriptor">Denetleyici tanımlayıcısı.</param>
      <param name="actionDescriptors">Eylem tanımlayıcıları.</param>
      <param name="constraintResolver">Satır içi kısıtlama çözümleyici.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRoute">
      <summary>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" />, gelen bir <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesinin belirli bir denetleyici ve eyleme nasıl eşleştirileceğini ifade eden bir rotaya ilişkin arabirimi tanımlar. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Constraints">
      <summary> Rota parametrelerine ilişkin kısıtlamaları alır. </summary>
      <returns>Rota parametrelerine ilişkin kısıtlamalar.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.DataTokens">
      <summary> Bir rotanın bir gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesiyle eşleşip eşleşmediğini belirlemek için doğrudan kullanılmayan ilave veri belirteçlerini alır. </summary>
      <returns>Ek veri belirteçleri.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Defaults">
      <summary> Gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesi tarafından sağlanmamışsa rota parametrelerinin varsayılan değerlerini alır. </summary>
      <returns>Rota parametrelerinin varsayılan değerleri.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary> Rotaya ilişkin &lt;see cref="!:IRouteData" /&gt; değerine bakarak bu rotanın gelen istek için bir eşleştirme olup olmadığını belirler. </summary>
      <returns>Bir rotanın eşleşmesi durumunda &lt;see cref="!:RouteData" /&gt;, aksi taktirde boş.</returns>
      <param name="virtualPathRoot">Sanal yol kökü.</param>
      <param name="request">İstek.</param>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Rotaya ve sağlanan değerlere dayanarak sanal yol verilerini alır.</summary>
      <returns>Sanal yol verileri.</returns>
      <param name="request">İstek iletisi.</param>
      <param name="values">Değerler.</param>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Handler">
      <summary>İsteğin alıcısı olacak ileti işleyicisini alır.</summary>
      <returns>İleti işleyicisi.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.RouteTemplate">
      <summary> Eşleştirilecek URI desenini belirten rota şablonunu alır.  </summary>
      <returns>Rota şablonu.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteConstraint">
      <summary>Temel sınıf rota kısıtlamasını gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteData">
      <summary>Rotayla ilgili bilgi sağlar.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Route">
      <summary>Yönlendirmeyi gösteren nesneyi alır.</summary>
      <returns>Rotayı gösteren nesne.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Values">
      <summary>Yönlendirmeye ilişkin bir URL parametre değerleri ve varsayılan değerler topluluğunu alır.</summary>
      <returns>URL'den ve varsayılan değerlerden ayrıştırılan değerler.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteInfoProvider">
      <summary> Rotayla tanımlamayla ilgili bilgi sağlar. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Name">
      <summary> Oluşturulacak rotanın adını alır. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Order">
      <summary> Rotanın diğer rotalara göre sırasını alır. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Template">
      <summary> Eşleştirilecek URI desenini belirten rota şablonunu alır. </summary>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpVirtualPathData">
      <summary>HTTP rotasına yönelik özellikleri tanımlar.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.Route">
      <summary>HTTP rotasını alır.</summary>
      <returns>HTTP rotası.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.VirtualPath">
      <summary>Geçerli HTTP rotasının sanal yolunu gösteren URI'yi alır.</summary>
      <returns>Geçerli HTTP rotasının sanal yolunu gösteren URI.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IInlineConstraintResolver">
      <summary> Satır içi kısıtlamalarını <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> örnekleri olarak çözümlemek için bir özet tanımlar. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary> Satır içi kısıtlamayı çözümler. </summary>
      <returns>Satır içi kısıtlamanın çözümlendiği <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />.</returns>
      <param name="inlineConstraint">Çözümlenecek satır içi kısıtlama.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IRoutePrefix">
      <summary>Bir rota öneki tanımlar.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IRoutePrefix.Prefix">
      <summary>Rota önekini alır.</summary>
      <returns>Rota öneki.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.RouteEntry">
      <summary>Adlandırılmış bir rotayı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.RouteEntry.#ctor(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>
        <see cref="T:System.Web.Http.Routing.RouteEntry" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="name">Varsa rota adı; aksi takdirde null.</param>
      <param name="route">Rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteEntry.Name">
      <summary>Varsa rota adını alır; aksi takdirde null.</summary>
      <returns>Varsa rota adı; aksi takdirde null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteEntry.Route">
      <summary>Rotayı alır.</summary>
      <returns>Rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.RouteFactoryAttribute">
      <summary>Özel kısıtlamalar içerebilen bir özniteliği temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.Routing.RouteFactoryAttribute" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="template">Rota şablonu.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Constraints">
      <summary>Varsa rota kısıtlamalarını alır; aksi takdirde null.</summary>
      <returns>Varsa rota kısıtlamaları; aksi takdirde null.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)">
      <summary>Rota girişini oluşturur</summary>
      <returns>Oluşturulan rota girişi.</returns>
      <param name="context">Bağlam.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.DataTokens">
      <summary>Varsa rota veri belirteçlerini alır; aksi takdirde null.</summary>
      <returns>Varsa rota veri belirteçleri; aksi takdirde null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Defaults">
      <summary>Varsa rota varsayılanlarını alır; aksi takdirde null.</summary>
      <returns>Varsa rota varsayılanları; aksi takdirde null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Name">
      <summary>Varsa rota adını alır; aksi takdirde null.</summary>
      <returns>Varsa rota adı; aksi takdirde null.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Order">
      <summary>Rota sırasını alır veya ayarlar.</summary>
      <returns>Rota sırası.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Template">
      <summary>Rota şablonunu alır.</summary>
      <returns>Rota şablonu.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.StopRoutingHandler">
      <summary>Yönlendirmenin bir rota şablonu için istekleri işlememesi gerektiğini belirten bir işleyiciyi temsil eder.Bir rota bu sınıfı işleyici olarak sağladığında rotayla eşleşen istekler yok sayılır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.StopRoutingHandler.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.StopRoutingHandler" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.UrlHelper">
      <summary>URL'ler oluşturmak için bir üreteci temsil eder. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> sınıfının yeni bir örneğini başlatır. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="request">Bu örnek için HTTP isteği.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Content(System.String)">
      <summary>Belirtilen yolu kullanarak mutlak URL oluşturur.</summary>
      <returns>Oluşturulan URL.</returns>
      <param name="path">Göreli URL, köklü URL veya sanal yol olabilen URL yolu.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Belirtilen yönlendirmeye ilişkin bir bağlantıyı döndürür.</summary>
      <returns>Belirtilen yönlendirmeye ilişkin bir bağlantı.</returns>
      <param name="routeName">Rotanın adı.</param>
      <param name="routeValues">Bir rota için parametreleri içeren bir nesne.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Object)">
      <summary>Belirtilen yönlendirmeye ilişkin bir bağlantıyı döndürür.</summary>
      <returns>Belirtilen yönlendirmeye ilişkin bir bağlantı.</returns>
      <param name="routeName">Rotanın adı.</param>
      <param name="routeValues">Bir yönlendirme değeri.</param>
    </member>
    <member name="P:System.Web.Http.Routing.UrlHelper.Request">
      <summary>Geçerli <see cref="T:System.Web.Http.Routing.UrlHelper" /> örneği için <see cref="T:System.Net.Http.HttpRequestMessage" /> alır veya ayarlar.</summary>
      <returns>Geçerli örneğin <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesi.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> için yönlendirmeyi döndürür.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> için yönlendirme.</returns>
      <param name="routeName">Rotanın adı.</param>
      <param name="routeValues">Yönlendirme değerlerinin listesi.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Object)">
      <summary>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> için yönlendirmeyi döndürür.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.UrlHelper" /> için yönlendirme.</returns>
      <param name="routeName">Rotanın adı.</param>
      <param name="routeValues">Rota değerleri.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint">
      <summary>Rota parametresini İngilizce alfabesinde A ile Z arasında yalnızca küçük harfler veya büyük harfler içerecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint">
      <summary>Bir rota parametresini yalnızca Boolean değerlerini temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint">
      <summary>Birkaç alt öğe kısıtlamasıyla rotayı kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Http.Routing.IHttpRouteConstraint})">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="constraints">Bu kısıtlamanın eşleşmesi için eşleşmesi gereken alt öğe kısıtlamaları.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Bu kısıtlamanın eşleşmesi için eşleşmesi gereken alt öğe kısıtlamalarını alır.</summary>
      <returns>Bu kısıtlamanın eşleşmesi için eşleşmesi gereken alt öğe kısıtlamaları.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Bir rota parametresini yalnızca <see cref="T:System.DateTime" /> değerlerini temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Yön rotası.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint">
      <summary>Bir rota parametresini yalnızca ondalık değerleri temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DoubleRouteConstraint">
      <summary>Bir rota parametresini yalnızca 64 bit kayan nokta değerlerini temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.FloatRouteConstraint">
      <summary>Bir rota parametresini yalnızca 32 bit kayan nokta değerlerini temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint">
      <summary>Bir rota parametresini yalnızca <see cref="T:System.Guid" /> değerlerini temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.IntRouteConstraint">
      <summary>Bir rota parametresini yalnızca 32 bit tamsayı değerlerini temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.IntRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint">
      <summary>Bir rota parametresini belirtilen bir uzunlukta veya belirtilen uzunluk aralıklarında bir dize olacak şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint" /> sınıfının bir rota parametresini belirtilen uzunlukta bir dize olacak şekilde kısıtlayan yeni bir örneğini başlatır.</summary>
      <param name="minLength">Rota parametresinin en küçük uzunluğu.</param>
      <param name="maxLength">Rota parametresinin en büyük uzunluğu.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Ayarlanmış bir rota parametresi varsa uzunluğunu alır.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Ayarlanmış bir rota parametresi varsa en büyük uzunluğunu alır.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Ayarlanmış bir rota parametresi varsa en küçük uzunluğunu alır.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LongRouteConstraint">
      <summary>Bir rota parametresini yalnızca 64 bit tamsayı değerlerini temsil edecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Bir rota parametresini en büyük uzunluğa sahip bir dize olacak şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="maxLength">En büyük uzunluk.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Rota parametresinin en büyük uzunluğunu alır.</summary>
      <returns>Rota parametresinin en büyük uzunluğu.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxRouteConstraint">
      <summary>Bir rota parametresini en büyük uzunluğa sahip bir tamsayı olacak şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Rota parametresinin en büyük değerini alır.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Bir rota parametresini en büyük uzunluğa sahip bir dize olacak şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="minLength">En küçük uzunluk.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Rota parametresinin en küçük uzunluğunu alır.</summary>
      <returns>Rota parametresinin en küçük uzunluğu.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinRouteConstraint">
      <summary>Bir rota parametresini en küçük değere sahip uzunlukla kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.MinRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="min">Rota parametresinin en küçük değeri.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Rota parametresinin en küçük değerini alır.</summary>
      <returns>Rota parametresinin en küçük değeri.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint">
      <summary>Rotayı isteğe bağlı bir parametre varsayılan değere ayarlandığında bozulmayan bir iç kısıtlamayla kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Http.Routing.IHttpRouteConstraint)">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="innerConstraint">Parametre bir değer içermeyen isteğe bağlı bir parametre değilse eşleştirilecek iç kısıtlama</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Parametre bir değer içermeyen isteğe bağlı bir parametre değilse eşleştirilecek iç kısıtlamayı alır.</summary>
      <returns>Parametre bir değer içermeyen isteğe bağlı bir parametre değilse eşleştirilecek iç kısıtlama.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint">
      <summary>Bir rota parametresini belirtilen değer aralıklarında bir tamsayı olacak şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="min">En az değer.</param>
      <param name="max">En çok değer.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Rota parametresinin en büyük değerini alır.</summary>
      <returns>Rota parametresinin en büyük değeri.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Rota parametresinin en küçük değerini alır.</summary>
      <returns>Rota parametresinin en küçük değeri.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint">
      <summary>Bir rota parametresini normal ifadeyle eşleşecek şekilde kısıtlar.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>
        <see cref="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="pattern">Desen.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Bu örneğin belirtilen bir rotaya eşit olup olmadığını belirler.</summary>
      <returns>Bu örnek belirtilen bir rotaya eşitse true; değilse false şeklindedir.</returns>
      <param name="request">İstek.</param>
      <param name="route">Karşılaştırılacak rota.</param>
      <param name="parameterName">Parametrenin adı.</param>
      <param name="values">Parametre değerleri listesi.</param>
      <param name="routeDirection">Rota yönü.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Eşleştirilecek normal ifade desenini alır.</summary>
      <returns>Eşleştirilecek normal ifade deseni.</returns>
    </member>
    <member name="T:System.Web.Http.Services.Decorator">
      <summary> Bir &lt;see cref="T:System.Web.Http.Services.IDecorator`1" /&gt; tarafından sarılabilen nesnenin en içteki nesnesini alma yöntemini sağlar. </summary>
    </member>
    <member name="M:System.Web.Http.Services.Decorator.GetInner``1(``0)">
      <summary> &lt;see cref="T:System.Web.Http.Services.IDecorator`1" /&gt; uygulamayan en içteki nesneyi alır. </summary>
      <param name="outer">Açılması gereken nesne.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.Services.DefaultServices">
      <summary>
        <see cref="T:System.Web.Http.HttpConfiguration" /> tarafından kullanılan hizmet örneklerine yönelik bir kapsayıcı gösterir.Bu kapsayıcı, çağrıldığında bir <see cref="T:System.ArgumentException" /> oluşturacak rastgele hizmet türleri almak veya ayarlamak için yalnızca bilinen türleri ve yöntemleri destekler.Rastgele türler oluşturmak için lütfen bunun yerine <see cref="T:System.Web.Http.Dependencies.IDependencyResolver" /> kullanın.Bu kapsayıcı için desteklenen türler:        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /><see cref="T:System.Web.Http.Description.IApiExplorer" /><see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /><see cref="T:System.Web.Http.Validation.IBodyModelValidator" /><see cref="T:System.Net.Http.Formatting.IContentNegotiator" /><see cref="T:System.Web.Http.Description.IDocumentationProvider" /><see cref="T:System.Web.Http.Filters.IFilterProvider" /><see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /><see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /><see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /><see cref="T:System.Web.Http.Tracing.ITraceManager" /><see cref="T:System.Web.Http.Tracing.ITraceWriter" /><see cref="T:System.Web.Http.Query.IStructuredQueryBuilder" /><see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /><see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /><see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /><see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />Bunun üzerinde olmayan bir türün bu arabirimdeki bir yönteme geçirilmesi <see cref="T:System.ArgumentException" /> oluşturulmasına neden olur.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Services.DefaultServices" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.Services.DefaultServices" /> sınıfının yeni bir örneğini belirtilen <see cref="T:System.Web.Http.HttpConfiguration" /> nesnesiyle başlatır.</summary>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> nesnesi.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ClearSingle(System.Type)">
      <summary>Varsayılan hizmetlerden tek örnekli bir hizmeti kaldırır.</summary>
      <param name="serviceType">Hizmetin türü.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetService(System.Type)">
      <summary>Belirtilen türde bir hizmeti alır.</summary>
      <returns>Hizmetin ilk örneği veya hizmet bulunamazsa null.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServiceInstances(System.Type)">
      <summary>Verili bir hizmet türünün hizmet nesneleri listesini alır ve hizmet türünü doğrular.</summary>
      <returns>Belirtilen türdeki hizmet nesneleri listesi.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServices(System.Type)">
      <summary>Verili bir hizmet türünün hizmet nesneleri listesini alır.</summary>
      <returns>Belirtilen türdeki hizmet nesneleri listesi veya hizmet bulunamazsa boş bir liste.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.IsSingleService(System.Type)">
      <summary>Bir hizmet türünün tek örnekli bir hizmet mi olduğunu sorgular.</summary>
      <returns>Hizmet türünün en çok bir örneği varsa true; hizmet türü birden çok örneği destekliyorsa false.</returns>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Tek örnekli bir hizmet nesnesini değiştirir.</summary>
      <param name="serviceType">Hizmet türü.</param>
      <param name="service">Önceki örneği değiştiren bir hizmet nesnesi.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ResetCache(System.Type)">
      <summary>Tek bir hizmet türünün arabelleğe alınmış değerlerini değiştirir.</summary>
      <param name="serviceType">Hizmet türü.</param>
    </member>
    <member name="T:System.Web.Http.Services.IDecorator`1">
      <summary> İç donatımlı nesneyi kullanıma sunan bir dekoratör. </summary>
      <typeparam name="T">Bu tür parametresi, değişkenle birlikte kullanılır. Bir başka deyişle, belirttiğiniz türü veya daha fazla türetilmiş herhangi bir türü kullanabilirsiniz. Değişkenle birlikte kullanılabilen ve değişken karşıtı olan tür parametreleri hakkında daha fazla bilgi için, bkz. .</typeparam>
    </member>
    <member name="P:System.Web.Http.Services.IDecorator`1.Inner">
      <summary> İç nesneyi alır. </summary>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceManager">
      <summary>Yöntem girişi/çıkışı ve süre bilgilerini günlüğe kaydetmeye yönelik bir performans izleme sınıfını gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceManager.Initialize(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="T:System.Web.Http.Tracing.ITraceManager" /> sınıfını belirtilen yapılandırmayla başlatır.</summary>
      <param name="configuration">Yapılandırma.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriter">
      <summary>İzlemeyi yazanı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriter.Trace(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> İzleme işlemine yalnızca ve yalnızca belirli bir category ve level öğesinde izin veriliyorsa ayar değerlerinin yeni bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinde izin verilmesi için belirtilen traceAction öğesini çağırır. </summary>
      <param name="request">Geçerli <see cref="T:System.Net.Http.HttpRequestMessage" />.Bu null olabilir ancak bu durumda, sonraki izleme analizinin izlemenin belirli bir istekle ilişkilendirilmesini önler.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.Kullanıcılar kendilerininkini tanımlayabilir.</param>
      <param name="level">Bu izlemenin yazılacağı <see cref="T:System.Web.Http.Tracing.TraceLevel" />.</param>
      <param name="traceAction">İzleme etkinleştirilmişse çağrılacak eylem.Çağrı yapanın, bu eylemde belirtilen <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesine ilişkin alanları doldurması beklenir.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriterExtensions">
      <summary>
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" /> için genişletme yöntemlerini gösterir. </summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Kodunuzdaki hataları belirtilen yazara, isteğe, kategoriye ve özel duruma göre ayıklamanıza yardımcı olan bir dizi yöntem ve özellik sağlar.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Kodunuzdaki hataları belirtilen yazara, isteğe, kategoriye, özel duruma, ileti biçimine ve bağımsız değişkene göre ayıklamanıza yardımcı olan bir dizi yöntem ve özellik sağlar.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Kodunuzdaki hataları belirtilen yazara, isteğe, kategoriye, özel duruma, ileti biçimine ve bağımsız değişkene göre ayıklamanıza yardımcı olan bir dizi yöntem ve özellik sağlar.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Belirtilen yazar, istek, kategori ve özel durumla listede bir hata iletisi görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Belirtilen yazar, istek, kategori, özel durum, ileti biçimi ve bağımsız değişkenle listede bir hata iletisi görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Özel durum.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İletideki bağımsız değişken.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Belirtilen yazar, istek, kategori, ileti biçimi ve bağımsız değişkenle listede bir hata iletisi görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İletideki bağımsız değişken.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Belirtilen yazar, istek, kategori ve özel durumla <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> sınıfında bir hata iletisi görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında görünen özel durum.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Belirtilen yazar, istek, kategori, özel durum, ileti biçimi ve bağımsız değişkenle <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> sınıfında bir hata iletisi görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Özel durum.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Belirtilen yazar, istek, kategori, ileti biçimi ve bağımsız değişkenle <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> sınıfında bir hata iletisi görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>
        <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" /> içinde ayrıntıları görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>
        <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" /> içinde ayrıntıları görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>
        <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" /> içinde ayrıntıları görüntüler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception)">
      <summary>Dinleyiciler koleksiyonundaki izleme dinleyicilerini belirtir.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="level">İzleme düzeyi.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception,System.String,System.Object[])">
      <summary>Dinleyiciler koleksiyonundaki izleme dinleyicilerini belirtir.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="level">İzleme düzeyi.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.Object[])">
      <summary>Dinleyiciler koleksiyonundaki izleme dinleyicilerini belirtir.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="level">İzlemeye ilişkin <see cref="T:System.Web.Http.Tracing.TraceLevel" />.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEnd(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary>Belirtilen bir işlem etrafında hem başlangıç hem bitiş izlemesi izler.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="level">İzlemeye ilişkin <see cref="T:System.Web.Http.Tracing.TraceLevel" />.</param>
      <param name="operatorName">İşlemi gerçekleştiren nesnenin adı.Boş olabilir.</param>
      <param name="operationName">Gerçekleştirilmekte olan işlemin adı.Boş olabilir.</param>
      <param name="beginTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirilmeden önce çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
      <param name="execute">İşlemi gerçekleştirecek <see cref="T:System.Threading.Tasks.Task" /> öğesini döndüren bir &lt;bkz. cref="T:System.Func`1" /&gt;.</param>
      <param name="endTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirildikten sonra çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
      <param name="errorTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirilirken bir hatayla karşılaşılması durumunda çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync``1(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task{``0}},System.Action{System.Web.Http.Tracing.TraceRecord,``0},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Belirtilen bir işlem etrafında hem başlangıç hem bitiş izlemesi izler. </summary>
      <returns>İşlem tarafından döndürülen <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="level">İzlemeye ilişkin <see cref="T:System.Web.Http.Tracing.TraceLevel" />.</param>
      <param name="operatorName">İşlemi gerçekleştiren nesnenin adı.Boş olabilir.</param>
      <param name="operationName">Gerçekleştirilmekte olan işlemin adı.Boş olabilir.</param>
      <param name="beginTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirilmeden önce çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
      <param name="execute">İşlemi gerçekleştirecek <see cref="T:System.Threading.Tasks.Task" /> öğesini döndüren bir &lt;bkz. cref="T:System.Func`1" /&gt;.</param>
      <param name="endTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirildikten sonra çağrılacak <see cref="T:System.Action" />.Tamamlanan görevin sonucu bu eyleme de iletilir.Bu eylem boş olabilir.</param>
      <param name="errorTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirilirken bir hatayla karşılaşılması durumunda çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
      <typeparam name="TResult">
        <see cref="T:System.Threading.Tasks.Task" /> tarafından üretilen sonuç türü.</typeparam>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task},System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Belirtilen bir işlem etrafında hem başlangıç hem bitiş izlemesi izler. </summary>
      <returns>İşlem tarafından döndürülen <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="level">İzlemeye ilişkin <see cref="T:System.Web.Http.Tracing.TraceLevel" />.</param>
      <param name="operatorName">İşlemi gerçekleştiren nesnenin adı.Boş olabilir.</param>
      <param name="operationName">Gerçekleştirilmekte olan işlemin adı.Boş olabilir.</param>
      <param name="beginTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirilmeden önce çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
      <param name="execute">İşlemi gerçekleştirecek <see cref="T:System.Threading.Tasks.Task" /> öğesini döndüren bir &lt;bkz. cref="T:System.Func`1" /&gt;.</param>
      <param name="endTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirildikten sonra çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
      <param name="errorTrace">Belirli bir <see cref="T:System.Web.Http.Tracing.TraceRecord" /> öğesinin doldurulmasına imkan verecek şekilde işlem gerçekleştirilirken bir hatayla karşılaşılması durumunda çağrılacak <see cref="T:System.Action" />.Boş olabilir.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Yürütmenin uyarı düzeyini belirtir.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Yürütmenin uyarı düzeyini belirtir.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="exception">Yürütme sırasında hata oluştu.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Yürütmenin uyarı düzeyini belirtir.</summary>
      <param name="traceWriter">
        <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">İzlemenin ilişkilendirileceği <see cref="T:System.Net.Http.HttpRequestMessage" />.Boş olabilir.</param>
      <param name="category">İzlemeye ilişkin mantıksal kategori.</param>
      <param name="messageFormat">İleti biçimi.</param>
      <param name="messageArguments">İleti bağımsız değişkeni.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceCategories">
      <summary>İzleme kategorilerinin numaralandırmasını belirtir.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ActionCategory">
      <summary>Bir eylem kategorisi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ControllersCategory">
      <summary>Denetleyiciler kategorisi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FiltersCategory">
      <summary>Filtreler kategorisi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FormattingCategory">
      <summary>Biçimlendirme kategorisi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.MessageHandlersCategory">
      <summary>İleti işleyiciler kategorisi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ModelBindingCategory">
      <summary>Model bağlama kategorisi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RequestCategory">
      <summary>İstek kategorisi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RoutingCategory">
      <summary>Yönlendirme kategorisi.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceKind">
      <summary>İzleme işleminin türünü belirtir.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Begin">
      <summary>Bazı işlemlerin başlangıcını işaretleyen izleme.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.End">
      <summary>Bazı işlemlerin bitişini işaretleyen izleme.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Trace">
      <summary>Bir Başlat/Bitir izleme çiftinin parçası olmayan, tek bir izleme.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceLevel">
      <summary>İzleme düzeyinin bir numaralandırmasını belirtir.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Debug">
      <summary>Hata ayıklama izlemeleri için izleme düzeyi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Error">
      <summary>Hata izlemeleri için izleme düzeyi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Fatal">
      <summary>Önemli izlemeler için izleme düzeyi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Info">
      <summary>Bilgi amaçlı izlemeler için izleme düzeyi.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Off">
      <summary>İzleme devre dışı bırakıldı.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Warn">
      <summary>Uyarı izlemeleri için izleme düzeyi.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceRecord">
      <summary>Bir izleme kaydını gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.TraceRecord.#ctor(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel)">
      <summary>
        <see cref="T:System.Web.Http.Tracing.TraceRecord" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="request">İleti isteği.</param>
      <param name="category">İzleme kategorisi.</param>
      <param name="level">İzleme düzeyi.</param>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Category">
      <summary>İzleme kategorisini alır veya ayarlar.</summary>
      <returns>İzleme kategorisi.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Exception">
      <summary>Özel durumu alır veya ayarlar.</summary>
      <returns>Özel durum.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Kind">
      <summary>İzleme türünü alır veya ayarlar.</summary>
      <returns>İzleme türü.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Level">
      <summary>İzleme düzeyini alır veya ayarlar.</summary>
      <returns>İzleme düzeyi.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Message">
      <summary>İletiyi alır veya ayarlar.</summary>
      <returns>İleti.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operation">
      <summary>Gerçekleştirilmekte olan mantıksal işlem adını alır veya ayarlar.</summary>
      <returns>Yapılmakta olan işlemin mantıksal adı.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operator">
      <summary>İşlemi gerçekleştiren nesnenin mantıksal adını alır veya ayarlar.</summary>
      <returns>İşlemi gerçekleştiren nesnenin mantıksal adı.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Properties">
      <summary>Kullanıcı tanımlı isteğe bağlı özellikleri alır.</summary>
      <returns>Kullanıcı tanımlı isteğe bağlı özellikler.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Request">
      <summary>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesini kayıttan alır.</summary>
      <returns>Kayıttan alınan <see cref="T:System.Net.Http.HttpRequestMessage" /> öğesi.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.RequestId">
      <summary>
        <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" /> öğesinden bağıntı kimliğini alır.</summary>
      <returns>
        <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" /> öğesinden alınan ilişkilendirme tanıtıcısı.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Status">
      <summary>
        <see cref="T:System.Net.Http.HttpResponseMessage" /> ile ilişkili <see cref="T:System.Net.HttpStatusCode" /> öğesini alır veya ayarlar.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpResponseMessage" /> ile ilişkili <see cref="T:System.Net.HttpStatusCode" /> öğesi.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Timestamp">
      <summary>Bu izlemenin <see cref="T:System.DateTime" /> bilgisini alır (<see cref="P:System.DateTime.UtcNow" /> yoluyla).</summary>
      <returns>Bu izlemenin <see cref="T:System.DateTime" /> bilgisi (<see cref="P:System.DateTime.UtcNow" /> yoluyla).</returns>
    </member>
    <member name="T:System.Web.Http.Validation.DefaultBodyModelValidator">
      <summary>Bir nesneyi yinelemeli olarak doğrulamak için kullanılan bir sınıfı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Validation.DefaultBodyModelValidator" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.ShouldValidateType(System.Type)">
      <summary>Belirli bir türün örneklerinin doğrulanmasının gerekli olup olmadığını belirler.</summary>
      <returns>Tür doğrulanacaksa true, aksi halde false.</returns>
      <param name="type">Doğrulanacak tür.</param>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary>
        <paramref name="model" /> değerinin geçerli olup olmadığını belirler ve <paramref name="actionContext" /> öğesinin <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> değerine her türlü doğrulama hatasını ekler.</summary>
      <returns>Model geçerliyse true, aksi halde false.</returns>
      <param name="model">Doğrulanacak model.</param>
      <param name="type">Doğrulama için kullanılacak <see cref="T:System.Type" />.</param>
      <param name="metadataProvider">Model meta verilerini sağlamak için kullanılan <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</param>
      <param name="actionContext">Modelin doğrulandığı <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</param>
      <param name="keyPrefix">Doğrulama hatalarına ilişkin anahtara eklenecek <see cref="T:System.String" />.</param>
    </member>
    <member name="T:System.Web.Http.Validation.IBodyModelValidator">
      <summary>Modellerin doğrulanması için bir arabirimi gösterir</summary>
    </member>
    <member name="M:System.Web.Http.Validation.IBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary>Model değerinin geçerli olup olmadığını belirler ve actionContext değerinin <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> öğesine tüm doğrulama hatalarını ekler</summary>
      <returns>Model geçerliyse true, değilse false.</returns>
      <param name="model">Doğrulanacak model.</param>
      <param name="type">Doğrulama için kullanılacak <see cref="T:System.Type" />.</param>
      <param name="metadataProvider">Model meta verilerini sağlamak için kullanılan <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</param>
      <param name="actionContext">Modelin doğrulandığı <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</param>
      <param name="keyPrefix">Doğrulama hatalarına ilişkin anahtara eklenecek <see cref="T:System.String" />.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelStateFormatterLogger">
      <summary>Bu <see cref="T:System.Net.Http.Formatting.IFormatterLogger" />, biçimlendirici hatalarını sağlanan <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />'ne kaydeder.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.String)">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelStateFormatterLogger" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelState">Model durumu.</param>
      <param name="prefix">Önek.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.Exception)">
      <summary>Belirtilen model hatasını günlüğe kaydeder.</summary>
      <param name="errorPath">Hata yolu.</param>
      <param name="exception">Hata iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.String)">
      <summary>Belirtilen model hatasını günlüğe kaydeder.</summary>
      <param name="errorPath">Hata yolu.</param>
      <param name="errorMessage">Hata iletisi.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatedEventArgs">
      <summary>
        <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validated" /> olayı için veriler sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatedEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidatedEventArgs" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="parentNode">Üst düğüm.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ActionContext">
      <summary>Bir eylem için bağlamı alır veya ayarlar.</summary>
      <returns>Bir eylemin bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ParentNode">
      <summary>Bu düğümün üst öğesini alır veya ayarlar.</summary>
      <returns>Bu düğümün üst öğesi.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatingEventArgs">
      <summary>
        <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validating" /> olayı için veriler sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatingEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidatingEventArgs" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="parentNode">Üst düğüm.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ActionContext">
      <summary>Bir eylem için bağlamı alır veya ayarlar.</summary>
      <returns>Bir eylemin bağlamı.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ParentNode">
      <summary>Bu düğümün üst öğesini alır veya ayarlar.</summary>
      <returns>Bu düğümün üst öğesi.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationNode">
      <summary>Model doğrulama bilgileri için bir kapsayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String)">
      <summary>Model meta verilerini ve durum anahtarını kullanarak <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelMetadata">Model meta verileri.</param>
      <param name="modelStateKey">Model durum anahtarı.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidationNode})">
      <summary>Model meta verilerini, model durum anahtarını ve alt model doğrulama düğümlerini kullanarak <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="modelMetadata">Model meta verileri.</param>
      <param name="modelStateKey">Model durum anahtarı.</param>
      <param name="childNodes">Model alt düğümleri.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ChildNodes">
      <summary>Alt düğümleri alır veya ayarlar.</summary>
      <returns>Alt düğümler.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.CombineWith(System.Web.Http.Validation.ModelValidationNode)">
      <summary>Geçerli <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> örneğini belirtilen bir <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> örneği ile birleştirir.</summary>
      <param name="otherNode">Geçerli örnekle birleştirmek için model doğrulama düğümü.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelMetadata">
      <summary>Model meta verilerini alır veya ayarlar.</summary>
      <returns>Model meta verileri.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelStateKey">
      <summary>Model durum anahtarını alır veya ayarlar.</summary>
      <returns>Model durum anahtarı.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.SuppressValidation">
      <summary>Doğrulamanın atlanması gerekip gerekmediğini gösteren bir değeri alır veya ayarlar.</summary>
      <returns>Doğrulamanın atlanması gerekiyorsa true; gerekmiyorsa, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Belirtilen yürütme bağlamını kullanan modeli doğrular.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Belirtilen yürütme bağlamını ve üst düğümü kullanan modeli doğrular.</summary>
      <param name="actionContext">Eylem bağlamı.</param>
      <param name="parentNode">Üst düğüm.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ValidateAllProperties">
      <summary>Modelin tüm özelliklerinin doğrulanması gerekip gerekmediğini gösteren bir değeri alır veya ayarlar.</summary>
      <returns>Modelin tüm özelliklerinin doğrulanması gerekiyorsa true veya doğrulamanın atlanması gerekiyorsa false.</returns>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validated">
      <summary>Model doğrulandığında gerçekleşir.</summary>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validating">
      <summary>Model doğrulanırken gerçekleşir.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector">
      <summary>Üyeyle ilişkili gerekli tüm Model Doğrulayıcıları denetleyerek, gerekli üyelerin seçimini gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="metadataProvider">Meta veri sağlayıcısı.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcılar.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
      <summary>Üyenin doğrulama için gerekip gerekmediğini belirtir.</summary>
      <returns>Üye doğrulama için gerekliyse doğru; tersi durumda, yanlış.</returns>
      <param name="member">Üye.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationResult">
      <summary>Doğrulama sonucu için bir kapsayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationResult.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidationResult" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.MemberName">
      <summary>Üyenin adını alır veya ayarlar.</summary>
      <returns>Üyenin adı.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.Message">
      <summary>Doğrulama sonucu iletisini alır veya ayarlar.</summary>
      <returns>Doğrulama sonucu iletisi.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidator">
      <summary>Doğrulama mantığı uygulamak için bir temel sınıf sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidator" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="validatorProviders">Doğrulayıcı sağlayıcıları.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.GetModelValidator(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Model için bileşik bir model doğrulayıcı döndürür.</summary>
      <returns>Model için bileşik bir model doğrulayıcı.</returns>
      <param name="validatorProviders">Doğrulayıcı sağlayıcılarının numaralandırması.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.IsRequired">
      <summary>Model özelliğinin gerekip gerekmediğini gösteren bir değer alır.</summary>
      <returns>Model özelliği gerekliyse true; değilse, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Belirtilen nesneyi doğrular.</summary>
      <returns>Doğrulama sonuçlarının listesi.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="container">Kapsayıcı.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.ValidatorProviders">
      <summary>Doğrulayıcı sağlayıcıları listesini alır veya ayarlar.</summary>
      <returns>Doğrulayıcı sağlayıcılarının numaralandırması.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatorProvider">
      <summary>Model için doğrulayıcıların bir listesini sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>BU <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> ile ilişkilendirilen doğrulayıcıların listesini alır.</summary>
      <returns>Doğrulayıcıların listesi.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcıları.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider">
      <summary>Doğrulama sağlayıcı uygulayan sınıflar için bir özet sınıf sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Belirtilen tür için bir tür tanımlayıcı alır.</summary>
      <returns>Belirtilen tür için bir tür tanımlayıcı.</returns>
      <param name="type">Doğrulama sağlayıcının türü.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Meta veri ve doğrulayıcı sağlayıcılarını kullanarak modele ilişkin doğrulayıcıları alır.</summary>
      <returns>Modelin doğrulayıcıları.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcılarının numaralandırması.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Meta veri, doğrulayıcı sağlayıcıları ve öznitelik listesini kullanarak modele ilişkin doğrulayıcıları alır.</summary>
      <returns>Modelin doğrulayıcıları.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcılarının numaralandırması.</param>
      <param name="attributes">Öznitelikler listesi.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory">
      <summary>Bir <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" /> örneği oluşturan yöntemi temsil eder.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> öğesinden türetilen öznitelikler için doğrulayıcılar sağlayan bir <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> gerçekleştirmesini gösterir. Ayrıca, <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> öğesini uygulayan türler için de bir doğrulayıcı sağlar. İstemci tarafı doğrulamayı desteklemek için, bu sınıftaki statik yöntemler aracılığıyla veya doğrulama özniteliklerinizin <see cref="T:System.Web.Http.Validation.IClientValidatable" /> öğesini uygulamasını sağlayarak bağdaştırıcılar kaydedebilirsiniz. IClientValidatable öğesini desteklemeye yönelik mantık, <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" /> içinde uygulanır. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Belirtilen meta veri, doğrulayıcı sağlayıcı ve öznitelikleri kullanarak modele ilişkin doğrulayıcıları alır.</summary>
      <returns>Modelin doğrulayıcıları.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcıları.</param>
      <param name="attributes">Öznitelikler.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>İstemci tarafı doğrulama sağlamak için bir bağdaştırıcıyı kaydeder.</summary>
      <param name="attributeType">Doğrulama özniteliğinin türü.</param>
      <param name="adapterType">Bağdaştırıcının türü.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Doğrulama sağlayıcı için bir bağdaştırıcı üreteci kaydeder.</summary>
      <param name="attributeType">Özniteliğin türü.</param>
      <param name="factory">Belirtilen özniteliğin <see cref="T:System.Web.Http.Validation.ModelValidator" /> nesnesini oluşturmak için kullanılacak üreteç.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Varsayılan bağdaştırıcıyı kaydeder.</summary>
      <param name="adapterType">Bağdaştırıcının türü.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Varsayılan bağdaştırıcı üretecini kaydeder.</summary>
      <param name="factory">Varsayılan bağdaştırıcının <see cref="T:System.Web.Http.Validation.ModelValidator" /> nesnesini oluşturmak için kullanılacak üreteç.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> öğesini uygulayan nesneler için varsayılan bağdaştırıcı türünü kaydeder. Bağdaştırıcı türü <see cref="T:System.Web.Http.Validation.ModelValidator" /> öğesinden türemeli ve <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> ile <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> türünde iki parametre alan bir genel oluşturucu içermelidir. </summary>
      <param name="adapterType">Bağdaştırıcının türü.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> öğesini uygulayan nesneler için varsayılan bağdaştırıcı üretecini kaydeder. </summary>
      <param name="factory">Üreteç.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Söz konusu modelType için, <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> öğesini uygulaması gereken bir bağdaştırıcı türü kaydeder. Bağdaştırıcı türü <see cref="T:System.Web.Http.Validation.ModelValidator" /> öğesinden türemeli ve <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> ile <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> türünde iki parametre alan bir genel oluşturucu içermelidir. </summary>
      <param name="modelType">Model türü.</param>
      <param name="adapterType">Bağdaştırıcının türü.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Söz konusu modelType için, <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> öğesini uygulaması gereken bir bağdaştırıcı üreteci kaydeder. </summary>
      <param name="modelType">Model türü.</param>
      <param name="factory">Üreteç.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>
        <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> öğesini temel alan doğrulayıcılar için bir üreteç sağlar.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider">
      <summary>Veri üye modeli için bir doğrulayıcı sağlayıcısını gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Modelin doğrulayıcılarını alır.</summary>
      <returns>Modelin doğrulayıcıları.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcılarının numaralandırması.</param>
      <param name="attributes">Özniteliklerin listesi.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider">
      <summary>Model geçersiz olduğunda özel durumlar oluşturan doğrulayıcılar sağlayan <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> sınıfının bir uygulaması.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Bu <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" /> ile ilişkili bir doğrulayıcılar listesi alır.</summary>
      <returns>Doğrulayıcılar listesi.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcılar.</param>
      <param name="attributes">Öznitelikler listesi.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider">
      <summary>Gerekli üye model doğrulayıcısına ilişkin sağlayıcıyı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.#ctor(System.Net.Http.Formatting.IRequiredMemberSelector)">
      <summary>
        <see cref="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="requiredMemberSelector">Gerekli üye seçici.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Üye modeli için doğrulayıcıyı alır.</summary>
      <returns>Üye modeline ilişkin doğrulayıcı.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="validatorProviders">Doğrulayıcı sağlayıcıları</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator">
      <summary>Bir model doğrulayıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>
        <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="validatorProviders">Doğrulayıcı sağlayıcıları.</param>
      <param name="attribute">Modelin doğrulama özniteliği.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Attribute">
      <summary>Model doğrulayıcı için doğrulama özniteliğini alır veya ayarlar.</summary>
      <returns>Model doğrulayıcı için doğrulama özniteliği.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.IsRequired">
      <summary>Model doğrulamanın gerekip gerekmediğini gösteren bir değer alır.</summary>
      <returns>Model doğrulama gerekliyse true; değilse, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Modeli doğrular ve varsa doğrulama hatalarını döndürür.</summary>
      <returns>Model için doğrulama hata iletilerinin listesi veya hata oluşmadıysa boş bir liste.</returns>
      <param name="metadata">Model meta verileri.</param>
      <param name="container">Modelin kapsayıcısı.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ErrorModelValidator">
      <summary>Bir hatayı temsil etmek için bir <see cref="T:System.Web.Http.Validation.ModelValidator" />.Bu doğrulayıcı gerçek model değerinden bağımsız olarak her zaman bir özel durum oluşturur.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.String)">
      <summary>
        <see cref="T:System.Web.Http.Validation.Validators.ErrorModelValidator" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="validatorProviders">Model doğrulayıcı sağlayıcılarının bir listesi.</param>
      <param name="errorMessage">Özel durumun hata iletisi.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Belirtilen bir nesneyi doğrular.</summary>
      <returns>Doğrulama sonuçlarının bir listesi.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="container">Kapsayıcı.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator">
      <summary>Gerekli üyelere ilişkin <see cref="T:System.Web.Http.Validation.ModelValidator" /> öğesini gösterir. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>
        <see cref="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="validatorProviders">Doğrulayıcı sağlayıcılar.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.IsRequired">
      <summary>Serileştirme motoruna üyenin doğrulama sırasında varolması gerektiğini bildiren bir değer alır veya ayarlar.</summary>
      <returns>Üye gerekliyse doğru; tersi durumda yanlıştır.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Nesnenin geçerliliğini doğrular.</summary>
      <returns>Doğrulama sonuçlarının bir listesi.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="container">Kapsayıcı.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter">
      <summary>Doğrulanabilen bir nesne bağdaştırıcı sağlar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>
        <see cref="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="validatorProviders">Doğrulama sağlayıcı.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Belirtilen nesneyi doğrular.</summary>
      <returns>Doğrulama sonuçlarının listesi.</returns>
      <param name="metadata">Meta veriler.</param>
      <param name="container">Kapsayıcı.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IEnumerableValueProvider">
      <summary>Değerleri <see cref="T:System.Collections.IEnumerable" /> arabirimini uygulayan koleksiyondan gelen değer sağlayıcıları temel sınıfını temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Belirtilen <paramref name="prefix" /> üzerinden anahtarları alır.</summary>
      <returns>Belirtilen <paramref name="prefix" /> üzerindeki anahtarlar.</returns>
      <param name="prefix">Önek.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IUriValueProviderFactory">
      <summary>Gelen <see cref="T:System.Net.Http.HttpRequestMessage" /> iletisinin <see cref="T:System.Uri" /> yoluna erişmek için <see cref="T:System.Web.Http.ValueProviders.IValueProvider" /> oluşturmayı destekleyen herhangi bir <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> tarafından uygulanan arabirimi gösterir.</summary>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IValueProvider">
      <summary>ASP.NET MVC'deki bir değer sağlayıcı için gereken yöntemleri tanımlar.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.ContainsPrefix(System.String)">
      <summary>Koleksiyonun belirtilen prefix öğesini içerip içermediğini belirler.</summary>
      <returns>Koleksiyon belirtilen prefix öğesini içeriyorsa true, aksi halde false şeklindedir.</returns>
      <param name="prefix">Aranacak önek.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.GetValue(System.String)">
      <summary>Belirtilen key öğesini kullanan bir değer nesnesi alır.</summary>
      <returns>Belirtilen anahtar için değer nesnesi veya anahtar bulunamazsa null.</returns>
      <param name="key">Alınacak değer nesnesinin anahtarı.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderAttribute">
      <summary> Bu öznitelik, özel bir <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> belirtmek için kullanılır. </summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type)">
      <summary>Yeni bir <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" /> örneğini başlatır.</summary>
      <param name="valueProviderFactory">Model bağlayıcısının türü.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type[])">
      <summary>Yeni bir <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" /> örneğini başlatır.</summary>
      <param name="valueProviderFactories">Model bağlayıcı türleri dizisi.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Değer sağlayıcı üreteçlerini alır.</summary>
      <returns>Değer sağlayıcı üreteçleri koleksiyonu.</returns>
      <param name="configuration">Bir yapılandırma nesnesi.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderAttribute.ValueProviderFactoryTypes">
      <summary>Değer sağlayıcı üreteci tarafından döndürülen nesne türlerini alır.</summary>
      <returns>Tür koleksiyonu.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderFactory">
      <summary>Değer sağlayıcı nesneler oluşturmak için bir üreteci temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Belirtilen denetleyici bağlamı için bir değer sağlayıcı nesne döndürür.</summary>
      <returns>Değer sağlayıcı nesne.</returns>
      <param name="actionContext">Geçerli HTTP isteğiyle ilgili bilgileri yalıtan bir nesne.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderResult">
      <summary>Bir değeri (form göndermeden veya sorgu dizesinden gibi) bir eylem-yöntem bağımsız değişkeninin özelliğine veya bağımsız değişkenin kendisine bağlamanın sonucunu temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="rawValue">Ham değer.</param>
      <param name="attemptedValue">Denenen değer.</param>
      <param name="culture">Kültür.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.AttemptedValue">
      <summary>Görüntülenmek için bir dizeye dönüştürülen ham değeri alır veya ayarlar.</summary>
      <returns>Görüntülenmek için dizeye dönüştürülen ham değer.</returns>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Bu sonuç ile yalıtılan değeri belirtilen türe dönüştürür.</summary>
      <returns>Dönüştürülen değer.</returns>
      <param name="type">Hedef tür.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Bu sonuç ile yalıtılan değeri, belirtilen kültür bilgilerini kullanarak belirtilen türe dönüştürür.</summary>
      <returns>Dönüştürülen değer.</returns>
      <param name="type">Hedef tür.</param>
      <param name="culture">Dönüştürmedeki kültür.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.Culture">
      <summary>Kültürü alır veya ayarlar.</summary>
      <returns>Kültür.</returns>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.RawValue">
      <summary>Değer sağlayıcı tarafından sağlanan ham değeri alır veya ayarlar.</summary>
      <returns>Değer sağlayıcı tarafından sağlanan ham değer.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider">
      <summary>Değerleri, <see cref="T:System.Collections.IEnumerable" /> arabirimini uygulayan değer sağlayıcıları listesinden gelen bir değer sağlayıcıyı gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor(System.Collections.Generic.IList{System.Web.Http.ValueProviders.IValueProvider})">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="list">Değer sağlayıcılar listesi.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.ContainsPrefix(System.String)">
      <summary>Koleksiyonun belirtilen <paramref name="prefix" /> öğesini içerip içermediğini belirler.</summary>
      <returns>Koleksiyon belirtilen <paramref name="prefix" /> öğesini içeriyorsa true, aksi halde false şeklindedir.</returns>
      <param name="prefix">Aranacak önek.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Belirtilen <paramref name="prefix" /> üzerinden anahtarları alır.</summary>
      <returns>Belirtilen <paramref name="prefix" /> üzerindeki anahtarlar.</returns>
      <param name="prefix">Anahtarların alındığı önek.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetValue(System.String)">
      <summary>Belirtilen <paramref name="key" /> öğesini kullanan bir değer nesnesi alır.</summary>
      <returns>Belirtilen <paramref name="key" /> için değer nesnesi.</returns>
      <param name="key">Alınacak değer nesnesinin anahtarı.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.InsertItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Belirtilen dizinde bulunan koleksiyona öğe ekler.</summary>
      <param name="index">
        <paramref name="item" /> eklenecek sıfır tabanlı dizin.</param>
      <param name="item">Eklenecek nesne.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.SetItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Belirtilen dizindeki öğeyi değiştirir.</summary>
      <param name="index">Değiştirilecek öğenin sıfır tabanlı dizini.</param>
      <param name="item">Belirtilen dizindeki öğe için yeni değer.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory">
      <summary>Değer sağlayıcı nesneleri listesi oluşturmaya yönelik bir üreteç gösterir.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="factories">Değer sağlayıcı üreteçleri koleksiyonu.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Belirtilen denetleyici bağlamı için bir değer sağlayıcı nesneleri listesi alır.</summary>
      <returns>Belirtilen denetleyici bağlamı için bir değer sağlayıcı nesneleri listesi.</returns>
      <param name="actionContext">Geçerli HTTP isteğiyle ilgili bilgileri yalıtan bir nesne.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider">
      <summary>Ad/değer çiftleri için bir değer sağlayıcı.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Globalization.CultureInfo)"></member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="values">Sağlayıcının ad/değer çiftleri.</param>
      <param name="culture">Ad/değer çiftleri için kullanılan kültür.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}},System.Globalization.CultureInfo)">
      <summary>Ad/değer çiftleri sağlamak için bir işlev temsilcisi kullanarak <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="valuesFactory">Ad/değer çiftleri koleksiyonu döndüren biri işlev temsilcisi.</param>
      <param name="culture">Ad/değer çiftleri için kullanılan kültür.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.ContainsPrefix(System.String)">
      <summary>Koleksiyonun belirtilen prefix öğesini içerip içermediğini belirler.</summary>
      <returns>Koleksiyon belirtilen prefix öğesini içeriyorsa true, aksi halde false şeklindedir.</returns>
      <param name="prefix">Aranacak önek.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Anahtarları bir önekten alır.</summary>
      <returns>Anahtarlar.</returns>
      <param name="prefix">Önek.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetValue(System.String)">
      <summary>Belirtilen key öğesini kullanan bir değer nesnesi alır.</summary>
      <returns>Belirtilen key için değer nesnesi.</returns>
      <param name="key">Alınacak değer nesnesinin anahtarı.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider">
      <summary>Bir <see cref="T:System.Collections.Specialized.NameValueCollection" /> nesnesinde bulunan sorgu dizeleri için bir değer sağlayıcıyı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionContext">Geçerli HTTP isteğiyle ilgili bilgileri yalıtan bir nesne.</param>
      <param name="culture">Hedef kültürle ilgili bilgiler içeren bir nesne.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory">
      <summary>Bir sorgu dizesi değer sağlayıcı nesnesinin yeni bir örneğini oluşturmaktan sorumlu bir sınıfı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Belirtilen denetleyici bağlamı için bir değer sağlayıcı nesne alır.</summary>
      <returns>Sorgu dizesi değer sağlayıcı nesne.</returns>
      <param name="actionContext">Geçerli HTTP isteğiyle ilgili bilgileri yalıtan bir nesne.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider">
      <summary>IDictionary(Of TKey, TValue) arabirimini uygulayan bir nesnede bulunan rota verileri için değer sağlayıcıyı temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider" /> sınıfının yeni bir örneğini başlatır.</summary>
      <param name="actionContext">HTTP isteğiyle ilgili bilgileri içeren bir nesne.</param>
      <param name="culture">Hedef kültürle ilgili bilgiler içeren bir nesne.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory">
      <summary>Rota veri değeri sağlayıcı nesneler oluşturmak için bir üreteci temsil eder.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory" /> sınıfının yeni bir örneğini başlatır.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Belirtilen denetleyici bağlamı için bir değer sağlayıcı nesne alır.</summary>
      <returns>Değer sağlayıcı nesne.</returns>
      <param name="actionContext">Geçerli HTTP isteğiyle ilgili bilgileri yalıtan bir nesne.</param>
    </member>
  </members>
</doc>